/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package cn.nd.bigdata.analytics;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
/** github_events */
@org.apache.avro.specific.AvroGenerated
public class github_events extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -713860883507981299L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"github_events\",\"namespace\":\"cn.nd.bigdata.analytics\",\"doc\":\"github_events\",\"fields\":[{\"name\":\"event_id\",\"type\":\"long\",\"doc\":\"event_id\",\"default\":0},{\"name\":\"event_name\",\"type\":\"string\",\"doc\":\"event_name\",\"default\":\"\"},{\"name\":\"event_public\",\"type\":\"boolean\",\"doc\":\"event_public\",\"default\":false},{\"name\":\"event_payload\",\"type\":\"string\",\"doc\":\"event_payload\",\"default\":\"\"},{\"name\":\"event_created_at\",\"type\":{\"type\":\"long\",\"logicalType\":\"timestamp-millis\"},\"doc\":\"event_created_at\",\"default\":0},{\"name\":\"event_received_at\",\"type\":{\"type\":\"long\",\"logicalType\":\"timestamp-millis\"},\"doc\":\"event_received_at\",\"default\":0},{\"name\":\"user_id\",\"type\":\"long\",\"doc\":\"user_id\",\"default\":0},{\"name\":\"user_login\",\"type\":\"string\",\"doc\":\"user_login\",\"default\":\"\"},{\"name\":\"user_gravatar_id\",\"type\":\"string\",\"doc\":\"user_gravatar_id\",\"default\":\"\"},{\"name\":\"user_avatar_url\",\"type\":\"string\",\"doc\":\"user_avatar_url\",\"default\":\"\"},{\"name\":\"user_url\",\"type\":\"string\",\"doc\":\"user_url\",\"default\":\"\"},{\"name\":\"repo_id\",\"type\":\"long\",\"doc\":\"repo_id\",\"default\":0},{\"name\":\"repo_name\",\"type\":\"string\",\"doc\":\"repo_name\",\"default\":\"\"},{\"name\":\"repo_url\",\"type\":\"string\",\"doc\":\"repo_url\",\"default\":\"\"},{\"name\":\"org_id\",\"type\":\"long\",\"doc\":\"org_id\",\"default\":0},{\"name\":\"org_login\",\"type\":\"string\",\"doc\":\"org_login\",\"default\":\"\"},{\"name\":\"org_gravatar_id\",\"type\":\"string\",\"doc\":\"org_gravatar_id\",\"default\":\"\"},{\"name\":\"org_avatar_url\",\"type\":\"string\",\"doc\":\"org_avatar_url\",\"default\":\"\"},{\"name\":\"org_url\",\"type\":\"string\",\"doc\":\"org_url\",\"default\":\"\"},{\"name\":\"time_date\",\"type\":{\"type\":\"int\",\"logicalType\":\"date\"},\"doc\":\"yyyy-MM-dd\",\"default\":0},{\"name\":\"time_date_month\",\"type\":{\"type\":\"int\",\"logicalType\":\"date\"},\"doc\":\"yyyy-MM-dd��ֻ��¼ÿ�µ�һ��\",\"default\":0},{\"name\":\"time_date_week\",\"type\":{\"type\":\"int\",\"logicalType\":\"date\"},\"doc\":\"yyyy-MM-dd����ǰ�������ڵ���һ����¼��������\",\"default\":0},{\"name\":\"time_date_hour\",\"type\":{\"type\":\"long\",\"logicalType\":\"timestamp-millis\"},\"doc\":\"yyyy-MM-dd'T'HH:00:00\",\"default\":0},{\"name\":\"time_date_hour_minute\",\"type\":{\"type\":\"long\",\"logicalType\":\"timestamp-millis\"},\"doc\":\"yyyy-MM-dd'T'HH:mm:00\",\"default\":0},{\"name\":\"time_datetime\",\"type\":{\"type\":\"long\",\"logicalType\":\"timestamp-millis\"},\"doc\":\"yyyy-MM-dd'T'HH:mm:ss\",\"default\":0},{\"name\":\"time_millis\",\"type\":\"long\",\"doc\":\"1970���������\",\"default\":0}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<github_events> ENCODER =
      new BinaryMessageEncoder<github_events>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<github_events> DECODER =
      new BinaryMessageDecoder<github_events>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<github_events> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<github_events> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<github_events>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this github_events to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a github_events from a ByteBuffer. */
  public static github_events fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  /** event_id */
  @Deprecated public long event_id;
  /** event_name */
  @Deprecated public CharSequence event_name;
  /** event_public */
  @Deprecated public boolean event_public;
  /** event_payload */
  @Deprecated public CharSequence event_payload;
  /** event_created_at */
  @Deprecated public org.joda.time.DateTime event_created_at;
  /** event_received_at */
  @Deprecated public org.joda.time.DateTime event_received_at;
  /** user_id */
  @Deprecated public long user_id;
  /** user_login */
  @Deprecated public CharSequence user_login;
  /** user_gravatar_id */
  @Deprecated public CharSequence user_gravatar_id;
  /** user_avatar_url */
  @Deprecated public CharSequence user_avatar_url;
  /** user_url */
  @Deprecated public CharSequence user_url;
  /** repo_id */
  @Deprecated public long repo_id;
  /** repo_name */
  @Deprecated public CharSequence repo_name;
  /** repo_url */
  @Deprecated public CharSequence repo_url;
  /** org_id */
  @Deprecated public long org_id;
  /** org_login */
  @Deprecated public CharSequence org_login;
  /** org_gravatar_id */
  @Deprecated public CharSequence org_gravatar_id;
  /** org_avatar_url */
  @Deprecated public CharSequence org_avatar_url;
  /** org_url */
  @Deprecated public CharSequence org_url;
  /** yyyy-MM-dd */
  @Deprecated public org.joda.time.LocalDate time_date;
  /** yyyy-MM-dd��ֻ��¼ÿ�µ�һ�� */
  @Deprecated public org.joda.time.LocalDate time_date_month;
  /** yyyy-MM-dd����ǰ�������ڵ���һ����¼�������� */
  @Deprecated public org.joda.time.LocalDate time_date_week;
  /** yyyy-MM-dd'T'HH:00:00 */
  @Deprecated public org.joda.time.DateTime time_date_hour;
  /** yyyy-MM-dd'T'HH:mm:00 */
  @Deprecated public org.joda.time.DateTime time_date_hour_minute;
  /** yyyy-MM-dd'T'HH:mm:ss */
  @Deprecated public org.joda.time.DateTime time_datetime;
  /** 1970��������� */
  @Deprecated public long time_millis;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public github_events() {}

  /**
   * All-args constructor.
   * @param event_id event_id
   * @param event_name event_name
   * @param event_public event_public
   * @param event_payload event_payload
   * @param event_created_at event_created_at
   * @param event_received_at event_received_at
   * @param user_id user_id
   * @param user_login user_login
   * @param user_gravatar_id user_gravatar_id
   * @param user_avatar_url user_avatar_url
   * @param user_url user_url
   * @param repo_id repo_id
   * @param repo_name repo_name
   * @param repo_url repo_url
   * @param org_id org_id
   * @param org_login org_login
   * @param org_gravatar_id org_gravatar_id
   * @param org_avatar_url org_avatar_url
   * @param org_url org_url
   * @param time_date yyyy-MM-dd
   * @param time_date_month yyyy-MM-dd��ֻ��¼ÿ�µ�һ��
   * @param time_date_week yyyy-MM-dd����ǰ�������ڵ���һ����¼��������
   * @param time_date_hour yyyy-MM-dd'T'HH:00:00
   * @param time_date_hour_minute yyyy-MM-dd'T'HH:mm:00
   * @param time_datetime yyyy-MM-dd'T'HH:mm:ss
   * @param time_millis 1970���������
   */
  public github_events(Long event_id, CharSequence event_name, Boolean event_public, CharSequence event_payload, org.joda.time.DateTime event_created_at, org.joda.time.DateTime event_received_at, Long user_id, CharSequence user_login, CharSequence user_gravatar_id, CharSequence user_avatar_url, CharSequence user_url, Long repo_id, CharSequence repo_name, CharSequence repo_url, Long org_id, CharSequence org_login, CharSequence org_gravatar_id, CharSequence org_avatar_url, CharSequence org_url, org.joda.time.LocalDate time_date, org.joda.time.LocalDate time_date_month, org.joda.time.LocalDate time_date_week, org.joda.time.DateTime time_date_hour, org.joda.time.DateTime time_date_hour_minute, org.joda.time.DateTime time_datetime, Long time_millis) {
    this.event_id = event_id;
    this.event_name = event_name;
    this.event_public = event_public;
    this.event_payload = event_payload;
    this.event_created_at = event_created_at;
    this.event_received_at = event_received_at;
    this.user_id = user_id;
    this.user_login = user_login;
    this.user_gravatar_id = user_gravatar_id;
    this.user_avatar_url = user_avatar_url;
    this.user_url = user_url;
    this.repo_id = repo_id;
    this.repo_name = repo_name;
    this.repo_url = repo_url;
    this.org_id = org_id;
    this.org_login = org_login;
    this.org_gravatar_id = org_gravatar_id;
    this.org_avatar_url = org_avatar_url;
    this.org_url = org_url;
    this.time_date = time_date;
    this.time_date_month = time_date_month;
    this.time_date_week = time_date_week;
    this.time_date_hour = time_date_hour;
    this.time_date_hour_minute = time_date_hour_minute;
    this.time_datetime = time_datetime;
    this.time_millis = time_millis;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public Object get(int field$) {
    switch (field$) {
    case 0: return event_id;
    case 1: return event_name;
    case 2: return event_public;
    case 3: return event_payload;
    case 4: return event_created_at;
    case 5: return event_received_at;
    case 6: return user_id;
    case 7: return user_login;
    case 8: return user_gravatar_id;
    case 9: return user_avatar_url;
    case 10: return user_url;
    case 11: return repo_id;
    case 12: return repo_name;
    case 13: return repo_url;
    case 14: return org_id;
    case 15: return org_login;
    case 16: return org_gravatar_id;
    case 17: return org_avatar_url;
    case 18: return org_url;
    case 19: return time_date;
    case 20: return time_date_month;
    case 21: return time_date_week;
    case 22: return time_date_hour;
    case 23: return time_date_hour_minute;
    case 24: return time_datetime;
    case 25: return time_millis;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  protected static final org.apache.avro.data.TimeConversions.DateConversion DATE_CONVERSION = new org.apache.avro.data.TimeConversions.DateConversion();
  protected static final org.apache.avro.data.TimeConversions.TimeConversion TIME_CONVERSION = new org.apache.avro.data.TimeConversions.TimeConversion();
  protected static final org.apache.avro.data.TimeConversions.TimestampConversion TIMESTAMP_CONVERSION = new org.apache.avro.data.TimeConversions.TimestampConversion();
  protected static final org.apache.avro.Conversions.DecimalConversion DECIMAL_CONVERSION = new org.apache.avro.Conversions.DecimalConversion();

  private static final org.apache.avro.Conversion<?>[] conversions =
      new org.apache.avro.Conversion<?>[] {
      null,
      null,
      null,
      null,
      TIMESTAMP_CONVERSION,
      TIMESTAMP_CONVERSION,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      DATE_CONVERSION,
      DATE_CONVERSION,
      DATE_CONVERSION,
      TIMESTAMP_CONVERSION,
      TIMESTAMP_CONVERSION,
      TIMESTAMP_CONVERSION,
      null,
      null
  };

  @Override
  public org.apache.avro.Conversion<?> getConversion(int field) {
    return conversions[field];
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, Object value$) {
    switch (field$) {
    case 0: event_id = (Long)value$; break;
    case 1: event_name = (CharSequence)value$; break;
    case 2: event_public = (Boolean)value$; break;
    case 3: event_payload = (CharSequence)value$; break;
    case 4: event_created_at = (org.joda.time.DateTime)value$; break;
    case 5: event_received_at = (org.joda.time.DateTime)value$; break;
    case 6: user_id = (Long)value$; break;
    case 7: user_login = (CharSequence)value$; break;
    case 8: user_gravatar_id = (CharSequence)value$; break;
    case 9: user_avatar_url = (CharSequence)value$; break;
    case 10: user_url = (CharSequence)value$; break;
    case 11: repo_id = (Long)value$; break;
    case 12: repo_name = (CharSequence)value$; break;
    case 13: repo_url = (CharSequence)value$; break;
    case 14: org_id = (Long)value$; break;
    case 15: org_login = (CharSequence)value$; break;
    case 16: org_gravatar_id = (CharSequence)value$; break;
    case 17: org_avatar_url = (CharSequence)value$; break;
    case 18: org_url = (CharSequence)value$; break;
    case 19: time_date = (org.joda.time.LocalDate)value$; break;
    case 20: time_date_month = (org.joda.time.LocalDate)value$; break;
    case 21: time_date_week = (org.joda.time.LocalDate)value$; break;
    case 22: time_date_hour = (org.joda.time.DateTime)value$; break;
    case 23: time_date_hour_minute = (org.joda.time.DateTime)value$; break;
    case 24: time_datetime = (org.joda.time.DateTime)value$; break;
    case 25: time_millis = (Long)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'event_id' field.
   * @return event_id
   */
  public Long getEventId() {
    return event_id;
  }

  /**
   * Sets the value of the 'event_id' field.
   * event_id
   * @param value the value to set.
   */
  public void setEventId(Long value) {
    this.event_id = value;
  }

  /**
   * Gets the value of the 'event_name' field.
   * @return event_name
   */
  public CharSequence getEventName() {
    return event_name;
  }

  /**
   * Sets the value of the 'event_name' field.
   * event_name
   * @param value the value to set.
   */
  public void setEventName(CharSequence value) {
    this.event_name = value;
  }

  /**
   * Gets the value of the 'event_public' field.
   * @return event_public
   */
  public Boolean getEventPublic() {
    return event_public;
  }

  /**
   * Sets the value of the 'event_public' field.
   * event_public
   * @param value the value to set.
   */
  public void setEventPublic(Boolean value) {
    this.event_public = value;
  }

  /**
   * Gets the value of the 'event_payload' field.
   * @return event_payload
   */
  public CharSequence getEventPayload() {
    return event_payload;
  }

  /**
   * Sets the value of the 'event_payload' field.
   * event_payload
   * @param value the value to set.
   */
  public void setEventPayload(CharSequence value) {
    this.event_payload = value;
  }

  /**
   * Gets the value of the 'event_created_at' field.
   * @return event_created_at
   */
  public org.joda.time.DateTime getEventCreatedAt() {
    return event_created_at;
  }

  /**
   * Sets the value of the 'event_created_at' field.
   * event_created_at
   * @param value the value to set.
   */
  public void setEventCreatedAt(org.joda.time.DateTime value) {
    this.event_created_at = value;
  }

  /**
   * Gets the value of the 'event_received_at' field.
   * @return event_received_at
   */
  public org.joda.time.DateTime getEventReceivedAt() {
    return event_received_at;
  }

  /**
   * Sets the value of the 'event_received_at' field.
   * event_received_at
   * @param value the value to set.
   */
  public void setEventReceivedAt(org.joda.time.DateTime value) {
    this.event_received_at = value;
  }

  /**
   * Gets the value of the 'user_id' field.
   * @return user_id
   */
  public Long getUserId() {
    return user_id;
  }

  /**
   * Sets the value of the 'user_id' field.
   * user_id
   * @param value the value to set.
   */
  public void setUserId(Long value) {
    this.user_id = value;
  }

  /**
   * Gets the value of the 'user_login' field.
   * @return user_login
   */
  public CharSequence getUserLogin() {
    return user_login;
  }

  /**
   * Sets the value of the 'user_login' field.
   * user_login
   * @param value the value to set.
   */
  public void setUserLogin(CharSequence value) {
    this.user_login = value;
  }

  /**
   * Gets the value of the 'user_gravatar_id' field.
   * @return user_gravatar_id
   */
  public CharSequence getUserGravatarId() {
    return user_gravatar_id;
  }

  /**
   * Sets the value of the 'user_gravatar_id' field.
   * user_gravatar_id
   * @param value the value to set.
   */
  public void setUserGravatarId(CharSequence value) {
    this.user_gravatar_id = value;
  }

  /**
   * Gets the value of the 'user_avatar_url' field.
   * @return user_avatar_url
   */
  public CharSequence getUserAvatarUrl() {
    return user_avatar_url;
  }

  /**
   * Sets the value of the 'user_avatar_url' field.
   * user_avatar_url
   * @param value the value to set.
   */
  public void setUserAvatarUrl(CharSequence value) {
    this.user_avatar_url = value;
  }

  /**
   * Gets the value of the 'user_url' field.
   * @return user_url
   */
  public CharSequence getUserUrl() {
    return user_url;
  }

  /**
   * Sets the value of the 'user_url' field.
   * user_url
   * @param value the value to set.
   */
  public void setUserUrl(CharSequence value) {
    this.user_url = value;
  }

  /**
   * Gets the value of the 'repo_id' field.
   * @return repo_id
   */
  public Long getRepoId() {
    return repo_id;
  }

  /**
   * Sets the value of the 'repo_id' field.
   * repo_id
   * @param value the value to set.
   */
  public void setRepoId(Long value) {
    this.repo_id = value;
  }

  /**
   * Gets the value of the 'repo_name' field.
   * @return repo_name
   */
  public CharSequence getRepoName() {
    return repo_name;
  }

  /**
   * Sets the value of the 'repo_name' field.
   * repo_name
   * @param value the value to set.
   */
  public void setRepoName(CharSequence value) {
    this.repo_name = value;
  }

  /**
   * Gets the value of the 'repo_url' field.
   * @return repo_url
   */
  public CharSequence getRepoUrl() {
    return repo_url;
  }

  /**
   * Sets the value of the 'repo_url' field.
   * repo_url
   * @param value the value to set.
   */
  public void setRepoUrl(CharSequence value) {
    this.repo_url = value;
  }

  /**
   * Gets the value of the 'org_id' field.
   * @return org_id
   */
  public Long getOrgId() {
    return org_id;
  }

  /**
   * Sets the value of the 'org_id' field.
   * org_id
   * @param value the value to set.
   */
  public void setOrgId(Long value) {
    this.org_id = value;
  }

  /**
   * Gets the value of the 'org_login' field.
   * @return org_login
   */
  public CharSequence getOrgLogin() {
    return org_login;
  }

  /**
   * Sets the value of the 'org_login' field.
   * org_login
   * @param value the value to set.
   */
  public void setOrgLogin(CharSequence value) {
    this.org_login = value;
  }

  /**
   * Gets the value of the 'org_gravatar_id' field.
   * @return org_gravatar_id
   */
  public CharSequence getOrgGravatarId() {
    return org_gravatar_id;
  }

  /**
   * Sets the value of the 'org_gravatar_id' field.
   * org_gravatar_id
   * @param value the value to set.
   */
  public void setOrgGravatarId(CharSequence value) {
    this.org_gravatar_id = value;
  }

  /**
   * Gets the value of the 'org_avatar_url' field.
   * @return org_avatar_url
   */
  public CharSequence getOrgAvatarUrl() {
    return org_avatar_url;
  }

  /**
   * Sets the value of the 'org_avatar_url' field.
   * org_avatar_url
   * @param value the value to set.
   */
  public void setOrgAvatarUrl(CharSequence value) {
    this.org_avatar_url = value;
  }

  /**
   * Gets the value of the 'org_url' field.
   * @return org_url
   */
  public CharSequence getOrgUrl() {
    return org_url;
  }

  /**
   * Sets the value of the 'org_url' field.
   * org_url
   * @param value the value to set.
   */
  public void setOrgUrl(CharSequence value) {
    this.org_url = value;
  }

  /**
   * Gets the value of the 'time_date' field.
   * @return yyyy-MM-dd
   */
  public org.joda.time.LocalDate getTimeDate() {
    return time_date;
  }

  /**
   * Sets the value of the 'time_date' field.
   * yyyy-MM-dd
   * @param value the value to set.
   */
  public void setTimeDate(org.joda.time.LocalDate value) {
    this.time_date = value;
  }

  /**
   * Gets the value of the 'time_date_month' field.
   * @return yyyy-MM-dd��ֻ��¼ÿ�µ�һ��
   */
  public org.joda.time.LocalDate getTimeDateMonth() {
    return time_date_month;
  }

  /**
   * Sets the value of the 'time_date_month' field.
   * yyyy-MM-dd��ֻ��¼ÿ�µ�һ��
   * @param value the value to set.
   */
  public void setTimeDateMonth(org.joda.time.LocalDate value) {
    this.time_date_month = value;
  }

  /**
   * Gets the value of the 'time_date_week' field.
   * @return yyyy-MM-dd����ǰ�������ڵ���һ����¼��������
   */
  public org.joda.time.LocalDate getTimeDateWeek() {
    return time_date_week;
  }

  /**
   * Sets the value of the 'time_date_week' field.
   * yyyy-MM-dd����ǰ�������ڵ���һ����¼��������
   * @param value the value to set.
   */
  public void setTimeDateWeek(org.joda.time.LocalDate value) {
    this.time_date_week = value;
  }

  /**
   * Gets the value of the 'time_date_hour' field.
   * @return yyyy-MM-dd'T'HH:00:00
   */
  public org.joda.time.DateTime getTimeDateHour() {
    return time_date_hour;
  }

  /**
   * Sets the value of the 'time_date_hour' field.
   * yyyy-MM-dd'T'HH:00:00
   * @param value the value to set.
   */
  public void setTimeDateHour(org.joda.time.DateTime value) {
    this.time_date_hour = value;
  }

  /**
   * Gets the value of the 'time_date_hour_minute' field.
   * @return yyyy-MM-dd'T'HH:mm:00
   */
  public org.joda.time.DateTime getTimeDateHourMinute() {
    return time_date_hour_minute;
  }

  /**
   * Sets the value of the 'time_date_hour_minute' field.
   * yyyy-MM-dd'T'HH:mm:00
   * @param value the value to set.
   */
  public void setTimeDateHourMinute(org.joda.time.DateTime value) {
    this.time_date_hour_minute = value;
  }

  /**
   * Gets the value of the 'time_datetime' field.
   * @return yyyy-MM-dd'T'HH:mm:ss
   */
  public org.joda.time.DateTime getTimeDatetime() {
    return time_datetime;
  }

  /**
   * Sets the value of the 'time_datetime' field.
   * yyyy-MM-dd'T'HH:mm:ss
   * @param value the value to set.
   */
  public void setTimeDatetime(org.joda.time.DateTime value) {
    this.time_datetime = value;
  }

  /**
   * Gets the value of the 'time_millis' field.
   * @return 1970���������
   */
  public Long getTimeMillis() {
    return time_millis;
  }

  /**
   * Sets the value of the 'time_millis' field.
   * 1970���������
   * @param value the value to set.
   */
  public void setTimeMillis(Long value) {
    this.time_millis = value;
  }

  /**
   * Creates a new github_events RecordBuilder.
   * @return A new github_events RecordBuilder
   */
  public static Builder newBuilder() {
    return new Builder();
  }

  /**
   * Creates a new github_events RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new github_events RecordBuilder
   */
  public static Builder newBuilder(Builder other) {
    return new Builder(other);
  }

  /**
   * Creates a new github_events RecordBuilder by copying an existing github_events instance.
   * @param other The existing instance to copy.
   * @return A new github_events RecordBuilder
   */
  public static Builder newBuilder(github_events other) {
    return new Builder(other);
  }

  /**
   * RecordBuilder for github_events instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<github_events>
    implements org.apache.avro.data.RecordBuilder<github_events> {

    /** event_id */
    private long event_id;
    /** event_name */
    private CharSequence event_name;
    /** event_public */
    private boolean event_public;
    /** event_payload */
    private CharSequence event_payload;
    /** event_created_at */
    private org.joda.time.DateTime event_created_at;
    /** event_received_at */
    private org.joda.time.DateTime event_received_at;
    /** user_id */
    private long user_id;
    /** user_login */
    private CharSequence user_login;
    /** user_gravatar_id */
    private CharSequence user_gravatar_id;
    /** user_avatar_url */
    private CharSequence user_avatar_url;
    /** user_url */
    private CharSequence user_url;
    /** repo_id */
    private long repo_id;
    /** repo_name */
    private CharSequence repo_name;
    /** repo_url */
    private CharSequence repo_url;
    /** org_id */
    private long org_id;
    /** org_login */
    private CharSequence org_login;
    /** org_gravatar_id */
    private CharSequence org_gravatar_id;
    /** org_avatar_url */
    private CharSequence org_avatar_url;
    /** org_url */
    private CharSequence org_url;
    /** yyyy-MM-dd */
    private org.joda.time.LocalDate time_date;
    /** yyyy-MM-dd��ֻ��¼ÿ�µ�һ�� */
    private org.joda.time.LocalDate time_date_month;
    /** yyyy-MM-dd����ǰ�������ڵ���һ����¼�������� */
    private org.joda.time.LocalDate time_date_week;
    /** yyyy-MM-dd'T'HH:00:00 */
    private org.joda.time.DateTime time_date_hour;
    /** yyyy-MM-dd'T'HH:mm:00 */
    private org.joda.time.DateTime time_date_hour_minute;
    /** yyyy-MM-dd'T'HH:mm:ss */
    private org.joda.time.DateTime time_datetime;
    /** 1970��������� */
    private long time_millis;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.event_id)) {
        this.event_id = data().deepCopy(fields()[0].schema(), other.event_id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.event_name)) {
        this.event_name = data().deepCopy(fields()[1].schema(), other.event_name);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.event_public)) {
        this.event_public = data().deepCopy(fields()[2].schema(), other.event_public);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.event_payload)) {
        this.event_payload = data().deepCopy(fields()[3].schema(), other.event_payload);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.event_created_at)) {
        this.event_created_at = data().deepCopy(fields()[4].schema(), other.event_created_at);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.event_received_at)) {
        this.event_received_at = data().deepCopy(fields()[5].schema(), other.event_received_at);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.user_id)) {
        this.user_id = data().deepCopy(fields()[6].schema(), other.user_id);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.user_login)) {
        this.user_login = data().deepCopy(fields()[7].schema(), other.user_login);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.user_gravatar_id)) {
        this.user_gravatar_id = data().deepCopy(fields()[8].schema(), other.user_gravatar_id);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.user_avatar_url)) {
        this.user_avatar_url = data().deepCopy(fields()[9].schema(), other.user_avatar_url);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.user_url)) {
        this.user_url = data().deepCopy(fields()[10].schema(), other.user_url);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.repo_id)) {
        this.repo_id = data().deepCopy(fields()[11].schema(), other.repo_id);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.repo_name)) {
        this.repo_name = data().deepCopy(fields()[12].schema(), other.repo_name);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.repo_url)) {
        this.repo_url = data().deepCopy(fields()[13].schema(), other.repo_url);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.org_id)) {
        this.org_id = data().deepCopy(fields()[14].schema(), other.org_id);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.org_login)) {
        this.org_login = data().deepCopy(fields()[15].schema(), other.org_login);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.org_gravatar_id)) {
        this.org_gravatar_id = data().deepCopy(fields()[16].schema(), other.org_gravatar_id);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.org_avatar_url)) {
        this.org_avatar_url = data().deepCopy(fields()[17].schema(), other.org_avatar_url);
        fieldSetFlags()[17] = true;
      }
      if (isValidValue(fields()[18], other.org_url)) {
        this.org_url = data().deepCopy(fields()[18].schema(), other.org_url);
        fieldSetFlags()[18] = true;
      }
      if (isValidValue(fields()[19], other.time_date)) {
        this.time_date = data().deepCopy(fields()[19].schema(), other.time_date);
        fieldSetFlags()[19] = true;
      }
      if (isValidValue(fields()[20], other.time_date_month)) {
        this.time_date_month = data().deepCopy(fields()[20].schema(), other.time_date_month);
        fieldSetFlags()[20] = true;
      }
      if (isValidValue(fields()[21], other.time_date_week)) {
        this.time_date_week = data().deepCopy(fields()[21].schema(), other.time_date_week);
        fieldSetFlags()[21] = true;
      }
      if (isValidValue(fields()[22], other.time_date_hour)) {
        this.time_date_hour = data().deepCopy(fields()[22].schema(), other.time_date_hour);
        fieldSetFlags()[22] = true;
      }
      if (isValidValue(fields()[23], other.time_date_hour_minute)) {
        this.time_date_hour_minute = data().deepCopy(fields()[23].schema(), other.time_date_hour_minute);
        fieldSetFlags()[23] = true;
      }
      if (isValidValue(fields()[24], other.time_datetime)) {
        this.time_datetime = data().deepCopy(fields()[24].schema(), other.time_datetime);
        fieldSetFlags()[24] = true;
      }
      if (isValidValue(fields()[25], other.time_millis)) {
        this.time_millis = data().deepCopy(fields()[25].schema(), other.time_millis);
        fieldSetFlags()[25] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing github_events instance
     * @param other The existing instance to copy.
     */
    private Builder(github_events other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.event_id)) {
        this.event_id = data().deepCopy(fields()[0].schema(), other.event_id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.event_name)) {
        this.event_name = data().deepCopy(fields()[1].schema(), other.event_name);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.event_public)) {
        this.event_public = data().deepCopy(fields()[2].schema(), other.event_public);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.event_payload)) {
        this.event_payload = data().deepCopy(fields()[3].schema(), other.event_payload);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.event_created_at)) {
        this.event_created_at = data().deepCopy(fields()[4].schema(), other.event_created_at);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.event_received_at)) {
        this.event_received_at = data().deepCopy(fields()[5].schema(), other.event_received_at);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.user_id)) {
        this.user_id = data().deepCopy(fields()[6].schema(), other.user_id);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.user_login)) {
        this.user_login = data().deepCopy(fields()[7].schema(), other.user_login);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.user_gravatar_id)) {
        this.user_gravatar_id = data().deepCopy(fields()[8].schema(), other.user_gravatar_id);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.user_avatar_url)) {
        this.user_avatar_url = data().deepCopy(fields()[9].schema(), other.user_avatar_url);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.user_url)) {
        this.user_url = data().deepCopy(fields()[10].schema(), other.user_url);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.repo_id)) {
        this.repo_id = data().deepCopy(fields()[11].schema(), other.repo_id);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.repo_name)) {
        this.repo_name = data().deepCopy(fields()[12].schema(), other.repo_name);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.repo_url)) {
        this.repo_url = data().deepCopy(fields()[13].schema(), other.repo_url);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.org_id)) {
        this.org_id = data().deepCopy(fields()[14].schema(), other.org_id);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.org_login)) {
        this.org_login = data().deepCopy(fields()[15].schema(), other.org_login);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.org_gravatar_id)) {
        this.org_gravatar_id = data().deepCopy(fields()[16].schema(), other.org_gravatar_id);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.org_avatar_url)) {
        this.org_avatar_url = data().deepCopy(fields()[17].schema(), other.org_avatar_url);
        fieldSetFlags()[17] = true;
      }
      if (isValidValue(fields()[18], other.org_url)) {
        this.org_url = data().deepCopy(fields()[18].schema(), other.org_url);
        fieldSetFlags()[18] = true;
      }
      if (isValidValue(fields()[19], other.time_date)) {
        this.time_date = data().deepCopy(fields()[19].schema(), other.time_date);
        fieldSetFlags()[19] = true;
      }
      if (isValidValue(fields()[20], other.time_date_month)) {
        this.time_date_month = data().deepCopy(fields()[20].schema(), other.time_date_month);
        fieldSetFlags()[20] = true;
      }
      if (isValidValue(fields()[21], other.time_date_week)) {
        this.time_date_week = data().deepCopy(fields()[21].schema(), other.time_date_week);
        fieldSetFlags()[21] = true;
      }
      if (isValidValue(fields()[22], other.time_date_hour)) {
        this.time_date_hour = data().deepCopy(fields()[22].schema(), other.time_date_hour);
        fieldSetFlags()[22] = true;
      }
      if (isValidValue(fields()[23], other.time_date_hour_minute)) {
        this.time_date_hour_minute = data().deepCopy(fields()[23].schema(), other.time_date_hour_minute);
        fieldSetFlags()[23] = true;
      }
      if (isValidValue(fields()[24], other.time_datetime)) {
        this.time_datetime = data().deepCopy(fields()[24].schema(), other.time_datetime);
        fieldSetFlags()[24] = true;
      }
      if (isValidValue(fields()[25], other.time_millis)) {
        this.time_millis = data().deepCopy(fields()[25].schema(), other.time_millis);
        fieldSetFlags()[25] = true;
      }
    }

    /**
      * Gets the value of the 'event_id' field.
      * event_id
      * @return The value.
      */
    public Long getEventId() {
      return event_id;
    }

    /**
      * Sets the value of the 'event_id' field.
      * event_id
      * @param value The value of 'event_id'.
      * @return This builder.
      */
    public Builder setEventId(long value) {
      validate(fields()[0], value);
      this.event_id = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'event_id' field has been set.
      * event_id
      * @return True if the 'event_id' field has been set, false otherwise.
      */
    public boolean hasEventId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'event_id' field.
      * event_id
      * @return This builder.
      */
    public Builder clearEventId() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'event_name' field.
      * event_name
      * @return The value.
      */
    public CharSequence getEventName() {
      return event_name;
    }

    /**
      * Sets the value of the 'event_name' field.
      * event_name
      * @param value The value of 'event_name'.
      * @return This builder.
      */
    public Builder setEventName(CharSequence value) {
      validate(fields()[1], value);
      this.event_name = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'event_name' field has been set.
      * event_name
      * @return True if the 'event_name' field has been set, false otherwise.
      */
    public boolean hasEventName() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'event_name' field.
      * event_name
      * @return This builder.
      */
    public Builder clearEventName() {
      event_name = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'event_public' field.
      * event_public
      * @return The value.
      */
    public Boolean getEventPublic() {
      return event_public;
    }

    /**
      * Sets the value of the 'event_public' field.
      * event_public
      * @param value The value of 'event_public'.
      * @return This builder.
      */
    public Builder setEventPublic(boolean value) {
      validate(fields()[2], value);
      this.event_public = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'event_public' field has been set.
      * event_public
      * @return True if the 'event_public' field has been set, false otherwise.
      */
    public boolean hasEventPublic() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'event_public' field.
      * event_public
      * @return This builder.
      */
    public Builder clearEventPublic() {
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'event_payload' field.
      * event_payload
      * @return The value.
      */
    public CharSequence getEventPayload() {
      return event_payload;
    }

    /**
      * Sets the value of the 'event_payload' field.
      * event_payload
      * @param value The value of 'event_payload'.
      * @return This builder.
      */
    public Builder setEventPayload(CharSequence value) {
      validate(fields()[3], value);
      this.event_payload = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'event_payload' field has been set.
      * event_payload
      * @return True if the 'event_payload' field has been set, false otherwise.
      */
    public boolean hasEventPayload() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'event_payload' field.
      * event_payload
      * @return This builder.
      */
    public Builder clearEventPayload() {
      event_payload = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'event_created_at' field.
      * event_created_at
      * @return The value.
      */
    public org.joda.time.DateTime getEventCreatedAt() {
      return event_created_at;
    }

    /**
      * Sets the value of the 'event_created_at' field.
      * event_created_at
      * @param value The value of 'event_created_at'.
      * @return This builder.
      */
    public Builder setEventCreatedAt(org.joda.time.DateTime value) {
      validate(fields()[4], value);
      this.event_created_at = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'event_created_at' field has been set.
      * event_created_at
      * @return True if the 'event_created_at' field has been set, false otherwise.
      */
    public boolean hasEventCreatedAt() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'event_created_at' field.
      * event_created_at
      * @return This builder.
      */
    public Builder clearEventCreatedAt() {
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'event_received_at' field.
      * event_received_at
      * @return The value.
      */
    public org.joda.time.DateTime getEventReceivedAt() {
      return event_received_at;
    }

    /**
      * Sets the value of the 'event_received_at' field.
      * event_received_at
      * @param value The value of 'event_received_at'.
      * @return This builder.
      */
    public Builder setEventReceivedAt(org.joda.time.DateTime value) {
      validate(fields()[5], value);
      this.event_received_at = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'event_received_at' field has been set.
      * event_received_at
      * @return True if the 'event_received_at' field has been set, false otherwise.
      */
    public boolean hasEventReceivedAt() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'event_received_at' field.
      * event_received_at
      * @return This builder.
      */
    public Builder clearEventReceivedAt() {
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'user_id' field.
      * user_id
      * @return The value.
      */
    public Long getUserId() {
      return user_id;
    }

    /**
      * Sets the value of the 'user_id' field.
      * user_id
      * @param value The value of 'user_id'.
      * @return This builder.
      */
    public Builder setUserId(long value) {
      validate(fields()[6], value);
      this.user_id = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'user_id' field has been set.
      * user_id
      * @return True if the 'user_id' field has been set, false otherwise.
      */
    public boolean hasUserId() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'user_id' field.
      * user_id
      * @return This builder.
      */
    public Builder clearUserId() {
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'user_login' field.
      * user_login
      * @return The value.
      */
    public CharSequence getUserLogin() {
      return user_login;
    }

    /**
      * Sets the value of the 'user_login' field.
      * user_login
      * @param value The value of 'user_login'.
      * @return This builder.
      */
    public Builder setUserLogin(CharSequence value) {
      validate(fields()[7], value);
      this.user_login = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'user_login' field has been set.
      * user_login
      * @return True if the 'user_login' field has been set, false otherwise.
      */
    public boolean hasUserLogin() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'user_login' field.
      * user_login
      * @return This builder.
      */
    public Builder clearUserLogin() {
      user_login = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'user_gravatar_id' field.
      * user_gravatar_id
      * @return The value.
      */
    public CharSequence getUserGravatarId() {
      return user_gravatar_id;
    }

    /**
      * Sets the value of the 'user_gravatar_id' field.
      * user_gravatar_id
      * @param value The value of 'user_gravatar_id'.
      * @return This builder.
      */
    public Builder setUserGravatarId(CharSequence value) {
      validate(fields()[8], value);
      this.user_gravatar_id = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'user_gravatar_id' field has been set.
      * user_gravatar_id
      * @return True if the 'user_gravatar_id' field has been set, false otherwise.
      */
    public boolean hasUserGravatarId() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'user_gravatar_id' field.
      * user_gravatar_id
      * @return This builder.
      */
    public Builder clearUserGravatarId() {
      user_gravatar_id = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'user_avatar_url' field.
      * user_avatar_url
      * @return The value.
      */
    public CharSequence getUserAvatarUrl() {
      return user_avatar_url;
    }

    /**
      * Sets the value of the 'user_avatar_url' field.
      * user_avatar_url
      * @param value The value of 'user_avatar_url'.
      * @return This builder.
      */
    public Builder setUserAvatarUrl(CharSequence value) {
      validate(fields()[9], value);
      this.user_avatar_url = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'user_avatar_url' field has been set.
      * user_avatar_url
      * @return True if the 'user_avatar_url' field has been set, false otherwise.
      */
    public boolean hasUserAvatarUrl() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'user_avatar_url' field.
      * user_avatar_url
      * @return This builder.
      */
    public Builder clearUserAvatarUrl() {
      user_avatar_url = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'user_url' field.
      * user_url
      * @return The value.
      */
    public CharSequence getUserUrl() {
      return user_url;
    }

    /**
      * Sets the value of the 'user_url' field.
      * user_url
      * @param value The value of 'user_url'.
      * @return This builder.
      */
    public Builder setUserUrl(CharSequence value) {
      validate(fields()[10], value);
      this.user_url = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'user_url' field has been set.
      * user_url
      * @return True if the 'user_url' field has been set, false otherwise.
      */
    public boolean hasUserUrl() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'user_url' field.
      * user_url
      * @return This builder.
      */
    public Builder clearUserUrl() {
      user_url = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'repo_id' field.
      * repo_id
      * @return The value.
      */
    public Long getRepoId() {
      return repo_id;
    }

    /**
      * Sets the value of the 'repo_id' field.
      * repo_id
      * @param value The value of 'repo_id'.
      * @return This builder.
      */
    public Builder setRepoId(long value) {
      validate(fields()[11], value);
      this.repo_id = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'repo_id' field has been set.
      * repo_id
      * @return True if the 'repo_id' field has been set, false otherwise.
      */
    public boolean hasRepoId() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'repo_id' field.
      * repo_id
      * @return This builder.
      */
    public Builder clearRepoId() {
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'repo_name' field.
      * repo_name
      * @return The value.
      */
    public CharSequence getRepoName() {
      return repo_name;
    }

    /**
      * Sets the value of the 'repo_name' field.
      * repo_name
      * @param value The value of 'repo_name'.
      * @return This builder.
      */
    public Builder setRepoName(CharSequence value) {
      validate(fields()[12], value);
      this.repo_name = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
      * Checks whether the 'repo_name' field has been set.
      * repo_name
      * @return True if the 'repo_name' field has been set, false otherwise.
      */
    public boolean hasRepoName() {
      return fieldSetFlags()[12];
    }


    /**
      * Clears the value of the 'repo_name' field.
      * repo_name
      * @return This builder.
      */
    public Builder clearRepoName() {
      repo_name = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    /**
      * Gets the value of the 'repo_url' field.
      * repo_url
      * @return The value.
      */
    public CharSequence getRepoUrl() {
      return repo_url;
    }

    /**
      * Sets the value of the 'repo_url' field.
      * repo_url
      * @param value The value of 'repo_url'.
      * @return This builder.
      */
    public Builder setRepoUrl(CharSequence value) {
      validate(fields()[13], value);
      this.repo_url = value;
      fieldSetFlags()[13] = true;
      return this;
    }

    /**
      * Checks whether the 'repo_url' field has been set.
      * repo_url
      * @return True if the 'repo_url' field has been set, false otherwise.
      */
    public boolean hasRepoUrl() {
      return fieldSetFlags()[13];
    }


    /**
      * Clears the value of the 'repo_url' field.
      * repo_url
      * @return This builder.
      */
    public Builder clearRepoUrl() {
      repo_url = null;
      fieldSetFlags()[13] = false;
      return this;
    }

    /**
      * Gets the value of the 'org_id' field.
      * org_id
      * @return The value.
      */
    public Long getOrgId() {
      return org_id;
    }

    /**
      * Sets the value of the 'org_id' field.
      * org_id
      * @param value The value of 'org_id'.
      * @return This builder.
      */
    public Builder setOrgId(long value) {
      validate(fields()[14], value);
      this.org_id = value;
      fieldSetFlags()[14] = true;
      return this;
    }

    /**
      * Checks whether the 'org_id' field has been set.
      * org_id
      * @return True if the 'org_id' field has been set, false otherwise.
      */
    public boolean hasOrgId() {
      return fieldSetFlags()[14];
    }


    /**
      * Clears the value of the 'org_id' field.
      * org_id
      * @return This builder.
      */
    public Builder clearOrgId() {
      fieldSetFlags()[14] = false;
      return this;
    }

    /**
      * Gets the value of the 'org_login' field.
      * org_login
      * @return The value.
      */
    public CharSequence getOrgLogin() {
      return org_login;
    }

    /**
      * Sets the value of the 'org_login' field.
      * org_login
      * @param value The value of 'org_login'.
      * @return This builder.
      */
    public Builder setOrgLogin(CharSequence value) {
      validate(fields()[15], value);
      this.org_login = value;
      fieldSetFlags()[15] = true;
      return this;
    }

    /**
      * Checks whether the 'org_login' field has been set.
      * org_login
      * @return True if the 'org_login' field has been set, false otherwise.
      */
    public boolean hasOrgLogin() {
      return fieldSetFlags()[15];
    }


    /**
      * Clears the value of the 'org_login' field.
      * org_login
      * @return This builder.
      */
    public Builder clearOrgLogin() {
      org_login = null;
      fieldSetFlags()[15] = false;
      return this;
    }

    /**
      * Gets the value of the 'org_gravatar_id' field.
      * org_gravatar_id
      * @return The value.
      */
    public CharSequence getOrgGravatarId() {
      return org_gravatar_id;
    }

    /**
      * Sets the value of the 'org_gravatar_id' field.
      * org_gravatar_id
      * @param value The value of 'org_gravatar_id'.
      * @return This builder.
      */
    public Builder setOrgGravatarId(CharSequence value) {
      validate(fields()[16], value);
      this.org_gravatar_id = value;
      fieldSetFlags()[16] = true;
      return this;
    }

    /**
      * Checks whether the 'org_gravatar_id' field has been set.
      * org_gravatar_id
      * @return True if the 'org_gravatar_id' field has been set, false otherwise.
      */
    public boolean hasOrgGravatarId() {
      return fieldSetFlags()[16];
    }


    /**
      * Clears the value of the 'org_gravatar_id' field.
      * org_gravatar_id
      * @return This builder.
      */
    public Builder clearOrgGravatarId() {
      org_gravatar_id = null;
      fieldSetFlags()[16] = false;
      return this;
    }

    /**
      * Gets the value of the 'org_avatar_url' field.
      * org_avatar_url
      * @return The value.
      */
    public CharSequence getOrgAvatarUrl() {
      return org_avatar_url;
    }

    /**
      * Sets the value of the 'org_avatar_url' field.
      * org_avatar_url
      * @param value The value of 'org_avatar_url'.
      * @return This builder.
      */
    public Builder setOrgAvatarUrl(CharSequence value) {
      validate(fields()[17], value);
      this.org_avatar_url = value;
      fieldSetFlags()[17] = true;
      return this;
    }

    /**
      * Checks whether the 'org_avatar_url' field has been set.
      * org_avatar_url
      * @return True if the 'org_avatar_url' field has been set, false otherwise.
      */
    public boolean hasOrgAvatarUrl() {
      return fieldSetFlags()[17];
    }


    /**
      * Clears the value of the 'org_avatar_url' field.
      * org_avatar_url
      * @return This builder.
      */
    public Builder clearOrgAvatarUrl() {
      org_avatar_url = null;
      fieldSetFlags()[17] = false;
      return this;
    }

    /**
      * Gets the value of the 'org_url' field.
      * org_url
      * @return The value.
      */
    public CharSequence getOrgUrl() {
      return org_url;
    }

    /**
      * Sets the value of the 'org_url' field.
      * org_url
      * @param value The value of 'org_url'.
      * @return This builder.
      */
    public Builder setOrgUrl(CharSequence value) {
      validate(fields()[18], value);
      this.org_url = value;
      fieldSetFlags()[18] = true;
      return this;
    }

    /**
      * Checks whether the 'org_url' field has been set.
      * org_url
      * @return True if the 'org_url' field has been set, false otherwise.
      */
    public boolean hasOrgUrl() {
      return fieldSetFlags()[18];
    }


    /**
      * Clears the value of the 'org_url' field.
      * org_url
      * @return This builder.
      */
    public Builder clearOrgUrl() {
      org_url = null;
      fieldSetFlags()[18] = false;
      return this;
    }

    /**
      * Gets the value of the 'time_date' field.
      * yyyy-MM-dd
      * @return The value.
      */
    public org.joda.time.LocalDate getTimeDate() {
      return time_date;
    }

    /**
      * Sets the value of the 'time_date' field.
      * yyyy-MM-dd
      * @param value The value of 'time_date'.
      * @return This builder.
      */
    public Builder setTimeDate(org.joda.time.LocalDate value) {
      validate(fields()[19], value);
      this.time_date = value;
      fieldSetFlags()[19] = true;
      return this;
    }

    /**
      * Checks whether the 'time_date' field has been set.
      * yyyy-MM-dd
      * @return True if the 'time_date' field has been set, false otherwise.
      */
    public boolean hasTimeDate() {
      return fieldSetFlags()[19];
    }


    /**
      * Clears the value of the 'time_date' field.
      * yyyy-MM-dd
      * @return This builder.
      */
    public Builder clearTimeDate() {
      fieldSetFlags()[19] = false;
      return this;
    }

    /**
      * Gets the value of the 'time_date_month' field.
      * yyyy-MM-dd��ֻ��¼ÿ�µ�һ��
      * @return The value.
      */
    public org.joda.time.LocalDate getTimeDateMonth() {
      return time_date_month;
    }

    /**
      * Sets the value of the 'time_date_month' field.
      * yyyy-MM-dd��ֻ��¼ÿ�µ�һ��
      * @param value The value of 'time_date_month'.
      * @return This builder.
      */
    public Builder setTimeDateMonth(org.joda.time.LocalDate value) {
      validate(fields()[20], value);
      this.time_date_month = value;
      fieldSetFlags()[20] = true;
      return this;
    }

    /**
      * Checks whether the 'time_date_month' field has been set.
      * yyyy-MM-dd��ֻ��¼ÿ�µ�һ��
      * @return True if the 'time_date_month' field has been set, false otherwise.
      */
    public boolean hasTimeDateMonth() {
      return fieldSetFlags()[20];
    }


    /**
      * Clears the value of the 'time_date_month' field.
      * yyyy-MM-dd��ֻ��¼ÿ�µ�һ��
      * @return This builder.
      */
    public Builder clearTimeDateMonth() {
      fieldSetFlags()[20] = false;
      return this;
    }

    /**
      * Gets the value of the 'time_date_week' field.
      * yyyy-MM-dd����ǰ�������ڵ���һ����¼��������
      * @return The value.
      */
    public org.joda.time.LocalDate getTimeDateWeek() {
      return time_date_week;
    }

    /**
      * Sets the value of the 'time_date_week' field.
      * yyyy-MM-dd����ǰ�������ڵ���һ����¼��������
      * @param value The value of 'time_date_week'.
      * @return This builder.
      */
    public Builder setTimeDateWeek(org.joda.time.LocalDate value) {
      validate(fields()[21], value);
      this.time_date_week = value;
      fieldSetFlags()[21] = true;
      return this;
    }

    /**
      * Checks whether the 'time_date_week' field has been set.
      * yyyy-MM-dd����ǰ�������ڵ���һ����¼��������
      * @return True if the 'time_date_week' field has been set, false otherwise.
      */
    public boolean hasTimeDateWeek() {
      return fieldSetFlags()[21];
    }


    /**
      * Clears the value of the 'time_date_week' field.
      * yyyy-MM-dd����ǰ�������ڵ���һ����¼��������
      * @return This builder.
      */
    public Builder clearTimeDateWeek() {
      fieldSetFlags()[21] = false;
      return this;
    }

    /**
      * Gets the value of the 'time_date_hour' field.
      * yyyy-MM-dd'T'HH:00:00
      * @return The value.
      */
    public org.joda.time.DateTime getTimeDateHour() {
      return time_date_hour;
    }

    /**
      * Sets the value of the 'time_date_hour' field.
      * yyyy-MM-dd'T'HH:00:00
      * @param value The value of 'time_date_hour'.
      * @return This builder.
      */
    public Builder setTimeDateHour(org.joda.time.DateTime value) {
      validate(fields()[22], value);
      this.time_date_hour = value;
      fieldSetFlags()[22] = true;
      return this;
    }

    /**
      * Checks whether the 'time_date_hour' field has been set.
      * yyyy-MM-dd'T'HH:00:00
      * @return True if the 'time_date_hour' field has been set, false otherwise.
      */
    public boolean hasTimeDateHour() {
      return fieldSetFlags()[22];
    }


    /**
      * Clears the value of the 'time_date_hour' field.
      * yyyy-MM-dd'T'HH:00:00
      * @return This builder.
      */
    public Builder clearTimeDateHour() {
      fieldSetFlags()[22] = false;
      return this;
    }

    /**
      * Gets the value of the 'time_date_hour_minute' field.
      * yyyy-MM-dd'T'HH:mm:00
      * @return The value.
      */
    public org.joda.time.DateTime getTimeDateHourMinute() {
      return time_date_hour_minute;
    }

    /**
      * Sets the value of the 'time_date_hour_minute' field.
      * yyyy-MM-dd'T'HH:mm:00
      * @param value The value of 'time_date_hour_minute'.
      * @return This builder.
      */
    public Builder setTimeDateHourMinute(org.joda.time.DateTime value) {
      validate(fields()[23], value);
      this.time_date_hour_minute = value;
      fieldSetFlags()[23] = true;
      return this;
    }

    /**
      * Checks whether the 'time_date_hour_minute' field has been set.
      * yyyy-MM-dd'T'HH:mm:00
      * @return True if the 'time_date_hour_minute' field has been set, false otherwise.
      */
    public boolean hasTimeDateHourMinute() {
      return fieldSetFlags()[23];
    }


    /**
      * Clears the value of the 'time_date_hour_minute' field.
      * yyyy-MM-dd'T'HH:mm:00
      * @return This builder.
      */
    public Builder clearTimeDateHourMinute() {
      fieldSetFlags()[23] = false;
      return this;
    }

    /**
      * Gets the value of the 'time_datetime' field.
      * yyyy-MM-dd'T'HH:mm:ss
      * @return The value.
      */
    public org.joda.time.DateTime getTimeDatetime() {
      return time_datetime;
    }

    /**
      * Sets the value of the 'time_datetime' field.
      * yyyy-MM-dd'T'HH:mm:ss
      * @param value The value of 'time_datetime'.
      * @return This builder.
      */
    public Builder setTimeDatetime(org.joda.time.DateTime value) {
      validate(fields()[24], value);
      this.time_datetime = value;
      fieldSetFlags()[24] = true;
      return this;
    }

    /**
      * Checks whether the 'time_datetime' field has been set.
      * yyyy-MM-dd'T'HH:mm:ss
      * @return True if the 'time_datetime' field has been set, false otherwise.
      */
    public boolean hasTimeDatetime() {
      return fieldSetFlags()[24];
    }


    /**
      * Clears the value of the 'time_datetime' field.
      * yyyy-MM-dd'T'HH:mm:ss
      * @return This builder.
      */
    public Builder clearTimeDatetime() {
      fieldSetFlags()[24] = false;
      return this;
    }

    /**
      * Gets the value of the 'time_millis' field.
      * 1970���������
      * @return The value.
      */
    public Long getTimeMillis() {
      return time_millis;
    }

    /**
      * Sets the value of the 'time_millis' field.
      * 1970���������
      * @param value The value of 'time_millis'.
      * @return This builder.
      */
    public Builder setTimeMillis(long value) {
      validate(fields()[25], value);
      this.time_millis = value;
      fieldSetFlags()[25] = true;
      return this;
    }

    /**
      * Checks whether the 'time_millis' field has been set.
      * 1970���������
      * @return True if the 'time_millis' field has been set, false otherwise.
      */
    public boolean hasTimeMillis() {
      return fieldSetFlags()[25];
    }


    /**
      * Clears the value of the 'time_millis' field.
      * 1970���������
      * @return This builder.
      */
    public Builder clearTimeMillis() {
      fieldSetFlags()[25] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public github_events build() {
      try {
        github_events record = new github_events();
        record.event_id = fieldSetFlags()[0] ? this.event_id : (Long) defaultValue(fields()[0], record.getConversion(0));
        record.event_name = fieldSetFlags()[1] ? this.event_name : (CharSequence) defaultValue(fields()[1], record.getConversion(1));
        record.event_public = fieldSetFlags()[2] ? this.event_public : (Boolean) defaultValue(fields()[2], record.getConversion(2));
        record.event_payload = fieldSetFlags()[3] ? this.event_payload : (CharSequence) defaultValue(fields()[3], record.getConversion(3));
        record.event_created_at = fieldSetFlags()[4] ? this.event_created_at : (org.joda.time.DateTime) defaultValue(fields()[4], record.getConversion(4));
        record.event_received_at = fieldSetFlags()[5] ? this.event_received_at : (org.joda.time.DateTime) defaultValue(fields()[5], record.getConversion(5));
        record.user_id = fieldSetFlags()[6] ? this.user_id : (Long) defaultValue(fields()[6], record.getConversion(6));
        record.user_login = fieldSetFlags()[7] ? this.user_login : (CharSequence) defaultValue(fields()[7], record.getConversion(7));
        record.user_gravatar_id = fieldSetFlags()[8] ? this.user_gravatar_id : (CharSequence) defaultValue(fields()[8], record.getConversion(8));
        record.user_avatar_url = fieldSetFlags()[9] ? this.user_avatar_url : (CharSequence) defaultValue(fields()[9], record.getConversion(9));
        record.user_url = fieldSetFlags()[10] ? this.user_url : (CharSequence) defaultValue(fields()[10], record.getConversion(10));
        record.repo_id = fieldSetFlags()[11] ? this.repo_id : (Long) defaultValue(fields()[11], record.getConversion(11));
        record.repo_name = fieldSetFlags()[12] ? this.repo_name : (CharSequence) defaultValue(fields()[12], record.getConversion(12));
        record.repo_url = fieldSetFlags()[13] ? this.repo_url : (CharSequence) defaultValue(fields()[13], record.getConversion(13));
        record.org_id = fieldSetFlags()[14] ? this.org_id : (Long) defaultValue(fields()[14], record.getConversion(14));
        record.org_login = fieldSetFlags()[15] ? this.org_login : (CharSequence) defaultValue(fields()[15], record.getConversion(15));
        record.org_gravatar_id = fieldSetFlags()[16] ? this.org_gravatar_id : (CharSequence) defaultValue(fields()[16], record.getConversion(16));
        record.org_avatar_url = fieldSetFlags()[17] ? this.org_avatar_url : (CharSequence) defaultValue(fields()[17], record.getConversion(17));
        record.org_url = fieldSetFlags()[18] ? this.org_url : (CharSequence) defaultValue(fields()[18], record.getConversion(18));
        record.time_date = fieldSetFlags()[19] ? this.time_date : (org.joda.time.LocalDate) defaultValue(fields()[19], record.getConversion(19));
        record.time_date_month = fieldSetFlags()[20] ? this.time_date_month : (org.joda.time.LocalDate) defaultValue(fields()[20], record.getConversion(20));
        record.time_date_week = fieldSetFlags()[21] ? this.time_date_week : (org.joda.time.LocalDate) defaultValue(fields()[21], record.getConversion(21));
        record.time_date_hour = fieldSetFlags()[22] ? this.time_date_hour : (org.joda.time.DateTime) defaultValue(fields()[22], record.getConversion(22));
        record.time_date_hour_minute = fieldSetFlags()[23] ? this.time_date_hour_minute : (org.joda.time.DateTime) defaultValue(fields()[23], record.getConversion(23));
        record.time_datetime = fieldSetFlags()[24] ? this.time_datetime : (org.joda.time.DateTime) defaultValue(fields()[24], record.getConversion(24));
        record.time_millis = fieldSetFlags()[25] ? this.time_millis : (Long) defaultValue(fields()[25], record.getConversion(25));
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<github_events>
    WRITER$ = (org.apache.avro.io.DatumWriter<github_events>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<github_events>
    READER$ = (org.apache.avro.io.DatumReader<github_events>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
