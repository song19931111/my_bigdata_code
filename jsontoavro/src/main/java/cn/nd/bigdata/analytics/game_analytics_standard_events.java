/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package cn.nd.bigdata.analytics;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
/** game_analytics_standard_events */
@org.apache.avro.specific.AvroGenerated
public class game_analytics_standard_events extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -4194377060009735351L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"game_analytics_standard_events\",\"namespace\":\"cn.nd.bigdata.analytics\",\"doc\":\"game_analytics_standard_events\",\"fields\":[{\"name\":\"event_id\",\"type\":\"long\",\"doc\":\"事件递增序列id\",\"default\":0},{\"name\":\"event_name\",\"type\":\"string\",\"doc\":\"事件名称\",\"default\":\"\"},{\"name\":\"event_datasource\",\"type\":\"string\",\"doc\":\"事件数据来源，例如：pomelo、unity-server\",\"default\":\"\"},{\"name\":\"event_env\",\"type\":\"string\",\"doc\":\"时间接收环境：dev、test\",\"default\":\"\"},{\"name\":\"event_created_at\",\"type\":{\"type\":\"long\",\"logicalType\":\"timestamp-millis\"},\"doc\":\"事件发生时间\",\"default\":0},{\"name\":\"event_received_at\",\"type\":{\"type\":\"long\",\"logicalType\":\"timestamp-millis\"},\"doc\":\"事件接收时间\",\"default\":0},{\"name\":\"event_processed_at\",\"type\":{\"type\":\"long\",\"logicalType\":\"timestamp-millis\"},\"doc\":\"事件处理时间\",\"default\":0},{\"name\":\"user_id\",\"type\":\"long\",\"doc\":\"用户id\",\"default\":0},{\"name\":\"user_age\",\"type\":\"int\",\"doc\":\"用户年龄\",\"default\":0},{\"name\":\"user_age_range\",\"type\":\"int\",\"doc\":\"用户年龄分段，0：未知，1:28~24, 2:25~34, 3:25~44, 4:45~54, 5:55~64，6:65以上\",\"default\":0},{\"name\":\"user_gender\",\"type\":\"int\",\"doc\":\"性别说明：0-未知，1-男性，2-女性\",\"default\":0},{\"name\":\"user_is_new\",\"type\":\"boolean\",\"doc\":\"是否为今日新增用户\",\"default\":false},{\"name\":\"user_is_anonymous\",\"type\":\"boolean\",\"doc\":\"是否为匿名用户\",\"default\":false},{\"name\":\"user_last_session\",\"type\":{\"type\":\"long\",\"logicalType\":\"timestamp-millis\"},\"doc\":\"最后登录时间\",\"default\":0},{\"name\":\"client_id\",\"type\":\"string\",\"doc\":\"客户端id\",\"default\":\"\"},{\"name\":\"device_id\",\"type\":\"string\",\"doc\":\"设备id\",\"default\":\"\"},{\"name\":\"device_model\",\"type\":\"string\",\"doc\":\"设备型号\",\"default\":\"\"},{\"name\":\"device_brand\",\"type\":\"string\",\"doc\":\"设备品牌\",\"default\":\"\"},{\"name\":\"device_family\",\"type\":\"string\",\"doc\":\"设备系列：@{device_family}\",\"default\":\"\"},{\"name\":\"device_is_new\",\"type\":\"boolean\",\"doc\":\"是否为今日新增设备\",\"default\":false},{\"name\":\"device_category\",\"type\":\"string\",\"doc\":\"设备分类，区分是否为移动端或者PC设备，可选值：desktop, tablet, mobile\",\"default\":\"\"},{\"name\":\"battery_level\",\"type\":\"float\",\"doc\":\"当前电量\",\"default\":0},{\"name\":\"battery_status\",\"type\":\"string\",\"doc\":\"充电状态\",\"default\":\"\"},{\"name\":\"browser_family\",\"type\":\"string\",\"doc\":\"浏览器系列：@{ua_family}\",\"default\":\"\"},{\"name\":\"browser_major\",\"type\":\"int\",\"doc\":\"主版本\",\"default\":0},{\"name\":\"browser_minor\",\"type\":\"int\",\"doc\":\"次要版本\",\"default\":0},{\"name\":\"browser_patch\",\"type\":\"int\",\"doc\":\"补丁版本\",\"default\":0},{\"name\":\"browser_version\",\"type\":\"string\",\"doc\":\"浏览器版本：@{ua_major}.@{ua_minor}.@{ua_patch}\",\"default\":\"\"},{\"name\":\"browser_user_agent\",\"type\":\"string\",\"doc\":\"浏览器User—Agent\",\"default\":\"\"},{\"name\":\"os_family\",\"type\":\"string\",\"doc\":\"操作系统名称:@{os_family}, Windows, Linux, Macintosh, IOP, Android\",\"default\":\"\"},{\"name\":\"os_major\",\"type\":\"int\",\"doc\":\"主版本\",\"default\":0},{\"name\":\"os_minor\",\"type\":\"int\",\"doc\":\"次要版本\",\"default\":0},{\"name\":\"os_patch\",\"type\":\"int\",\"doc\":\"补丁版本\",\"default\":0},{\"name\":\"os_version\",\"type\":\"string\",\"doc\":\"操作系统版本:@{os_major}.@{os_minor}.@{os_patch}\",\"default\":\"\"},{\"name\":\"network_operator\",\"type\":\"string\",\"doc\":\"网络运营商：cmcc，联通\",\"default\":\"\"},{\"name\":\"network_mode\",\"type\":\"string\",\"doc\":\"联网方式:WiFi、3G、4G\",\"default\":\"\"},{\"name\":\"network_country\",\"type\":\"string\",\"doc\":\"国家\",\"default\":\"\"},{\"name\":\"network_region\",\"type\":\"string\",\"doc\":\"省份\",\"default\":\"\"},{\"name\":\"network_city\",\"type\":\"string\",\"doc\":\"城市\",\"default\":\"\"},{\"name\":\"network_ip\",\"type\":\"string\",\"doc\":\"ip\",\"default\":\"\"},{\"name\":\"network_time_zone\",\"type\":\"string\",\"doc\":\"时区\",\"default\":\"\"},{\"name\":\"network_longitude\",\"type\":\"double\",\"doc\":\"经度\",\"default\":0},{\"name\":\"network_latitude\",\"type\":\"double\",\"doc\":\"纬度\",\"default\":0},{\"name\":\"app_id\",\"type\":\"string\",\"doc\":\"应用id\",\"default\":\"\"},{\"name\":\"app_name\",\"type\":\"string\",\"doc\":\"应用名称\",\"default\":\"\"},{\"name\":\"app_major\",\"type\":\"int\",\"doc\":\"主版本\",\"default\":0},{\"name\":\"app_minor\",\"type\":\"int\",\"doc\":\"次要版本\",\"default\":0},{\"name\":\"app_patch\",\"type\":\"int\",\"doc\":\"补丁版本\",\"default\":0},{\"name\":\"app_version\",\"type\":\"string\",\"doc\":\"应用版本\",\"default\":\"\"},{\"name\":\"app_installer_id\",\"type\":\"string\",\"doc\":\"应用安装渠道id\",\"default\":\"\"},{\"name\":\"logger_level\",\"type\":\"string\",\"doc\":\"日志级别\",\"default\":\"\"},{\"name\":\"ex_id\",\"type\":\"string\",\"doc\":\"异常id\",\"default\":\"\"},{\"name\":\"ex_name\",\"type\":\"string\",\"doc\":\"异常名称\",\"default\":\"\"},{\"name\":\"ex_message\",\"type\":\"string\",\"doc\":\"异常信息\",\"default\":\"\"},{\"name\":\"ex_stacktrace\",\"type\":\"string\",\"doc\":\"异常堆栈\",\"default\":\"\"},{\"name\":\"ex_is_fatal\",\"type\":\"boolean\",\"doc\":\"是否为严重异常\",\"default\":false},{\"name\":\"time_date_month\",\"type\":{\"type\":\"int\",\"logicalType\":\"date\"},\"doc\":\"yyyy-MM-01，只记录每月第一天\",\"default\":0},{\"name\":\"time_date_week\",\"type\":{\"type\":\"int\",\"logicalType\":\"date\"},\"doc\":\"yyyy-MM-WW，当前月第几周\",\"default\":0},{\"name\":\"time_date_hour\",\"type\":{\"type\":\"long\",\"logicalType\":\"timestamp-millis\"},\"doc\":\"yyyy-MM-dd'T'HH:00:00\",\"default\":0},{\"name\":\"time_date_hour_minute\",\"type\":{\"type\":\"long\",\"logicalType\":\"timestamp-millis\"},\"doc\":\"yyyy-MM-dd'T'HH:mm:00\",\"default\":0},{\"name\":\"time_datetime\",\"type\":{\"type\":\"long\",\"logicalType\":\"timestamp-millis\"},\"doc\":\"yyyy-MM-dd'T'HH:mm:ss\",\"default\":0},{\"name\":\"time_millis\",\"type\":\"long\",\"doc\":\"1970至今毫秒数\",\"default\":0}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<game_analytics_standard_events> ENCODER =
          new BinaryMessageEncoder<game_analytics_standard_events>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<game_analytics_standard_events> DECODER =
          new BinaryMessageDecoder<game_analytics_standard_events>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<game_analytics_standard_events> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<game_analytics_standard_events> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<game_analytics_standard_events>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this game_analytics_standard_events to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a game_analytics_standard_events from a ByteBuffer. */
  public static game_analytics_standard_events fromByteBuffer(
          java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  /** 事件递增序列id */
  @Deprecated public long event_id;
  /** 事件名称 */
  @Deprecated public CharSequence event_name;
  /** 事件数据来源，例如：pomelo、unity-server */
  @Deprecated public CharSequence event_datasource;
  /** 时间接收环境：dev、test */
  @Deprecated public CharSequence event_env;
  /** 事件发生时间 */
  @Deprecated public org.joda.time.DateTime event_created_at;
  /** 事件接收时间 */
  @Deprecated public org.joda.time.DateTime event_received_at;
  /** 事件处理时间 */
  @Deprecated public org.joda.time.DateTime event_processed_at;
  /** 用户id */
  @Deprecated public long user_id;
  /** 用户年龄 */
  @Deprecated public int user_age;
  /** 用户年龄分段，0：未知，1:28~24, 2:25~34, 3:25~44, 4:45~54, 5:55~64，6:65以上 */
  @Deprecated public int user_age_range;
  /** 性别说明：0-未知，1-男性，2-女性 */
  @Deprecated public int user_gender;
  /** 是否为今日新增用户 */
  @Deprecated public boolean user_is_new;
  /** 是否为匿名用户 */
  @Deprecated public boolean user_is_anonymous;
  /** 最后登录时间 */
  @Deprecated public org.joda.time.DateTime user_last_session;
  /** 客户端id */
  @Deprecated public CharSequence client_id;
  /** 设备id */
  @Deprecated public CharSequence device_id;
  /** 设备型号 */
  @Deprecated public CharSequence device_model;
  /** 设备品牌 */
  @Deprecated public CharSequence device_brand;
  /** 设备系列：@{device_family} */
  @Deprecated public CharSequence device_family;
  /** 是否为今日新增设备 */
  @Deprecated public boolean device_is_new;
  /** 设备分类，区分是否为移动端或者PC设备，可选值：desktop, tablet, mobile */
  @Deprecated public CharSequence device_category;
  /** 当前电量 */
  @Deprecated public float battery_level;
  /** 充电状态 */
  @Deprecated public CharSequence battery_status;
  /** 浏览器系列：@{ua_family} */
  @Deprecated public CharSequence browser_family;
  /** 主版本 */
  @Deprecated public int browser_major;
  /** 次要版本 */
  @Deprecated public int browser_minor;
  /** 补丁版本 */
  @Deprecated public int browser_patch;
  /** 浏览器版本：@{ua_major}.@{ua_minor}.@{ua_patch} */
  @Deprecated public CharSequence browser_version;
  /** 浏览器User—Agent */
  @Deprecated public CharSequence browser_user_agent;
  /** 操作系统名称:@{os_family}, Windows, Linux, Macintosh, IOP, Android */
  @Deprecated public CharSequence os_family;
  /** 主版本 */
  @Deprecated public int os_major;
  /** 次要版本 */
  @Deprecated public int os_minor;
  /** 补丁版本 */
  @Deprecated public int os_patch;
  /** 操作系统版本:@{os_major}.@{os_minor}.@{os_patch} */
  @Deprecated public CharSequence os_version;
  /** 网络运营商：cmcc，联通 */
  @Deprecated public CharSequence network_operator;
  /** 联网方式:WiFi、3G、4G */
  @Deprecated public CharSequence network_mode;
  /** 国家 */
  @Deprecated public CharSequence network_country;
  /** 省份 */
  @Deprecated public CharSequence network_region;
  /** 城市 */
  @Deprecated public CharSequence network_city;
  /** ip */
  @Deprecated public CharSequence network_ip;
  /** 时区 */
  @Deprecated public CharSequence network_time_zone;
  /** 经度 */
  @Deprecated public double network_longitude;
  /** 纬度 */
  @Deprecated public double network_latitude;
  /** 应用id */
  @Deprecated public CharSequence app_id;
  /** 应用名称 */
  @Deprecated public CharSequence app_name;
  /** 主版本 */
  @Deprecated public int app_major;
  /** 次要版本 */
  @Deprecated public int app_minor;
  /** 补丁版本 */
  @Deprecated public int app_patch;
  /** 应用版本 */
  @Deprecated public CharSequence app_version;
  /** 应用安装渠道id */
  @Deprecated public CharSequence app_installer_id;
  /** 日志级别 */
  @Deprecated public CharSequence logger_level;
  /** 异常id */
  @Deprecated public CharSequence ex_id;
  /** 异常名称 */
  @Deprecated public CharSequence ex_name;
  /** 异常信息 */
  @Deprecated public CharSequence ex_message;
  /** 异常堆栈 */
  @Deprecated public CharSequence ex_stacktrace;
  /** 是否为严重异常 */
  @Deprecated public boolean ex_is_fatal;
  /** yyyy-MM-01，只记录每月第一天 */
  @Deprecated public org.joda.time.LocalDate time_date_month;
  /** yyyy-MM-WW，当前月第几周 */
  @Deprecated public org.joda.time.LocalDate time_date_week;
  /** yyyy-MM-dd'T'HH:00:00 */
  @Deprecated public org.joda.time.DateTime time_date_hour;
  /** yyyy-MM-dd'T'HH:mm:00 */
  @Deprecated public org.joda.time.DateTime time_date_hour_minute;
  /** yyyy-MM-dd'T'HH:mm:ss */
  @Deprecated public org.joda.time.DateTime time_datetime;
  /** 1970至今毫秒数 */
  @Deprecated public long time_millis;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public game_analytics_standard_events() {}

  /**
   * All-args constructor.
   * @param event_id 事件递增序列id
   * @param event_name 事件名称
   * @param event_datasource 事件数据来源，例如：pomelo、unity-server
   * @param event_env 时间接收环境：dev、test
   * @param event_created_at 事件发生时间
   * @param event_received_at 事件接收时间
   * @param event_processed_at 事件处理时间
   * @param user_id 用户id
   * @param user_age 用户年龄
   * @param user_age_range 用户年龄分段，0：未知，1:28~24, 2:25~34, 3:25~44, 4:45~54, 5:55~64，6:65以上
   * @param user_gender 性别说明：0-未知，1-男性，2-女性
   * @param user_is_new 是否为今日新增用户
   * @param user_is_anonymous 是否为匿名用户
   * @param user_last_session 最后登录时间
   * @param client_id 客户端id
   * @param device_id 设备id
   * @param device_model 设备型号
   * @param device_brand 设备品牌
   * @param device_family 设备系列：@{device_family}
   * @param device_is_new 是否为今日新增设备
   * @param device_category 设备分类，区分是否为移动端或者PC设备，可选值：desktop, tablet, mobile
   * @param battery_level 当前电量
   * @param battery_status 充电状态
   * @param browser_family 浏览器系列：@{ua_family}
   * @param browser_major 主版本
   * @param browser_minor 次要版本
   * @param browser_patch 补丁版本
   * @param browser_version 浏览器版本：@{ua_major}.@{ua_minor}.@{ua_patch}
   * @param browser_user_agent 浏览器User—Agent
   * @param os_family 操作系统名称:@{os_family}, Windows, Linux, Macintosh, IOP, Android
   * @param os_major 主版本
   * @param os_minor 次要版本
   * @param os_patch 补丁版本
   * @param os_version 操作系统版本:@{os_major}.@{os_minor}.@{os_patch}
   * @param network_operator 网络运营商：cmcc，联通
   * @param network_mode 联网方式:WiFi、3G、4G
   * @param network_country 国家
   * @param network_region 省份
   * @param network_city 城市
   * @param network_ip ip
   * @param network_time_zone 时区
   * @param network_longitude 经度
   * @param network_latitude 纬度
   * @param app_id 应用id
   * @param app_name 应用名称
   * @param app_major 主版本
   * @param app_minor 次要版本
   * @param app_patch 补丁版本
   * @param app_version 应用版本
   * @param app_installer_id 应用安装渠道id
   * @param logger_level 日志级别
   * @param ex_id 异常id
   * @param ex_name 异常名称
   * @param ex_message 异常信息
   * @param ex_stacktrace 异常堆栈
   * @param ex_is_fatal 是否为严重异常
   * @param time_date_month yyyy-MM-01，只记录每月第一天
   * @param time_date_week yyyy-MM-WW，当前月第几周
   * @param time_date_hour yyyy-MM-dd'T'HH:00:00
   * @param time_date_hour_minute yyyy-MM-dd'T'HH:mm:00
   * @param time_datetime yyyy-MM-dd'T'HH:mm:ss
   * @param time_millis 1970至今毫秒数
   */
  public game_analytics_standard_events(Long event_id, CharSequence event_name, CharSequence event_datasource, CharSequence event_env, org.joda.time.DateTime event_created_at, org.joda.time.DateTime event_received_at, org.joda.time.DateTime event_processed_at, Long user_id, Integer user_age, Integer user_age_range, Integer user_gender, Boolean user_is_new, Boolean user_is_anonymous, org.joda.time.DateTime user_last_session, CharSequence client_id, CharSequence device_id, CharSequence device_model, CharSequence device_brand, CharSequence device_family, Boolean device_is_new, CharSequence device_category, Float battery_level, CharSequence battery_status, CharSequence browser_family, Integer browser_major, Integer browser_minor, Integer browser_patch, CharSequence browser_version, CharSequence browser_user_agent, CharSequence os_family, Integer os_major, Integer os_minor, Integer os_patch, CharSequence os_version, CharSequence network_operator, CharSequence network_mode, CharSequence network_country, CharSequence network_region, CharSequence network_city, CharSequence network_ip, CharSequence network_time_zone, Double network_longitude, Double network_latitude, CharSequence app_id, CharSequence app_name, Integer app_major, Integer app_minor, Integer app_patch, CharSequence app_version, CharSequence app_installer_id, CharSequence logger_level, CharSequence ex_id, CharSequence ex_name, CharSequence ex_message, CharSequence ex_stacktrace, Boolean ex_is_fatal, org.joda.time.LocalDate time_date_month, org.joda.time.LocalDate time_date_week, org.joda.time.DateTime time_date_hour, org.joda.time.DateTime time_date_hour_minute, org.joda.time.DateTime time_datetime, Long time_millis) {
    this.event_id = event_id;
    this.event_name = event_name;
    this.event_datasource = event_datasource;
    this.event_env = event_env;
    this.event_created_at = event_created_at;
    this.event_received_at = event_received_at;
    this.event_processed_at = event_processed_at;
    this.user_id = user_id;
    this.user_age = user_age;
    this.user_age_range = user_age_range;
    this.user_gender = user_gender;
    this.user_is_new = user_is_new;
    this.user_is_anonymous = user_is_anonymous;
    this.user_last_session = user_last_session;
    this.client_id = client_id;
    this.device_id = device_id;
    this.device_model = device_model;
    this.device_brand = device_brand;
    this.device_family = device_family;
    this.device_is_new = device_is_new;
    this.device_category = device_category;
    this.battery_level = battery_level;
    this.battery_status = battery_status;
    this.browser_family = browser_family;
    this.browser_major = browser_major;
    this.browser_minor = browser_minor;
    this.browser_patch = browser_patch;
    this.browser_version = browser_version;
    this.browser_user_agent = browser_user_agent;
    this.os_family = os_family;
    this.os_major = os_major;
    this.os_minor = os_minor;
    this.os_patch = os_patch;
    this.os_version = os_version;
    this.network_operator = network_operator;
    this.network_mode = network_mode;
    this.network_country = network_country;
    this.network_region = network_region;
    this.network_city = network_city;
    this.network_ip = network_ip;
    this.network_time_zone = network_time_zone;
    this.network_longitude = network_longitude;
    this.network_latitude = network_latitude;
    this.app_id = app_id;
    this.app_name = app_name;
    this.app_major = app_major;
    this.app_minor = app_minor;
    this.app_patch = app_patch;
    this.app_version = app_version;
    this.app_installer_id = app_installer_id;
    this.logger_level = logger_level;
    this.ex_id = ex_id;
    this.ex_name = ex_name;
    this.ex_message = ex_message;
    this.ex_stacktrace = ex_stacktrace;
    this.ex_is_fatal = ex_is_fatal;
    this.time_date_month = time_date_month;
    this.time_date_week = time_date_week;
    this.time_date_hour = time_date_hour;
    this.time_date_hour_minute = time_date_hour_minute;
    this.time_datetime = time_datetime;
    this.time_millis = time_millis;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public Object get(int field$) {
    switch (field$) {
      case 0: return event_id;
      case 1: return event_name;
      case 2: return event_datasource;
      case 3: return event_env;
      case 4: return event_created_at;
      case 5: return event_received_at;
      case 6: return event_processed_at;
      case 7: return user_id;
      case 8: return user_age;
      case 9: return user_age_range;
      case 10: return user_gender;
      case 11: return user_is_new;
      case 12: return user_is_anonymous;
      case 13: return user_last_session;
      case 14: return client_id;
      case 15: return device_id;
      case 16: return device_model;
      case 17: return device_brand;
      case 18: return device_family;
      case 19: return device_is_new;
      case 20: return device_category;
      case 21: return battery_level;
      case 22: return battery_status;
      case 23: return browser_family;
      case 24: return browser_major;
      case 25: return browser_minor;
      case 26: return browser_patch;
      case 27: return browser_version;
      case 28: return browser_user_agent;
      case 29: return os_family;
      case 30: return os_major;
      case 31: return os_minor;
      case 32: return os_patch;
      case 33: return os_version;
      case 34: return network_operator;
      case 35: return network_mode;
      case 36: return network_country;
      case 37: return network_region;
      case 38: return network_city;
      case 39: return network_ip;
      case 40: return network_time_zone;
      case 41: return network_longitude;
      case 42: return network_latitude;
      case 43: return app_id;
      case 44: return app_name;
      case 45: return app_major;
      case 46: return app_minor;
      case 47: return app_patch;
      case 48: return app_version;
      case 49: return app_installer_id;
      case 50: return logger_level;
      case 51: return ex_id;
      case 52: return ex_name;
      case 53: return ex_message;
      case 54: return ex_stacktrace;
      case 55: return ex_is_fatal;
      case 56: return time_date_month;
      case 57: return time_date_week;
      case 58: return time_date_hour;
      case 59: return time_date_hour_minute;
      case 60: return time_datetime;
      case 61: return time_millis;
      default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  protected static final org.apache.avro.data.TimeConversions.DateConversion DATE_CONVERSION = new org.apache.avro.data.TimeConversions.DateConversion();
  protected static final org.apache.avro.data.TimeConversions.TimeConversion TIME_CONVERSION = new org.apache.avro.data.TimeConversions.TimeConversion();
  protected static final org.apache.avro.data.TimeConversions.TimestampConversion TIMESTAMP_CONVERSION = new org.apache.avro.data.TimeConversions.TimestampConversion();
  protected static final org.apache.avro.Conversions.DecimalConversion DECIMAL_CONVERSION = new org.apache.avro.Conversions.DecimalConversion();

  private static final org.apache.avro.Conversion<?>[] conversions =
          new org.apache.avro.Conversion<?>[] {
                  null,
                  null,
                  null,
                  null,
                  TIMESTAMP_CONVERSION,
                  TIMESTAMP_CONVERSION,
                  TIMESTAMP_CONVERSION,
                  null,
                  null,
                  null,
                  null,
                  null,
                  null,
                  TIMESTAMP_CONVERSION,
                  null,
                  null,
                  null,
                  null,
                  null,
                  null,
                  null,
                  null,
                  null,
                  null,
                  null,
                  null,
                  null,
                  null,
                  null,
                  null,
                  null,
                  null,
                  null,
                  null,
                  null,
                  null,
                  null,
                  null,
                  null,
                  null,
                  null,
                  null,
                  null,
                  null,
                  null,
                  null,
                  null,
                  null,
                  null,
                  null,
                  null,
                  null,
                  null,
                  null,
                  null,
                  null,
                  DATE_CONVERSION,
                  DATE_CONVERSION,
                  TIMESTAMP_CONVERSION,
                  TIMESTAMP_CONVERSION,
                  TIMESTAMP_CONVERSION,
                  null,
                  null
          };

  @Override
  public org.apache.avro.Conversion<?> getConversion(int field) {
    return conversions[field];
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, Object value$) {
    switch (field$) {
      case 0: event_id = (Long)value$; break;
      case 1: event_name = (CharSequence)value$; break;
      case 2: event_datasource = (CharSequence)value$; break;
      case 3: event_env = (CharSequence)value$; break;
      case 4: event_created_at = (org.joda.time.DateTime)value$; break;
      case 5: event_received_at = (org.joda.time.DateTime)value$; break;
      case 6: event_processed_at = (org.joda.time.DateTime)value$; break;
      case 7: user_id = (Long)value$; break;
      case 8: user_age = (Integer)value$; break;
      case 9: user_age_range = (Integer)value$; break;
      case 10: user_gender = (Integer)value$; break;
      case 11: user_is_new = (Boolean)value$; break;
      case 12: user_is_anonymous = (Boolean)value$; break;
      case 13: user_last_session = (org.joda.time.DateTime)value$; break;
      case 14: client_id = (CharSequence)value$; break;
      case 15: device_id = (CharSequence)value$; break;
      case 16: device_model = (CharSequence)value$; break;
      case 17: device_brand = (CharSequence)value$; break;
      case 18: device_family = (CharSequence)value$; break;
      case 19: device_is_new = (Boolean)value$; break;
      case 20: device_category = (CharSequence)value$; break;
      case 21: battery_level = (Float)value$; break;
      case 22: battery_status = (CharSequence)value$; break;
      case 23: browser_family = (CharSequence)value$; break;
      case 24: browser_major = (Integer)value$; break;
      case 25: browser_minor = (Integer)value$; break;
      case 26: browser_patch = (Integer)value$; break;
      case 27: browser_version = (CharSequence)value$; break;
      case 28: browser_user_agent = (CharSequence)value$; break;
      case 29: os_family = (CharSequence)value$; break;
      case 30: os_major = (Integer)value$; break;
      case 31: os_minor = (Integer)value$; break;
      case 32: os_patch = (Integer)value$; break;
      case 33: os_version = (CharSequence)value$; break;
      case 34: network_operator = (CharSequence)value$; break;
      case 35: network_mode = (CharSequence)value$; break;
      case 36: network_country = (CharSequence)value$; break;
      case 37: network_region = (CharSequence)value$; break;
      case 38: network_city = (CharSequence)value$; break;
      case 39: network_ip = (CharSequence)value$; break;
      case 40: network_time_zone = (CharSequence)value$; break;
      case 41: network_longitude = (Double)value$; break;
      case 42: network_latitude = (Double)value$; break;
      case 43: app_id = (CharSequence)value$; break;
      case 44: app_name = (CharSequence)value$; break;
      case 45: app_major = (Integer)value$; break;
      case 46: app_minor = (Integer)value$; break;
      case 47: app_patch = (Integer)value$; break;
      case 48: app_version = (CharSequence)value$; break;
      case 49: app_installer_id = (CharSequence)value$; break;
      case 50: logger_level = (CharSequence)value$; break;
      case 51: ex_id = (CharSequence)value$; break;
      case 52: ex_name = (CharSequence)value$; break;
      case 53: ex_message = (CharSequence)value$; break;
      case 54: ex_stacktrace = (CharSequence)value$; break;
      case 55: ex_is_fatal = (Boolean)value$; break;
      case 56: time_date_month = (org.joda.time.LocalDate)value$; break;
      case 57: time_date_week = (org.joda.time.LocalDate)value$; break;
      case 58: time_date_hour = (org.joda.time.DateTime)value$; break;
      case 59: time_date_hour_minute = (org.joda.time.DateTime)value$; break;
      case 60: time_datetime = (org.joda.time.DateTime)value$; break;
      case 61: time_millis = (Long)value$; break;
      default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'event_id' field.
   * @return 事件递增序列id
   */
  public Long getEventId() {
    return event_id;
  }

  /**
   * Sets the value of the 'event_id' field.
   * 事件递增序列id
   * @param value the value to set.
   */
  public void setEventId(Long value) {
    this.event_id = value;
  }

  /**
   * Gets the value of the 'event_name' field.
   * @return 事件名称
   */
  public CharSequence getEventName() {
    return event_name;
  }

  /**
   * Sets the value of the 'event_name' field.
   * 事件名称
   * @param value the value to set.
   */
  public void setEventName(CharSequence value) {
    this.event_name = value;
  }

  /**
   * Gets the value of the 'event_datasource' field.
   * @return 事件数据来源，例如：pomelo、unity-server
   */
  public CharSequence getEventDatasource() {
    return event_datasource;
  }

  /**
   * Sets the value of the 'event_datasource' field.
   * 事件数据来源，例如：pomelo、unity-server
   * @param value the value to set.
   */
  public void setEventDatasource(CharSequence value) {
    this.event_datasource = value;
  }

  /**
   * Gets the value of the 'event_env' field.
   * @return 时间接收环境：dev、test
   */
  public CharSequence getEventEnv() {
    return event_env;
  }

  /**
   * Sets the value of the 'event_env' field.
   * 时间接收环境：dev、test
   * @param value the value to set.
   */
  public void setEventEnv(CharSequence value) {
    this.event_env = value;
  }

  /**
   * Gets the value of the 'event_created_at' field.
   * @return 事件发生时间
   */
  public org.joda.time.DateTime getEventCreatedAt() {
    return event_created_at;
  }

  /**
   * Sets the value of the 'event_created_at' field.
   * 事件发生时间
   * @param value the value to set.
   */
  public void setEventCreatedAt(org.joda.time.DateTime value) {
    this.event_created_at = value;
  }

  /**
   * Gets the value of the 'event_received_at' field.
   * @return 事件接收时间
   */
  public org.joda.time.DateTime getEventReceivedAt() {
    return event_received_at;
  }

  /**
   * Sets the value of the 'event_received_at' field.
   * 事件接收时间
   * @param value the value to set.
   */
  public void setEventReceivedAt(org.joda.time.DateTime value) {
    this.event_received_at = value;
  }

  /**
   * Gets the value of the 'event_processed_at' field.
   * @return 事件处理时间
   */
  public org.joda.time.DateTime getEventProcessedAt() {
    return event_processed_at;
  }

  /**
   * Sets the value of the 'event_processed_at' field.
   * 事件处理时间
   * @param value the value to set.
   */
  public void setEventProcessedAt(org.joda.time.DateTime value) {
    this.event_processed_at = value;
  }

  /**
   * Gets the value of the 'user_id' field.
   * @return 用户id
   */
  public Long getUserId() {
    return user_id;
  }

  /**
   * Sets the value of the 'user_id' field.
   * 用户id
   * @param value the value to set.
   */
  public void setUserId(Long value) {
    this.user_id = value;
  }

  /**
   * Gets the value of the 'user_age' field.
   * @return 用户年龄
   */
  public Integer getUserAge() {
    return user_age;
  }

  /**
   * Sets the value of the 'user_age' field.
   * 用户年龄
   * @param value the value to set.
   */
  public void setUserAge(Integer value) {
    this.user_age = value;
  }

  /**
   * Gets the value of the 'user_age_range' field.
   * @return 用户年龄分段，0：未知，1:28~24, 2:25~34, 3:25~44, 4:45~54, 5:55~64，6:65以上
   */
  public Integer getUserAgeRange() {
    return user_age_range;
  }

  /**
   * Sets the value of the 'user_age_range' field.
   * 用户年龄分段，0：未知，1:28~24, 2:25~34, 3:25~44, 4:45~54, 5:55~64，6:65以上
   * @param value the value to set.
   */
  public void setUserAgeRange(Integer value) {
    this.user_age_range = value;
  }

  /**
   * Gets the value of the 'user_gender' field.
   * @return 性别说明：0-未知，1-男性，2-女性
   */
  public Integer getUserGender() {
    return user_gender;
  }

  /**
   * Sets the value of the 'user_gender' field.
   * 性别说明：0-未知，1-男性，2-女性
   * @param value the value to set.
   */
  public void setUserGender(Integer value) {
    this.user_gender = value;
  }

  /**
   * Gets the value of the 'user_is_new' field.
   * @return 是否为今日新增用户
   */
  public Boolean getUserIsNew() {
    return user_is_new;
  }

  /**
   * Sets the value of the 'user_is_new' field.
   * 是否为今日新增用户
   * @param value the value to set.
   */
  public void setUserIsNew(Boolean value) {
    this.user_is_new = value;
  }

  /**
   * Gets the value of the 'user_is_anonymous' field.
   * @return 是否为匿名用户
   */
  public Boolean getUserIsAnonymous() {
    return user_is_anonymous;
  }

  /**
   * Sets the value of the 'user_is_anonymous' field.
   * 是否为匿名用户
   * @param value the value to set.
   */
  public void setUserIsAnonymous(Boolean value) {
    this.user_is_anonymous = value;
  }

  /**
   * Gets the value of the 'user_last_session' field.
   * @return 最后登录时间
   */
  public org.joda.time.DateTime getUserLastSession() {
    return user_last_session;
  }

  /**
   * Sets the value of the 'user_last_session' field.
   * 最后登录时间
   * @param value the value to set.
   */
  public void setUserLastSession(org.joda.time.DateTime value) {
    this.user_last_session = value;
  }

  /**
   * Gets the value of the 'client_id' field.
   * @return 客户端id
   */
  public CharSequence getClientId() {
    return client_id;
  }

  /**
   * Sets the value of the 'client_id' field.
   * 客户端id
   * @param value the value to set.
   */
  public void setClientId(CharSequence value) {
    this.client_id = value;
  }

  /**
   * Gets the value of the 'device_id' field.
   * @return 设备id
   */
  public CharSequence getDeviceId() {
    return device_id;
  }

  /**
   * Sets the value of the 'device_id' field.
   * 设备id
   * @param value the value to set.
   */
  public void setDeviceId(CharSequence value) {
    this.device_id = value;
  }

  /**
   * Gets the value of the 'device_model' field.
   * @return 设备型号
   */
  public CharSequence getDeviceModel() {
    return device_model;
  }

  /**
   * Sets the value of the 'device_model' field.
   * 设备型号
   * @param value the value to set.
   */
  public void setDeviceModel(CharSequence value) {
    this.device_model = value;
  }

  /**
   * Gets the value of the 'device_brand' field.
   * @return 设备品牌
   */
  public CharSequence getDeviceBrand() {
    return device_brand;
  }

  /**
   * Sets the value of the 'device_brand' field.
   * 设备品牌
   * @param value the value to set.
   */
  public void setDeviceBrand(CharSequence value) {
    this.device_brand = value;
  }

  /**
   * Gets the value of the 'device_family' field.
   * @return 设备系列：@{device_family}
   */
  public CharSequence getDeviceFamily() {
    return device_family;
  }

  /**
   * Sets the value of the 'device_family' field.
   * 设备系列：@{device_family}
   * @param value the value to set.
   */
  public void setDeviceFamily(CharSequence value) {
    this.device_family = value;
  }

  /**
   * Gets the value of the 'device_is_new' field.
   * @return 是否为今日新增设备
   */
  public Boolean getDeviceIsNew() {
    return device_is_new;
  }

  /**
   * Sets the value of the 'device_is_new' field.
   * 是否为今日新增设备
   * @param value the value to set.
   */
  public void setDeviceIsNew(Boolean value) {
    this.device_is_new = value;
  }

  /**
   * Gets the value of the 'device_category' field.
   * @return 设备分类，区分是否为移动端或者PC设备，可选值：desktop, tablet, mobile
   */
  public CharSequence getDeviceCategory() {
    return device_category;
  }

  /**
   * Sets the value of the 'device_category' field.
   * 设备分类，区分是否为移动端或者PC设备，可选值：desktop, tablet, mobile
   * @param value the value to set.
   */
  public void setDeviceCategory(CharSequence value) {
    this.device_category = value;
  }

  /**
   * Gets the value of the 'battery_level' field.
   * @return 当前电量
   */
  public Float getBatteryLevel() {
    return battery_level;
  }

  /**
   * Sets the value of the 'battery_level' field.
   * 当前电量
   * @param value the value to set.
   */
  public void setBatteryLevel(Float value) {
    this.battery_level = value;
  }

  /**
   * Gets the value of the 'battery_status' field.
   * @return 充电状态
   */
  public CharSequence getBatteryStatus() {
    return battery_status;
  }

  /**
   * Sets the value of the 'battery_status' field.
   * 充电状态
   * @param value the value to set.
   */
  public void setBatteryStatus(CharSequence value) {
    this.battery_status = value;
  }

  /**
   * Gets the value of the 'browser_family' field.
   * @return 浏览器系列：@{ua_family}
   */
  public CharSequence getBrowserFamily() {
    return browser_family;
  }

  /**
   * Sets the value of the 'browser_family' field.
   * 浏览器系列：@{ua_family}
   * @param value the value to set.
   */
  public void setBrowserFamily(CharSequence value) {
    this.browser_family = value;
  }

  /**
   * Gets the value of the 'browser_major' field.
   * @return 主版本
   */
  public Integer getBrowserMajor() {
    return browser_major;
  }

  /**
   * Sets the value of the 'browser_major' field.
   * 主版本
   * @param value the value to set.
   */
  public void setBrowserMajor(Integer value) {
    this.browser_major = value;
  }

  /**
   * Gets the value of the 'browser_minor' field.
   * @return 次要版本
   */
  public Integer getBrowserMinor() {
    return browser_minor;
  }

  /**
   * Sets the value of the 'browser_minor' field.
   * 次要版本
   * @param value the value to set.
   */
  public void setBrowserMinor(Integer value) {
    this.browser_minor = value;
  }

  /**
   * Gets the value of the 'browser_patch' field.
   * @return 补丁版本
   */
  public Integer getBrowserPatch() {
    return browser_patch;
  }

  /**
   * Sets the value of the 'browser_patch' field.
   * 补丁版本
   * @param value the value to set.
   */
  public void setBrowserPatch(Integer value) {
    this.browser_patch = value;
  }

  /**
   * Gets the value of the 'browser_version' field.
   * @return 浏览器版本：@{ua_major}.@{ua_minor}.@{ua_patch}
   */
  public CharSequence getBrowserVersion() {
    return browser_version;
  }

  /**
   * Sets the value of the 'browser_version' field.
   * 浏览器版本：@{ua_major}.@{ua_minor}.@{ua_patch}
   * @param value the value to set.
   */
  public void setBrowserVersion(CharSequence value) {
    this.browser_version = value;
  }

  /**
   * Gets the value of the 'browser_user_agent' field.
   * @return 浏览器User—Agent
   */
  public CharSequence getBrowserUserAgent() {
    return browser_user_agent;
  }

  /**
   * Sets the value of the 'browser_user_agent' field.
   * 浏览器User—Agent
   * @param value the value to set.
   */
  public void setBrowserUserAgent(CharSequence value) {
    this.browser_user_agent = value;
  }

  /**
   * Gets the value of the 'os_family' field.
   * @return 操作系统名称:@{os_family}, Windows, Linux, Macintosh, IOP, Android
   */
  public CharSequence getOsFamily() {
    return os_family;
  }

  /**
   * Sets the value of the 'os_family' field.
   * 操作系统名称:@{os_family}, Windows, Linux, Macintosh, IOP, Android
   * @param value the value to set.
   */
  public void setOsFamily(CharSequence value) {
    this.os_family = value;
  }

  /**
   * Gets the value of the 'os_major' field.
   * @return 主版本
   */
  public Integer getOsMajor() {
    return os_major;
  }

  /**
   * Sets the value of the 'os_major' field.
   * 主版本
   * @param value the value to set.
   */
  public void setOsMajor(Integer value) {
    this.os_major = value;
  }

  /**
   * Gets the value of the 'os_minor' field.
   * @return 次要版本
   */
  public Integer getOsMinor() {
    return os_minor;
  }

  /**
   * Sets the value of the 'os_minor' field.
   * 次要版本
   * @param value the value to set.
   */
  public void setOsMinor(Integer value) {
    this.os_minor = value;
  }

  /**
   * Gets the value of the 'os_patch' field.
   * @return 补丁版本
   */
  public Integer getOsPatch() {
    return os_patch;
  }

  /**
   * Sets the value of the 'os_patch' field.
   * 补丁版本
   * @param value the value to set.
   */
  public void setOsPatch(Integer value) {
    this.os_patch = value;
  }

  /**
   * Gets the value of the 'os_version' field.
   * @return 操作系统版本:@{os_major}.@{os_minor}.@{os_patch}
   */
  public CharSequence getOsVersion() {
    return os_version;
  }

  /**
   * Sets the value of the 'os_version' field.
   * 操作系统版本:@{os_major}.@{os_minor}.@{os_patch}
   * @param value the value to set.
   */
  public void setOsVersion(CharSequence value) {
    this.os_version = value;
  }

  /**
   * Gets the value of the 'network_operator' field.
   * @return 网络运营商：cmcc，联通
   */
  public CharSequence getNetworkOperator() {
    return network_operator;
  }

  /**
   * Sets the value of the 'network_operator' field.
   * 网络运营商：cmcc，联通
   * @param value the value to set.
   */
  public void setNetworkOperator(CharSequence value) {
    this.network_operator = value;
  }

  /**
   * Gets the value of the 'network_mode' field.
   * @return 联网方式:WiFi、3G、4G
   */
  public CharSequence getNetworkMode() {
    return network_mode;
  }

  /**
   * Sets the value of the 'network_mode' field.
   * 联网方式:WiFi、3G、4G
   * @param value the value to set.
   */
  public void setNetworkMode(CharSequence value) {
    this.network_mode = value;
  }

  /**
   * Gets the value of the 'network_country' field.
   * @return 国家
   */
  public CharSequence getNetworkCountry() {
    return network_country;
  }

  /**
   * Sets the value of the 'network_country' field.
   * 国家
   * @param value the value to set.
   */
  public void setNetworkCountry(CharSequence value) {
    this.network_country = value;
  }

  /**
   * Gets the value of the 'network_region' field.
   * @return 省份
   */
  public CharSequence getNetworkRegion() {
    return network_region;
  }

  /**
   * Sets the value of the 'network_region' field.
   * 省份
   * @param value the value to set.
   */
  public void setNetworkRegion(CharSequence value) {
    this.network_region = value;
  }

  /**
   * Gets the value of the 'network_city' field.
   * @return 城市
   */
  public CharSequence getNetworkCity() {
    return network_city;
  }

  /**
   * Sets the value of the 'network_city' field.
   * 城市
   * @param value the value to set.
   */
  public void setNetworkCity(CharSequence value) {
    this.network_city = value;
  }

  /**
   * Gets the value of the 'network_ip' field.
   * @return ip
   */
  public CharSequence getNetworkIp() {
    return network_ip;
  }

  /**
   * Sets the value of the 'network_ip' field.
   * ip
   * @param value the value to set.
   */
  public void setNetworkIp(CharSequence value) {
    this.network_ip = value;
  }

  /**
   * Gets the value of the 'network_time_zone' field.
   * @return 时区
   */
  public CharSequence getNetworkTimeZone() {
    return network_time_zone;
  }

  /**
   * Sets the value of the 'network_time_zone' field.
   * 时区
   * @param value the value to set.
   */
  public void setNetworkTimeZone(CharSequence value) {
    this.network_time_zone = value;
  }

  /**
   * Gets the value of the 'network_longitude' field.
   * @return 经度
   */
  public Double getNetworkLongitude() {
    return network_longitude;
  }

  /**
   * Sets the value of the 'network_longitude' field.
   * 经度
   * @param value the value to set.
   */
  public void setNetworkLongitude(Double value) {
    this.network_longitude = value;
  }

  /**
   * Gets the value of the 'network_latitude' field.
   * @return 纬度
   */
  public Double getNetworkLatitude() {
    return network_latitude;
  }

  /**
   * Sets the value of the 'network_latitude' field.
   * 纬度
   * @param value the value to set.
   */
  public void setNetworkLatitude(Double value) {
    this.network_latitude = value;
  }

  /**
   * Gets the value of the 'app_id' field.
   * @return 应用id
   */
  public CharSequence getAppId() {
    return app_id;
  }

  /**
   * Sets the value of the 'app_id' field.
   * 应用id
   * @param value the value to set.
   */
  public void setAppId(CharSequence value) {
    this.app_id = value;
  }

  /**
   * Gets the value of the 'app_name' field.
   * @return 应用名称
   */
  public CharSequence getAppName() {
    return app_name;
  }

  /**
   * Sets the value of the 'app_name' field.
   * 应用名称
   * @param value the value to set.
   */
  public void setAppName(CharSequence value) {
    this.app_name = value;
  }

  /**
   * Gets the value of the 'app_major' field.
   * @return 主版本
   */
  public Integer getAppMajor() {
    return app_major;
  }

  /**
   * Sets the value of the 'app_major' field.
   * 主版本
   * @param value the value to set.
   */
  public void setAppMajor(Integer value) {
    this.app_major = value;
  }

  /**
   * Gets the value of the 'app_minor' field.
   * @return 次要版本
   */
  public Integer getAppMinor() {
    return app_minor;
  }

  /**
   * Sets the value of the 'app_minor' field.
   * 次要版本
   * @param value the value to set.
   */
  public void setAppMinor(Integer value) {
    this.app_minor = value;
  }

  /**
   * Gets the value of the 'app_patch' field.
   * @return 补丁版本
   */
  public Integer getAppPatch() {
    return app_patch;
  }

  /**
   * Sets the value of the 'app_patch' field.
   * 补丁版本
   * @param value the value to set.
   */
  public void setAppPatch(Integer value) {
    this.app_patch = value;
  }

  /**
   * Gets the value of the 'app_version' field.
   * @return 应用版本
   */
  public CharSequence getAppVersion() {
    return app_version;
  }

  /**
   * Sets the value of the 'app_version' field.
   * 应用版本
   * @param value the value to set.
   */
  public void setAppVersion(CharSequence value) {
    this.app_version = value;
  }

  /**
   * Gets the value of the 'app_installer_id' field.
   * @return 应用安装渠道id
   */
  public CharSequence getAppInstallerId() {
    return app_installer_id;
  }

  /**
   * Sets the value of the 'app_installer_id' field.
   * 应用安装渠道id
   * @param value the value to set.
   */
  public void setAppInstallerId(CharSequence value) {
    this.app_installer_id = value;
  }

  /**
   * Gets the value of the 'logger_level' field.
   * @return 日志级别
   */
  public CharSequence getLoggerLevel() {
    return logger_level;
  }

  /**
   * Sets the value of the 'logger_level' field.
   * 日志级别
   * @param value the value to set.
   */
  public void setLoggerLevel(CharSequence value) {
    this.logger_level = value;
  }

  /**
   * Gets the value of the 'ex_id' field.
   * @return 异常id
   */
  public CharSequence getExId() {
    return ex_id;
  }

  /**
   * Sets the value of the 'ex_id' field.
   * 异常id
   * @param value the value to set.
   */
  public void setExId(CharSequence value) {
    this.ex_id = value;
  }

  /**
   * Gets the value of the 'ex_name' field.
   * @return 异常名称
   */
  public CharSequence getExName() {
    return ex_name;
  }

  /**
   * Sets the value of the 'ex_name' field.
   * 异常名称
   * @param value the value to set.
   */
  public void setExName(CharSequence value) {
    this.ex_name = value;
  }

  /**
   * Gets the value of the 'ex_message' field.
   * @return 异常信息
   */
  public CharSequence getExMessage() {
    return ex_message;
  }

  /**
   * Sets the value of the 'ex_message' field.
   * 异常信息
   * @param value the value to set.
   */
  public void setExMessage(CharSequence value) {
    this.ex_message = value;
  }

  /**
   * Gets the value of the 'ex_stacktrace' field.
   * @return 异常堆栈
   */
  public CharSequence getExStacktrace() {
    return ex_stacktrace;
  }

  /**
   * Sets the value of the 'ex_stacktrace' field.
   * 异常堆栈
   * @param value the value to set.
   */
  public void setExStacktrace(CharSequence value) {
    this.ex_stacktrace = value;
  }

  /**
   * Gets the value of the 'ex_is_fatal' field.
   * @return 是否为严重异常
   */
  public Boolean getExIsFatal() {
    return ex_is_fatal;
  }

  /**
   * Sets the value of the 'ex_is_fatal' field.
   * 是否为严重异常
   * @param value the value to set.
   */
  public void setExIsFatal(Boolean value) {
    this.ex_is_fatal = value;
  }

  /**
   * Gets the value of the 'time_date_month' field.
   * @return yyyy-MM-01，只记录每月第一天
   */
  public org.joda.time.LocalDate getTimeDateMonth() {
    return time_date_month;
  }

  /**
   * Sets the value of the 'time_date_month' field.
   * yyyy-MM-01，只记录每月第一天
   * @param value the value to set.
   */
  public void setTimeDateMonth(org.joda.time.LocalDate value) {
    this.time_date_month = value;
  }

  /**
   * Gets the value of the 'time_date_week' field.
   * @return yyyy-MM-WW，当前月第几周
   */
  public org.joda.time.LocalDate getTimeDateWeek() {
    return time_date_week;
  }

  /**
   * Sets the value of the 'time_date_week' field.
   * yyyy-MM-WW，当前月第几周
   * @param value the value to set.
   */
  public void setTimeDateWeek(org.joda.time.LocalDate value) {
    this.time_date_week = value;
  }

  /**
   * Gets the value of the 'time_date_hour' field.
   * @return yyyy-MM-dd'T'HH:00:00
   */
  public org.joda.time.DateTime getTimeDateHour() {
    return time_date_hour;
  }

  /**
   * Sets the value of the 'time_date_hour' field.
   * yyyy-MM-dd'T'HH:00:00
   * @param value the value to set.
   */
  public void setTimeDateHour(org.joda.time.DateTime value) {
    this.time_date_hour = value;
  }

  /**
   * Gets the value of the 'time_date_hour_minute' field.
   * @return yyyy-MM-dd'T'HH:mm:00
   */
  public org.joda.time.DateTime getTimeDateHourMinute() {
    return time_date_hour_minute;
  }

  /**
   * Sets the value of the 'time_date_hour_minute' field.
   * yyyy-MM-dd'T'HH:mm:00
   * @param value the value to set.
   */
  public void setTimeDateHourMinute(org.joda.time.DateTime value) {
    this.time_date_hour_minute = value;
  }

  /**
   * Gets the value of the 'time_datetime' field.
   * @return yyyy-MM-dd'T'HH:mm:ss
   */
  public org.joda.time.DateTime getTimeDatetime() {
    return time_datetime;
  }

  /**
   * Sets the value of the 'time_datetime' field.
   * yyyy-MM-dd'T'HH:mm:ss
   * @param value the value to set.
   */
  public void setTimeDatetime(org.joda.time.DateTime value) {
    this.time_datetime = value;
  }

  /**
   * Gets the value of the 'time_millis' field.
   * @return 1970至今毫秒数
   */
  public Long getTimeMillis() {
    return time_millis;
  }

  /**
   * Sets the value of the 'time_millis' field.
   * 1970至今毫秒数
   * @param value the value to set.
   */
  public void setTimeMillis(Long value) {
    this.time_millis = value;
  }

  /**
   * Creates a new game_analytics_standard_events RecordBuilder.
   * @return A new game_analytics_standard_events RecordBuilder
   */
  public static Builder newBuilder() {
    return new Builder();
  }

  /**
   * Creates a new game_analytics_standard_events RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new game_analytics_standard_events RecordBuilder
   */
  public static Builder newBuilder(Builder other) {
    return new Builder(other);
  }

  /**
   * Creates a new game_analytics_standard_events RecordBuilder by copying an existing game_analytics_standard_events instance.
   * @param other The existing instance to copy.
   * @return A new game_analytics_standard_events RecordBuilder
   */
  public static Builder newBuilder(game_analytics_standard_events other) {
    return new Builder(other);
  }

  /**
   * RecordBuilder for game_analytics_standard_events instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<game_analytics_standard_events>
          implements org.apache.avro.data.RecordBuilder<game_analytics_standard_events> {

    /** 事件递增序列id */
    private long event_id;
    /** 事件名称 */
    private CharSequence event_name;
    /** 事件数据来源，例如：pomelo、unity-server */
    private CharSequence event_datasource;
    /** 时间接收环境：dev、test */
    private CharSequence event_env;
    /** 事件发生时间 */
    private org.joda.time.DateTime event_created_at;
    /** 事件接收时间 */
    private org.joda.time.DateTime event_received_at;
    /** 事件处理时间 */
    private org.joda.time.DateTime event_processed_at;
    /** 用户id */
    private long user_id;
    /** 用户年龄 */
    private int user_age;
    /** 用户年龄分段，0：未知，1:28~24, 2:25~34, 3:25~44, 4:45~54, 5:55~64，6:65以上 */
    private int user_age_range;
    /** 性别说明：0-未知，1-男性，2-女性 */
    private int user_gender;
    /** 是否为今日新增用户 */
    private boolean user_is_new;
    /** 是否为匿名用户 */
    private boolean user_is_anonymous;
    /** 最后登录时间 */
    private org.joda.time.DateTime user_last_session;
    /** 客户端id */
    private CharSequence client_id;
    /** 设备id */
    private CharSequence device_id;
    /** 设备型号 */
    private CharSequence device_model;
    /** 设备品牌 */
    private CharSequence device_brand;
    /** 设备系列：@{device_family} */
    private CharSequence device_family;
    /** 是否为今日新增设备 */
    private boolean device_is_new;
    /** 设备分类，区分是否为移动端或者PC设备，可选值：desktop, tablet, mobile */
    private CharSequence device_category;
    /** 当前电量 */
    private float battery_level;
    /** 充电状态 */
    private CharSequence battery_status;
    /** 浏览器系列：@{ua_family} */
    private CharSequence browser_family;
    /** 主版本 */
    private int browser_major;
    /** 次要版本 */
    private int browser_minor;
    /** 补丁版本 */
    private int browser_patch;
    /** 浏览器版本：@{ua_major}.@{ua_minor}.@{ua_patch} */
    private CharSequence browser_version;
    /** 浏览器User—Agent */
    private CharSequence browser_user_agent;
    /** 操作系统名称:@{os_family}, Windows, Linux, Macintosh, IOP, Android */
    private CharSequence os_family;
    /** 主版本 */
    private int os_major;
    /** 次要版本 */
    private int os_minor;
    /** 补丁版本 */
    private int os_patch;
    /** 操作系统版本:@{os_major}.@{os_minor}.@{os_patch} */
    private CharSequence os_version;
    /** 网络运营商：cmcc，联通 */
    private CharSequence network_operator;
    /** 联网方式:WiFi、3G、4G */
    private CharSequence network_mode;
    /** 国家 */
    private CharSequence network_country;
    /** 省份 */
    private CharSequence network_region;
    /** 城市 */
    private CharSequence network_city;
    /** ip */
    private CharSequence network_ip;
    /** 时区 */
    private CharSequence network_time_zone;
    /** 经度 */
    private double network_longitude;
    /** 纬度 */
    private double network_latitude;
    /** 应用id */
    private CharSequence app_id;
    /** 应用名称 */
    private CharSequence app_name;
    /** 主版本 */
    private int app_major;
    /** 次要版本 */
    private int app_minor;
    /** 补丁版本 */
    private int app_patch;
    /** 应用版本 */
    private CharSequence app_version;
    /** 应用安装渠道id */
    private CharSequence app_installer_id;
    /** 日志级别 */
    private CharSequence logger_level;
    /** 异常id */
    private CharSequence ex_id;
    /** 异常名称 */
    private CharSequence ex_name;
    /** 异常信息 */
    private CharSequence ex_message;
    /** 异常堆栈 */
    private CharSequence ex_stacktrace;
    /** 是否为严重异常 */
    private boolean ex_is_fatal;
    /** yyyy-MM-01，只记录每月第一天 */
    private org.joda.time.LocalDate time_date_month;
    /** yyyy-MM-WW，当前月第几周 */
    private org.joda.time.LocalDate time_date_week;
    /** yyyy-MM-dd'T'HH:00:00 */
    private org.joda.time.DateTime time_date_hour;
    /** yyyy-MM-dd'T'HH:mm:00 */
    private org.joda.time.DateTime time_date_hour_minute;
    /** yyyy-MM-dd'T'HH:mm:ss */
    private org.joda.time.DateTime time_datetime;
    /** 1970至今毫秒数 */
    private long time_millis;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.event_id)) {
        this.event_id = data().deepCopy(fields()[0].schema(), other.event_id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.event_name)) {
        this.event_name = data().deepCopy(fields()[1].schema(), other.event_name);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.event_datasource)) {
        this.event_datasource = data().deepCopy(fields()[2].schema(), other.event_datasource);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.event_env)) {
        this.event_env = data().deepCopy(fields()[3].schema(), other.event_env);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.event_created_at)) {
        this.event_created_at = data().deepCopy(fields()[4].schema(), other.event_created_at);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.event_received_at)) {
        this.event_received_at = data().deepCopy(fields()[5].schema(), other.event_received_at);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.event_processed_at)) {
        this.event_processed_at = data().deepCopy(fields()[6].schema(), other.event_processed_at);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.user_id)) {
        this.user_id = data().deepCopy(fields()[7].schema(), other.user_id);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.user_age)) {
        this.user_age = data().deepCopy(fields()[8].schema(), other.user_age);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.user_age_range)) {
        this.user_age_range = data().deepCopy(fields()[9].schema(), other.user_age_range);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.user_gender)) {
        this.user_gender = data().deepCopy(fields()[10].schema(), other.user_gender);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.user_is_new)) {
        this.user_is_new = data().deepCopy(fields()[11].schema(), other.user_is_new);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.user_is_anonymous)) {
        this.user_is_anonymous = data().deepCopy(fields()[12].schema(), other.user_is_anonymous);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.user_last_session)) {
        this.user_last_session = data().deepCopy(fields()[13].schema(), other.user_last_session);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.client_id)) {
        this.client_id = data().deepCopy(fields()[14].schema(), other.client_id);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.device_id)) {
        this.device_id = data().deepCopy(fields()[15].schema(), other.device_id);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.device_model)) {
        this.device_model = data().deepCopy(fields()[16].schema(), other.device_model);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.device_brand)) {
        this.device_brand = data().deepCopy(fields()[17].schema(), other.device_brand);
        fieldSetFlags()[17] = true;
      }
      if (isValidValue(fields()[18], other.device_family)) {
        this.device_family = data().deepCopy(fields()[18].schema(), other.device_family);
        fieldSetFlags()[18] = true;
      }
      if (isValidValue(fields()[19], other.device_is_new)) {
        this.device_is_new = data().deepCopy(fields()[19].schema(), other.device_is_new);
        fieldSetFlags()[19] = true;
      }
      if (isValidValue(fields()[20], other.device_category)) {
        this.device_category = data().deepCopy(fields()[20].schema(), other.device_category);
        fieldSetFlags()[20] = true;
      }
      if (isValidValue(fields()[21], other.battery_level)) {
        this.battery_level = data().deepCopy(fields()[21].schema(), other.battery_level);
        fieldSetFlags()[21] = true;
      }
      if (isValidValue(fields()[22], other.battery_status)) {
        this.battery_status = data().deepCopy(fields()[22].schema(), other.battery_status);
        fieldSetFlags()[22] = true;
      }
      if (isValidValue(fields()[23], other.browser_family)) {
        this.browser_family = data().deepCopy(fields()[23].schema(), other.browser_family);
        fieldSetFlags()[23] = true;
      }
      if (isValidValue(fields()[24], other.browser_major)) {
        this.browser_major = data().deepCopy(fields()[24].schema(), other.browser_major);
        fieldSetFlags()[24] = true;
      }
      if (isValidValue(fields()[25], other.browser_minor)) {
        this.browser_minor = data().deepCopy(fields()[25].schema(), other.browser_minor);
        fieldSetFlags()[25] = true;
      }
      if (isValidValue(fields()[26], other.browser_patch)) {
        this.browser_patch = data().deepCopy(fields()[26].schema(), other.browser_patch);
        fieldSetFlags()[26] = true;
      }
      if (isValidValue(fields()[27], other.browser_version)) {
        this.browser_version = data().deepCopy(fields()[27].schema(), other.browser_version);
        fieldSetFlags()[27] = true;
      }
      if (isValidValue(fields()[28], other.browser_user_agent)) {
        this.browser_user_agent = data().deepCopy(fields()[28].schema(), other.browser_user_agent);
        fieldSetFlags()[28] = true;
      }
      if (isValidValue(fields()[29], other.os_family)) {
        this.os_family = data().deepCopy(fields()[29].schema(), other.os_family);
        fieldSetFlags()[29] = true;
      }
      if (isValidValue(fields()[30], other.os_major)) {
        this.os_major = data().deepCopy(fields()[30].schema(), other.os_major);
        fieldSetFlags()[30] = true;
      }
      if (isValidValue(fields()[31], other.os_minor)) {
        this.os_minor = data().deepCopy(fields()[31].schema(), other.os_minor);
        fieldSetFlags()[31] = true;
      }
      if (isValidValue(fields()[32], other.os_patch)) {
        this.os_patch = data().deepCopy(fields()[32].schema(), other.os_patch);
        fieldSetFlags()[32] = true;
      }
      if (isValidValue(fields()[33], other.os_version)) {
        this.os_version = data().deepCopy(fields()[33].schema(), other.os_version);
        fieldSetFlags()[33] = true;
      }
      if (isValidValue(fields()[34], other.network_operator)) {
        this.network_operator = data().deepCopy(fields()[34].schema(), other.network_operator);
        fieldSetFlags()[34] = true;
      }
      if (isValidValue(fields()[35], other.network_mode)) {
        this.network_mode = data().deepCopy(fields()[35].schema(), other.network_mode);
        fieldSetFlags()[35] = true;
      }
      if (isValidValue(fields()[36], other.network_country)) {
        this.network_country = data().deepCopy(fields()[36].schema(), other.network_country);
        fieldSetFlags()[36] = true;
      }
      if (isValidValue(fields()[37], other.network_region)) {
        this.network_region = data().deepCopy(fields()[37].schema(), other.network_region);
        fieldSetFlags()[37] = true;
      }
      if (isValidValue(fields()[38], other.network_city)) {
        this.network_city = data().deepCopy(fields()[38].schema(), other.network_city);
        fieldSetFlags()[38] = true;
      }
      if (isValidValue(fields()[39], other.network_ip)) {
        this.network_ip = data().deepCopy(fields()[39].schema(), other.network_ip);
        fieldSetFlags()[39] = true;
      }
      if (isValidValue(fields()[40], other.network_time_zone)) {
        this.network_time_zone = data().deepCopy(fields()[40].schema(), other.network_time_zone);
        fieldSetFlags()[40] = true;
      }
      if (isValidValue(fields()[41], other.network_longitude)) {
        this.network_longitude = data().deepCopy(fields()[41].schema(), other.network_longitude);
        fieldSetFlags()[41] = true;
      }
      if (isValidValue(fields()[42], other.network_latitude)) {
        this.network_latitude = data().deepCopy(fields()[42].schema(), other.network_latitude);
        fieldSetFlags()[42] = true;
      }
      if (isValidValue(fields()[43], other.app_id)) {
        this.app_id = data().deepCopy(fields()[43].schema(), other.app_id);
        fieldSetFlags()[43] = true;
      }
      if (isValidValue(fields()[44], other.app_name)) {
        this.app_name = data().deepCopy(fields()[44].schema(), other.app_name);
        fieldSetFlags()[44] = true;
      }
      if (isValidValue(fields()[45], other.app_major)) {
        this.app_major = data().deepCopy(fields()[45].schema(), other.app_major);
        fieldSetFlags()[45] = true;
      }
      if (isValidValue(fields()[46], other.app_minor)) {
        this.app_minor = data().deepCopy(fields()[46].schema(), other.app_minor);
        fieldSetFlags()[46] = true;
      }
      if (isValidValue(fields()[47], other.app_patch)) {
        this.app_patch = data().deepCopy(fields()[47].schema(), other.app_patch);
        fieldSetFlags()[47] = true;
      }
      if (isValidValue(fields()[48], other.app_version)) {
        this.app_version = data().deepCopy(fields()[48].schema(), other.app_version);
        fieldSetFlags()[48] = true;
      }
      if (isValidValue(fields()[49], other.app_installer_id)) {
        this.app_installer_id = data().deepCopy(fields()[49].schema(), other.app_installer_id);
        fieldSetFlags()[49] = true;
      }
      if (isValidValue(fields()[50], other.logger_level)) {
        this.logger_level = data().deepCopy(fields()[50].schema(), other.logger_level);
        fieldSetFlags()[50] = true;
      }
      if (isValidValue(fields()[51], other.ex_id)) {
        this.ex_id = data().deepCopy(fields()[51].schema(), other.ex_id);
        fieldSetFlags()[51] = true;
      }
      if (isValidValue(fields()[52], other.ex_name)) {
        this.ex_name = data().deepCopy(fields()[52].schema(), other.ex_name);
        fieldSetFlags()[52] = true;
      }
      if (isValidValue(fields()[53], other.ex_message)) {
        this.ex_message = data().deepCopy(fields()[53].schema(), other.ex_message);
        fieldSetFlags()[53] = true;
      }
      if (isValidValue(fields()[54], other.ex_stacktrace)) {
        this.ex_stacktrace = data().deepCopy(fields()[54].schema(), other.ex_stacktrace);
        fieldSetFlags()[54] = true;
      }
      if (isValidValue(fields()[55], other.ex_is_fatal)) {
        this.ex_is_fatal = data().deepCopy(fields()[55].schema(), other.ex_is_fatal);
        fieldSetFlags()[55] = true;
      }
      if (isValidValue(fields()[56], other.time_date_month)) {
        this.time_date_month = data().deepCopy(fields()[56].schema(), other.time_date_month);
        fieldSetFlags()[56] = true;
      }
      if (isValidValue(fields()[57], other.time_date_week)) {
        this.time_date_week = data().deepCopy(fields()[57].schema(), other.time_date_week);
        fieldSetFlags()[57] = true;
      }
      if (isValidValue(fields()[58], other.time_date_hour)) {
        this.time_date_hour = data().deepCopy(fields()[58].schema(), other.time_date_hour);
        fieldSetFlags()[58] = true;
      }
      if (isValidValue(fields()[59], other.time_date_hour_minute)) {
        this.time_date_hour_minute = data().deepCopy(fields()[59].schema(), other.time_date_hour_minute);
        fieldSetFlags()[59] = true;
      }
      if (isValidValue(fields()[60], other.time_datetime)) {
        this.time_datetime = data().deepCopy(fields()[60].schema(), other.time_datetime);
        fieldSetFlags()[60] = true;
      }
      if (isValidValue(fields()[61], other.time_millis)) {
        this.time_millis = data().deepCopy(fields()[61].schema(), other.time_millis);
        fieldSetFlags()[61] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing game_analytics_standard_events instance
     * @param other The existing instance to copy.
     */
    private Builder(game_analytics_standard_events other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.event_id)) {
        this.event_id = data().deepCopy(fields()[0].schema(), other.event_id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.event_name)) {
        this.event_name = data().deepCopy(fields()[1].schema(), other.event_name);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.event_datasource)) {
        this.event_datasource = data().deepCopy(fields()[2].schema(), other.event_datasource);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.event_env)) {
        this.event_env = data().deepCopy(fields()[3].schema(), other.event_env);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.event_created_at)) {
        this.event_created_at = data().deepCopy(fields()[4].schema(), other.event_created_at);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.event_received_at)) {
        this.event_received_at = data().deepCopy(fields()[5].schema(), other.event_received_at);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.event_processed_at)) {
        this.event_processed_at = data().deepCopy(fields()[6].schema(), other.event_processed_at);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.user_id)) {
        this.user_id = data().deepCopy(fields()[7].schema(), other.user_id);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.user_age)) {
        this.user_age = data().deepCopy(fields()[8].schema(), other.user_age);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.user_age_range)) {
        this.user_age_range = data().deepCopy(fields()[9].schema(), other.user_age_range);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.user_gender)) {
        this.user_gender = data().deepCopy(fields()[10].schema(), other.user_gender);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.user_is_new)) {
        this.user_is_new = data().deepCopy(fields()[11].schema(), other.user_is_new);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.user_is_anonymous)) {
        this.user_is_anonymous = data().deepCopy(fields()[12].schema(), other.user_is_anonymous);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.user_last_session)) {
        this.user_last_session = data().deepCopy(fields()[13].schema(), other.user_last_session);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.client_id)) {
        this.client_id = data().deepCopy(fields()[14].schema(), other.client_id);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.device_id)) {
        this.device_id = data().deepCopy(fields()[15].schema(), other.device_id);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.device_model)) {
        this.device_model = data().deepCopy(fields()[16].schema(), other.device_model);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.device_brand)) {
        this.device_brand = data().deepCopy(fields()[17].schema(), other.device_brand);
        fieldSetFlags()[17] = true;
      }
      if (isValidValue(fields()[18], other.device_family)) {
        this.device_family = data().deepCopy(fields()[18].schema(), other.device_family);
        fieldSetFlags()[18] = true;
      }
      if (isValidValue(fields()[19], other.device_is_new)) {
        this.device_is_new = data().deepCopy(fields()[19].schema(), other.device_is_new);
        fieldSetFlags()[19] = true;
      }
      if (isValidValue(fields()[20], other.device_category)) {
        this.device_category = data().deepCopy(fields()[20].schema(), other.device_category);
        fieldSetFlags()[20] = true;
      }
      if (isValidValue(fields()[21], other.battery_level)) {
        this.battery_level = data().deepCopy(fields()[21].schema(), other.battery_level);
        fieldSetFlags()[21] = true;
      }
      if (isValidValue(fields()[22], other.battery_status)) {
        this.battery_status = data().deepCopy(fields()[22].schema(), other.battery_status);
        fieldSetFlags()[22] = true;
      }
      if (isValidValue(fields()[23], other.browser_family)) {
        this.browser_family = data().deepCopy(fields()[23].schema(), other.browser_family);
        fieldSetFlags()[23] = true;
      }
      if (isValidValue(fields()[24], other.browser_major)) {
        this.browser_major = data().deepCopy(fields()[24].schema(), other.browser_major);
        fieldSetFlags()[24] = true;
      }
      if (isValidValue(fields()[25], other.browser_minor)) {
        this.browser_minor = data().deepCopy(fields()[25].schema(), other.browser_minor);
        fieldSetFlags()[25] = true;
      }
      if (isValidValue(fields()[26], other.browser_patch)) {
        this.browser_patch = data().deepCopy(fields()[26].schema(), other.browser_patch);
        fieldSetFlags()[26] = true;
      }
      if (isValidValue(fields()[27], other.browser_version)) {
        this.browser_version = data().deepCopy(fields()[27].schema(), other.browser_version);
        fieldSetFlags()[27] = true;
      }
      if (isValidValue(fields()[28], other.browser_user_agent)) {
        this.browser_user_agent = data().deepCopy(fields()[28].schema(), other.browser_user_agent);
        fieldSetFlags()[28] = true;
      }
      if (isValidValue(fields()[29], other.os_family)) {
        this.os_family = data().deepCopy(fields()[29].schema(), other.os_family);
        fieldSetFlags()[29] = true;
      }
      if (isValidValue(fields()[30], other.os_major)) {
        this.os_major = data().deepCopy(fields()[30].schema(), other.os_major);
        fieldSetFlags()[30] = true;
      }
      if (isValidValue(fields()[31], other.os_minor)) {
        this.os_minor = data().deepCopy(fields()[31].schema(), other.os_minor);
        fieldSetFlags()[31] = true;
      }
      if (isValidValue(fields()[32], other.os_patch)) {
        this.os_patch = data().deepCopy(fields()[32].schema(), other.os_patch);
        fieldSetFlags()[32] = true;
      }
      if (isValidValue(fields()[33], other.os_version)) {
        this.os_version = data().deepCopy(fields()[33].schema(), other.os_version);
        fieldSetFlags()[33] = true;
      }
      if (isValidValue(fields()[34], other.network_operator)) {
        this.network_operator = data().deepCopy(fields()[34].schema(), other.network_operator);
        fieldSetFlags()[34] = true;
      }
      if (isValidValue(fields()[35], other.network_mode)) {
        this.network_mode = data().deepCopy(fields()[35].schema(), other.network_mode);
        fieldSetFlags()[35] = true;
      }
      if (isValidValue(fields()[36], other.network_country)) {
        this.network_country = data().deepCopy(fields()[36].schema(), other.network_country);
        fieldSetFlags()[36] = true;
      }
      if (isValidValue(fields()[37], other.network_region)) {
        this.network_region = data().deepCopy(fields()[37].schema(), other.network_region);
        fieldSetFlags()[37] = true;
      }
      if (isValidValue(fields()[38], other.network_city)) {
        this.network_city = data().deepCopy(fields()[38].schema(), other.network_city);
        fieldSetFlags()[38] = true;
      }
      if (isValidValue(fields()[39], other.network_ip)) {
        this.network_ip = data().deepCopy(fields()[39].schema(), other.network_ip);
        fieldSetFlags()[39] = true;
      }
      if (isValidValue(fields()[40], other.network_time_zone)) {
        this.network_time_zone = data().deepCopy(fields()[40].schema(), other.network_time_zone);
        fieldSetFlags()[40] = true;
      }
      if (isValidValue(fields()[41], other.network_longitude)) {
        this.network_longitude = data().deepCopy(fields()[41].schema(), other.network_longitude);
        fieldSetFlags()[41] = true;
      }
      if (isValidValue(fields()[42], other.network_latitude)) {
        this.network_latitude = data().deepCopy(fields()[42].schema(), other.network_latitude);
        fieldSetFlags()[42] = true;
      }
      if (isValidValue(fields()[43], other.app_id)) {
        this.app_id = data().deepCopy(fields()[43].schema(), other.app_id);
        fieldSetFlags()[43] = true;
      }
      if (isValidValue(fields()[44], other.app_name)) {
        this.app_name = data().deepCopy(fields()[44].schema(), other.app_name);
        fieldSetFlags()[44] = true;
      }
      if (isValidValue(fields()[45], other.app_major)) {
        this.app_major = data().deepCopy(fields()[45].schema(), other.app_major);
        fieldSetFlags()[45] = true;
      }
      if (isValidValue(fields()[46], other.app_minor)) {
        this.app_minor = data().deepCopy(fields()[46].schema(), other.app_minor);
        fieldSetFlags()[46] = true;
      }
      if (isValidValue(fields()[47], other.app_patch)) {
        this.app_patch = data().deepCopy(fields()[47].schema(), other.app_patch);
        fieldSetFlags()[47] = true;
      }
      if (isValidValue(fields()[48], other.app_version)) {
        this.app_version = data().deepCopy(fields()[48].schema(), other.app_version);
        fieldSetFlags()[48] = true;
      }
      if (isValidValue(fields()[49], other.app_installer_id)) {
        this.app_installer_id = data().deepCopy(fields()[49].schema(), other.app_installer_id);
        fieldSetFlags()[49] = true;
      }
      if (isValidValue(fields()[50], other.logger_level)) {
        this.logger_level = data().deepCopy(fields()[50].schema(), other.logger_level);
        fieldSetFlags()[50] = true;
      }
      if (isValidValue(fields()[51], other.ex_id)) {
        this.ex_id = data().deepCopy(fields()[51].schema(), other.ex_id);
        fieldSetFlags()[51] = true;
      }
      if (isValidValue(fields()[52], other.ex_name)) {
        this.ex_name = data().deepCopy(fields()[52].schema(), other.ex_name);
        fieldSetFlags()[52] = true;
      }
      if (isValidValue(fields()[53], other.ex_message)) {
        this.ex_message = data().deepCopy(fields()[53].schema(), other.ex_message);
        fieldSetFlags()[53] = true;
      }
      if (isValidValue(fields()[54], other.ex_stacktrace)) {
        this.ex_stacktrace = data().deepCopy(fields()[54].schema(), other.ex_stacktrace);
        fieldSetFlags()[54] = true;
      }
      if (isValidValue(fields()[55], other.ex_is_fatal)) {
        this.ex_is_fatal = data().deepCopy(fields()[55].schema(), other.ex_is_fatal);
        fieldSetFlags()[55] = true;
      }
      if (isValidValue(fields()[56], other.time_date_month)) {
        this.time_date_month = data().deepCopy(fields()[56].schema(), other.time_date_month);
        fieldSetFlags()[56] = true;
      }
      if (isValidValue(fields()[57], other.time_date_week)) {
        this.time_date_week = data().deepCopy(fields()[57].schema(), other.time_date_week);
        fieldSetFlags()[57] = true;
      }
      if (isValidValue(fields()[58], other.time_date_hour)) {
        this.time_date_hour = data().deepCopy(fields()[58].schema(), other.time_date_hour);
        fieldSetFlags()[58] = true;
      }
      if (isValidValue(fields()[59], other.time_date_hour_minute)) {
        this.time_date_hour_minute = data().deepCopy(fields()[59].schema(), other.time_date_hour_minute);
        fieldSetFlags()[59] = true;
      }
      if (isValidValue(fields()[60], other.time_datetime)) {
        this.time_datetime = data().deepCopy(fields()[60].schema(), other.time_datetime);
        fieldSetFlags()[60] = true;
      }
      if (isValidValue(fields()[61], other.time_millis)) {
        this.time_millis = data().deepCopy(fields()[61].schema(), other.time_millis);
        fieldSetFlags()[61] = true;
      }
    }

    /**
     * Gets the value of the 'event_id' field.
     * 事件递增序列id
     * @return The value.
     */
    public Long getEventId() {
      return event_id;
    }

    /**
     * Sets the value of the 'event_id' field.
     * 事件递增序列id
     * @param value The value of 'event_id'.
     * @return This builder.
     */
    public Builder setEventId(long value) {
      validate(fields()[0], value);
      this.event_id = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
     * Checks whether the 'event_id' field has been set.
     * 事件递增序列id
     * @return True if the 'event_id' field has been set, false otherwise.
     */
    public boolean hasEventId() {
      return fieldSetFlags()[0];
    }


    /**
     * Clears the value of the 'event_id' field.
     * 事件递增序列id
     * @return This builder.
     */
    public Builder clearEventId() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
     * Gets the value of the 'event_name' field.
     * 事件名称
     * @return The value.
     */
    public CharSequence getEventName() {
      return event_name;
    }

    /**
     * Sets the value of the 'event_name' field.
     * 事件名称
     * @param value The value of 'event_name'.
     * @return This builder.
     */
    public Builder setEventName(CharSequence value) {
      validate(fields()[1], value);
      this.event_name = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
     * Checks whether the 'event_name' field has been set.
     * 事件名称
     * @return True if the 'event_name' field has been set, false otherwise.
     */
    public boolean hasEventName() {
      return fieldSetFlags()[1];
    }


    /**
     * Clears the value of the 'event_name' field.
     * 事件名称
     * @return This builder.
     */
    public Builder clearEventName() {
      event_name = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
     * Gets the value of the 'event_datasource' field.
     * 事件数据来源，例如：pomelo、unity-server
     * @return The value.
     */
    public CharSequence getEventDatasource() {
      return event_datasource;
    }

    /**
     * Sets the value of the 'event_datasource' field.
     * 事件数据来源，例如：pomelo、unity-server
     * @param value The value of 'event_datasource'.
     * @return This builder.
     */
    public Builder setEventDatasource(CharSequence value) {
      validate(fields()[2], value);
      this.event_datasource = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
     * Checks whether the 'event_datasource' field has been set.
     * 事件数据来源，例如：pomelo、unity-server
     * @return True if the 'event_datasource' field has been set, false otherwise.
     */
    public boolean hasEventDatasource() {
      return fieldSetFlags()[2];
    }


    /**
     * Clears the value of the 'event_datasource' field.
     * 事件数据来源，例如：pomelo、unity-server
     * @return This builder.
     */
    public Builder clearEventDatasource() {
      event_datasource = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
     * Gets the value of the 'event_env' field.
     * 时间接收环境：dev、test
     * @return The value.
     */
    public CharSequence getEventEnv() {
      return event_env;
    }

    /**
     * Sets the value of the 'event_env' field.
     * 时间接收环境：dev、test
     * @param value The value of 'event_env'.
     * @return This builder.
     */
    public Builder setEventEnv(CharSequence value) {
      validate(fields()[3], value);
      this.event_env = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
     * Checks whether the 'event_env' field has been set.
     * 时间接收环境：dev、test
     * @return True if the 'event_env' field has been set, false otherwise.
     */
    public boolean hasEventEnv() {
      return fieldSetFlags()[3];
    }


    /**
     * Clears the value of the 'event_env' field.
     * 时间接收环境：dev、test
     * @return This builder.
     */
    public Builder clearEventEnv() {
      event_env = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
     * Gets the value of the 'event_created_at' field.
     * 事件发生时间
     * @return The value.
     */
    public org.joda.time.DateTime getEventCreatedAt() {
      return event_created_at;
    }

    /**
     * Sets the value of the 'event_created_at' field.
     * 事件发生时间
     * @param value The value of 'event_created_at'.
     * @return This builder.
     */
    public Builder setEventCreatedAt(org.joda.time.DateTime value) {
      validate(fields()[4], value);
      this.event_created_at = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
     * Checks whether the 'event_created_at' field has been set.
     * 事件发生时间
     * @return True if the 'event_created_at' field has been set, false otherwise.
     */
    public boolean hasEventCreatedAt() {
      return fieldSetFlags()[4];
    }


    /**
     * Clears the value of the 'event_created_at' field.
     * 事件发生时间
     * @return This builder.
     */
    public Builder clearEventCreatedAt() {
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
     * Gets the value of the 'event_received_at' field.
     * 事件接收时间
     * @return The value.
     */
    public org.joda.time.DateTime getEventReceivedAt() {
      return event_received_at;
    }

    /**
     * Sets the value of the 'event_received_at' field.
     * 事件接收时间
     * @param value The value of 'event_received_at'.
     * @return This builder.
     */
    public Builder setEventReceivedAt(org.joda.time.DateTime value) {
      validate(fields()[5], value);
      this.event_received_at = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
     * Checks whether the 'event_received_at' field has been set.
     * 事件接收时间
     * @return True if the 'event_received_at' field has been set, false otherwise.
     */
    public boolean hasEventReceivedAt() {
      return fieldSetFlags()[5];
    }


    /**
     * Clears the value of the 'event_received_at' field.
     * 事件接收时间
     * @return This builder.
     */
    public Builder clearEventReceivedAt() {
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
     * Gets the value of the 'event_processed_at' field.
     * 事件处理时间
     * @return The value.
     */
    public org.joda.time.DateTime getEventProcessedAt() {
      return event_processed_at;
    }

    /**
     * Sets the value of the 'event_processed_at' field.
     * 事件处理时间
     * @param value The value of 'event_processed_at'.
     * @return This builder.
     */
    public Builder setEventProcessedAt(org.joda.time.DateTime value) {
      validate(fields()[6], value);
      this.event_processed_at = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
     * Checks whether the 'event_processed_at' field has been set.
     * 事件处理时间
     * @return True if the 'event_processed_at' field has been set, false otherwise.
     */
    public boolean hasEventProcessedAt() {
      return fieldSetFlags()[6];
    }


    /**
     * Clears the value of the 'event_processed_at' field.
     * 事件处理时间
     * @return This builder.
     */
    public Builder clearEventProcessedAt() {
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
     * Gets the value of the 'user_id' field.
     * 用户id
     * @return The value.
     */
    public Long getUserId() {
      return user_id;
    }

    /**
     * Sets the value of the 'user_id' field.
     * 用户id
     * @param value The value of 'user_id'.
     * @return This builder.
     */
    public Builder setUserId(long value) {
      validate(fields()[7], value);
      this.user_id = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
     * Checks whether the 'user_id' field has been set.
     * 用户id
     * @return True if the 'user_id' field has been set, false otherwise.
     */
    public boolean hasUserId() {
      return fieldSetFlags()[7];
    }


    /**
     * Clears the value of the 'user_id' field.
     * 用户id
     * @return This builder.
     */
    public Builder clearUserId() {
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
     * Gets the value of the 'user_age' field.
     * 用户年龄
     * @return The value.
     */
    public Integer getUserAge() {
      return user_age;
    }

    /**
     * Sets the value of the 'user_age' field.
     * 用户年龄
     * @param value The value of 'user_age'.
     * @return This builder.
     */
    public Builder setUserAge(int value) {
      validate(fields()[8], value);
      this.user_age = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
     * Checks whether the 'user_age' field has been set.
     * 用户年龄
     * @return True if the 'user_age' field has been set, false otherwise.
     */
    public boolean hasUserAge() {
      return fieldSetFlags()[8];
    }


    /**
     * Clears the value of the 'user_age' field.
     * 用户年龄
     * @return This builder.
     */
    public Builder clearUserAge() {
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
     * Gets the value of the 'user_age_range' field.
     * 用户年龄分段，0：未知，1:28~24, 2:25~34, 3:25~44, 4:45~54, 5:55~64，6:65以上
     * @return The value.
     */
    public Integer getUserAgeRange() {
      return user_age_range;
    }

    /**
     * Sets the value of the 'user_age_range' field.
     * 用户年龄分段，0：未知，1:28~24, 2:25~34, 3:25~44, 4:45~54, 5:55~64，6:65以上
     * @param value The value of 'user_age_range'.
     * @return This builder.
     */
    public Builder setUserAgeRange(int value) {
      validate(fields()[9], value);
      this.user_age_range = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
     * Checks whether the 'user_age_range' field has been set.
     * 用户年龄分段，0：未知，1:28~24, 2:25~34, 3:25~44, 4:45~54, 5:55~64，6:65以上
     * @return True if the 'user_age_range' field has been set, false otherwise.
     */
    public boolean hasUserAgeRange() {
      return fieldSetFlags()[9];
    }


    /**
     * Clears the value of the 'user_age_range' field.
     * 用户年龄分段，0：未知，1:28~24, 2:25~34, 3:25~44, 4:45~54, 5:55~64，6:65以上
     * @return This builder.
     */
    public Builder clearUserAgeRange() {
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
     * Gets the value of the 'user_gender' field.
     * 性别说明：0-未知，1-男性，2-女性
     * @return The value.
     */
    public Integer getUserGender() {
      return user_gender;
    }

    /**
     * Sets the value of the 'user_gender' field.
     * 性别说明：0-未知，1-男性，2-女性
     * @param value The value of 'user_gender'.
     * @return This builder.
     */
    public Builder setUserGender(int value) {
      validate(fields()[10], value);
      this.user_gender = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
     * Checks whether the 'user_gender' field has been set.
     * 性别说明：0-未知，1-男性，2-女性
     * @return True if the 'user_gender' field has been set, false otherwise.
     */
    public boolean hasUserGender() {
      return fieldSetFlags()[10];
    }


    /**
     * Clears the value of the 'user_gender' field.
     * 性别说明：0-未知，1-男性，2-女性
     * @return This builder.
     */
    public Builder clearUserGender() {
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
     * Gets the value of the 'user_is_new' field.
     * 是否为今日新增用户
     * @return The value.
     */
    public Boolean getUserIsNew() {
      return user_is_new;
    }

    /**
     * Sets the value of the 'user_is_new' field.
     * 是否为今日新增用户
     * @param value The value of 'user_is_new'.
     * @return This builder.
     */
    public Builder setUserIsNew(boolean value) {
      validate(fields()[11], value);
      this.user_is_new = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
     * Checks whether the 'user_is_new' field has been set.
     * 是否为今日新增用户
     * @return True if the 'user_is_new' field has been set, false otherwise.
     */
    public boolean hasUserIsNew() {
      return fieldSetFlags()[11];
    }


    /**
     * Clears the value of the 'user_is_new' field.
     * 是否为今日新增用户
     * @return This builder.
     */
    public Builder clearUserIsNew() {
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
     * Gets the value of the 'user_is_anonymous' field.
     * 是否为匿名用户
     * @return The value.
     */
    public Boolean getUserIsAnonymous() {
      return user_is_anonymous;
    }

    /**
     * Sets the value of the 'user_is_anonymous' field.
     * 是否为匿名用户
     * @param value The value of 'user_is_anonymous'.
     * @return This builder.
     */
    public Builder setUserIsAnonymous(boolean value) {
      validate(fields()[12], value);
      this.user_is_anonymous = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
     * Checks whether the 'user_is_anonymous' field has been set.
     * 是否为匿名用户
     * @return True if the 'user_is_anonymous' field has been set, false otherwise.
     */
    public boolean hasUserIsAnonymous() {
      return fieldSetFlags()[12];
    }


    /**
     * Clears the value of the 'user_is_anonymous' field.
     * 是否为匿名用户
     * @return This builder.
     */
    public Builder clearUserIsAnonymous() {
      fieldSetFlags()[12] = false;
      return this;
    }

    /**
     * Gets the value of the 'user_last_session' field.
     * 最后登录时间
     * @return The value.
     */
    public org.joda.time.DateTime getUserLastSession() {
      return user_last_session;
    }

    /**
     * Sets the value of the 'user_last_session' field.
     * 最后登录时间
     * @param value The value of 'user_last_session'.
     * @return This builder.
     */
    public Builder setUserLastSession(org.joda.time.DateTime value) {
      validate(fields()[13], value);
      this.user_last_session = value;
      fieldSetFlags()[13] = true;
      return this;
    }

    /**
     * Checks whether the 'user_last_session' field has been set.
     * 最后登录时间
     * @return True if the 'user_last_session' field has been set, false otherwise.
     */
    public boolean hasUserLastSession() {
      return fieldSetFlags()[13];
    }


    /**
     * Clears the value of the 'user_last_session' field.
     * 最后登录时间
     * @return This builder.
     */
    public Builder clearUserLastSession() {
      fieldSetFlags()[13] = false;
      return this;
    }

    /**
     * Gets the value of the 'client_id' field.
     * 客户端id
     * @return The value.
     */
    public CharSequence getClientId() {
      return client_id;
    }

    /**
     * Sets the value of the 'client_id' field.
     * 客户端id
     * @param value The value of 'client_id'.
     * @return This builder.
     */
    public Builder setClientId(CharSequence value) {
      validate(fields()[14], value);
      this.client_id = value;
      fieldSetFlags()[14] = true;
      return this;
    }

    /**
     * Checks whether the 'client_id' field has been set.
     * 客户端id
     * @return True if the 'client_id' field has been set, false otherwise.
     */
    public boolean hasClientId() {
      return fieldSetFlags()[14];
    }


    /**
     * Clears the value of the 'client_id' field.
     * 客户端id
     * @return This builder.
     */
    public Builder clearClientId() {
      client_id = null;
      fieldSetFlags()[14] = false;
      return this;
    }

    /**
     * Gets the value of the 'device_id' field.
     * 设备id
     * @return The value.
     */
    public CharSequence getDeviceId() {
      return device_id;
    }

    /**
     * Sets the value of the 'device_id' field.
     * 设备id
     * @param value The value of 'device_id'.
     * @return This builder.
     */
    public Builder setDeviceId(CharSequence value) {
      validate(fields()[15], value);
      this.device_id = value;
      fieldSetFlags()[15] = true;
      return this;
    }

    /**
     * Checks whether the 'device_id' field has been set.
     * 设备id
     * @return True if the 'device_id' field has been set, false otherwise.
     */
    public boolean hasDeviceId() {
      return fieldSetFlags()[15];
    }


    /**
     * Clears the value of the 'device_id' field.
     * 设备id
     * @return This builder.
     */
    public Builder clearDeviceId() {
      device_id = null;
      fieldSetFlags()[15] = false;
      return this;
    }

    /**
     * Gets the value of the 'device_model' field.
     * 设备型号
     * @return The value.
     */
    public CharSequence getDeviceModel() {
      return device_model;
    }

    /**
     * Sets the value of the 'device_model' field.
     * 设备型号
     * @param value The value of 'device_model'.
     * @return This builder.
     */
    public Builder setDeviceModel(CharSequence value) {
      validate(fields()[16], value);
      this.device_model = value;
      fieldSetFlags()[16] = true;
      return this;
    }

    /**
     * Checks whether the 'device_model' field has been set.
     * 设备型号
     * @return True if the 'device_model' field has been set, false otherwise.
     */
    public boolean hasDeviceModel() {
      return fieldSetFlags()[16];
    }


    /**
     * Clears the value of the 'device_model' field.
     * 设备型号
     * @return This builder.
     */
    public Builder clearDeviceModel() {
      device_model = null;
      fieldSetFlags()[16] = false;
      return this;
    }

    /**
     * Gets the value of the 'device_brand' field.
     * 设备品牌
     * @return The value.
     */
    public CharSequence getDeviceBrand() {
      return device_brand;
    }

    /**
     * Sets the value of the 'device_brand' field.
     * 设备品牌
     * @param value The value of 'device_brand'.
     * @return This builder.
     */
    public Builder setDeviceBrand(CharSequence value) {
      validate(fields()[17], value);
      this.device_brand = value;
      fieldSetFlags()[17] = true;
      return this;
    }

    /**
     * Checks whether the 'device_brand' field has been set.
     * 设备品牌
     * @return True if the 'device_brand' field has been set, false otherwise.
     */
    public boolean hasDeviceBrand() {
      return fieldSetFlags()[17];
    }


    /**
     * Clears the value of the 'device_brand' field.
     * 设备品牌
     * @return This builder.
     */
    public Builder clearDeviceBrand() {
      device_brand = null;
      fieldSetFlags()[17] = false;
      return this;
    }

    /**
     * Gets the value of the 'device_family' field.
     * 设备系列：@{device_family}
     * @return The value.
     */
    public CharSequence getDeviceFamily() {
      return device_family;
    }

    /**
     * Sets the value of the 'device_family' field.
     * 设备系列：@{device_family}
     * @param value The value of 'device_family'.
     * @return This builder.
     */
    public Builder setDeviceFamily(CharSequence value) {
      validate(fields()[18], value);
      this.device_family = value;
      fieldSetFlags()[18] = true;
      return this;
    }

    /**
     * Checks whether the 'device_family' field has been set.
     * 设备系列：@{device_family}
     * @return True if the 'device_family' field has been set, false otherwise.
     */
    public boolean hasDeviceFamily() {
      return fieldSetFlags()[18];
    }


    /**
     * Clears the value of the 'device_family' field.
     * 设备系列：@{device_family}
     * @return This builder.
     */
    public Builder clearDeviceFamily() {
      device_family = null;
      fieldSetFlags()[18] = false;
      return this;
    }

    /**
     * Gets the value of the 'device_is_new' field.
     * 是否为今日新增设备
     * @return The value.
     */
    public Boolean getDeviceIsNew() {
      return device_is_new;
    }

    /**
     * Sets the value of the 'device_is_new' field.
     * 是否为今日新增设备
     * @param value The value of 'device_is_new'.
     * @return This builder.
     */
    public Builder setDeviceIsNew(boolean value) {
      validate(fields()[19], value);
      this.device_is_new = value;
      fieldSetFlags()[19] = true;
      return this;
    }

    /**
     * Checks whether the 'device_is_new' field has been set.
     * 是否为今日新增设备
     * @return True if the 'device_is_new' field has been set, false otherwise.
     */
    public boolean hasDeviceIsNew() {
      return fieldSetFlags()[19];
    }


    /**
     * Clears the value of the 'device_is_new' field.
     * 是否为今日新增设备
     * @return This builder.
     */
    public Builder clearDeviceIsNew() {
      fieldSetFlags()[19] = false;
      return this;
    }

    /**
     * Gets the value of the 'device_category' field.
     * 设备分类，区分是否为移动端或者PC设备，可选值：desktop, tablet, mobile
     * @return The value.
     */
    public CharSequence getDeviceCategory() {
      return device_category;
    }

    /**
     * Sets the value of the 'device_category' field.
     * 设备分类，区分是否为移动端或者PC设备，可选值：desktop, tablet, mobile
     * @param value The value of 'device_category'.
     * @return This builder.
     */
    public Builder setDeviceCategory(CharSequence value) {
      validate(fields()[20], value);
      this.device_category = value;
      fieldSetFlags()[20] = true;
      return this;
    }

    /**
     * Checks whether the 'device_category' field has been set.
     * 设备分类，区分是否为移动端或者PC设备，可选值：desktop, tablet, mobile
     * @return True if the 'device_category' field has been set, false otherwise.
     */
    public boolean hasDeviceCategory() {
      return fieldSetFlags()[20];
    }


    /**
     * Clears the value of the 'device_category' field.
     * 设备分类，区分是否为移动端或者PC设备，可选值：desktop, tablet, mobile
     * @return This builder.
     */
    public Builder clearDeviceCategory() {
      device_category = null;
      fieldSetFlags()[20] = false;
      return this;
    }

    /**
     * Gets the value of the 'battery_level' field.
     * 当前电量
     * @return The value.
     */
    public Float getBatteryLevel() {
      return battery_level;
    }

    /**
     * Sets the value of the 'battery_level' field.
     * 当前电量
     * @param value The value of 'battery_level'.
     * @return This builder.
     */
    public Builder setBatteryLevel(float value) {
      validate(fields()[21], value);
      this.battery_level = value;
      fieldSetFlags()[21] = true;
      return this;
    }

    /**
     * Checks whether the 'battery_level' field has been set.
     * 当前电量
     * @return True if the 'battery_level' field has been set, false otherwise.
     */
    public boolean hasBatteryLevel() {
      return fieldSetFlags()[21];
    }


    /**
     * Clears the value of the 'battery_level' field.
     * 当前电量
     * @return This builder.
     */
    public Builder clearBatteryLevel() {
      fieldSetFlags()[21] = false;
      return this;
    }

    /**
     * Gets the value of the 'battery_status' field.
     * 充电状态
     * @return The value.
     */
    public CharSequence getBatteryStatus() {
      return battery_status;
    }

    /**
     * Sets the value of the 'battery_status' field.
     * 充电状态
     * @param value The value of 'battery_status'.
     * @return This builder.
     */
    public Builder setBatteryStatus(CharSequence value) {
      validate(fields()[22], value);
      this.battery_status = value;
      fieldSetFlags()[22] = true;
      return this;
    }

    /**
     * Checks whether the 'battery_status' field has been set.
     * 充电状态
     * @return True if the 'battery_status' field has been set, false otherwise.
     */
    public boolean hasBatteryStatus() {
      return fieldSetFlags()[22];
    }


    /**
     * Clears the value of the 'battery_status' field.
     * 充电状态
     * @return This builder.
     */
    public Builder clearBatteryStatus() {
      battery_status = null;
      fieldSetFlags()[22] = false;
      return this;
    }

    /**
     * Gets the value of the 'browser_family' field.
     * 浏览器系列：@{ua_family}
     * @return The value.
     */
    public CharSequence getBrowserFamily() {
      return browser_family;
    }

    /**
     * Sets the value of the 'browser_family' field.
     * 浏览器系列：@{ua_family}
     * @param value The value of 'browser_family'.
     * @return This builder.
     */
    public Builder setBrowserFamily(CharSequence value) {
      validate(fields()[23], value);
      this.browser_family = value;
      fieldSetFlags()[23] = true;
      return this;
    }

    /**
     * Checks whether the 'browser_family' field has been set.
     * 浏览器系列：@{ua_family}
     * @return True if the 'browser_family' field has been set, false otherwise.
     */
    public boolean hasBrowserFamily() {
      return fieldSetFlags()[23];
    }


    /**
     * Clears the value of the 'browser_family' field.
     * 浏览器系列：@{ua_family}
     * @return This builder.
     */
    public Builder clearBrowserFamily() {
      browser_family = null;
      fieldSetFlags()[23] = false;
      return this;
    }

    /**
     * Gets the value of the 'browser_major' field.
     * 主版本
     * @return The value.
     */
    public Integer getBrowserMajor() {
      return browser_major;
    }

    /**
     * Sets the value of the 'browser_major' field.
     * 主版本
     * @param value The value of 'browser_major'.
     * @return This builder.
     */
    public Builder setBrowserMajor(int value) {
      validate(fields()[24], value);
      this.browser_major = value;
      fieldSetFlags()[24] = true;
      return this;
    }

    /**
     * Checks whether the 'browser_major' field has been set.
     * 主版本
     * @return True if the 'browser_major' field has been set, false otherwise.
     */
    public boolean hasBrowserMajor() {
      return fieldSetFlags()[24];
    }


    /**
     * Clears the value of the 'browser_major' field.
     * 主版本
     * @return This builder.
     */
    public Builder clearBrowserMajor() {
      fieldSetFlags()[24] = false;
      return this;
    }

    /**
     * Gets the value of the 'browser_minor' field.
     * 次要版本
     * @return The value.
     */
    public Integer getBrowserMinor() {
      return browser_minor;
    }

    /**
     * Sets the value of the 'browser_minor' field.
     * 次要版本
     * @param value The value of 'browser_minor'.
     * @return This builder.
     */
    public Builder setBrowserMinor(int value) {
      validate(fields()[25], value);
      this.browser_minor = value;
      fieldSetFlags()[25] = true;
      return this;
    }

    /**
     * Checks whether the 'browser_minor' field has been set.
     * 次要版本
     * @return True if the 'browser_minor' field has been set, false otherwise.
     */
    public boolean hasBrowserMinor() {
      return fieldSetFlags()[25];
    }


    /**
     * Clears the value of the 'browser_minor' field.
     * 次要版本
     * @return This builder.
     */
    public Builder clearBrowserMinor() {
      fieldSetFlags()[25] = false;
      return this;
    }

    /**
     * Gets the value of the 'browser_patch' field.
     * 补丁版本
     * @return The value.
     */
    public Integer getBrowserPatch() {
      return browser_patch;
    }

    /**
     * Sets the value of the 'browser_patch' field.
     * 补丁版本
     * @param value The value of 'browser_patch'.
     * @return This builder.
     */
    public Builder setBrowserPatch(int value) {
      validate(fields()[26], value);
      this.browser_patch = value;
      fieldSetFlags()[26] = true;
      return this;
    }

    /**
     * Checks whether the 'browser_patch' field has been set.
     * 补丁版本
     * @return True if the 'browser_patch' field has been set, false otherwise.
     */
    public boolean hasBrowserPatch() {
      return fieldSetFlags()[26];
    }


    /**
     * Clears the value of the 'browser_patch' field.
     * 补丁版本
     * @return This builder.
     */
    public Builder clearBrowserPatch() {
      fieldSetFlags()[26] = false;
      return this;
    }

    /**
     * Gets the value of the 'browser_version' field.
     * 浏览器版本：@{ua_major}.@{ua_minor}.@{ua_patch}
     * @return The value.
     */
    public CharSequence getBrowserVersion() {
      return browser_version;
    }

    /**
     * Sets the value of the 'browser_version' field.
     * 浏览器版本：@{ua_major}.@{ua_minor}.@{ua_patch}
     * @param value The value of 'browser_version'.
     * @return This builder.
     */
    public Builder setBrowserVersion(CharSequence value) {
      validate(fields()[27], value);
      this.browser_version = value;
      fieldSetFlags()[27] = true;
      return this;
    }

    /**
     * Checks whether the 'browser_version' field has been set.
     * 浏览器版本：@{ua_major}.@{ua_minor}.@{ua_patch}
     * @return True if the 'browser_version' field has been set, false otherwise.
     */
    public boolean hasBrowserVersion() {
      return fieldSetFlags()[27];
    }


    /**
     * Clears the value of the 'browser_version' field.
     * 浏览器版本：@{ua_major}.@{ua_minor}.@{ua_patch}
     * @return This builder.
     */
    public Builder clearBrowserVersion() {
      browser_version = null;
      fieldSetFlags()[27] = false;
      return this;
    }

    /**
     * Gets the value of the 'browser_user_agent' field.
     * 浏览器User—Agent
     * @return The value.
     */
    public CharSequence getBrowserUserAgent() {
      return browser_user_agent;
    }

    /**
     * Sets the value of the 'browser_user_agent' field.
     * 浏览器User—Agent
     * @param value The value of 'browser_user_agent'.
     * @return This builder.
     */
    public Builder setBrowserUserAgent(CharSequence value) {
      validate(fields()[28], value);
      this.browser_user_agent = value;
      fieldSetFlags()[28] = true;
      return this;
    }

    /**
     * Checks whether the 'browser_user_agent' field has been set.
     * 浏览器User—Agent
     * @return True if the 'browser_user_agent' field has been set, false otherwise.
     */
    public boolean hasBrowserUserAgent() {
      return fieldSetFlags()[28];
    }


    /**
     * Clears the value of the 'browser_user_agent' field.
     * 浏览器User—Agent
     * @return This builder.
     */
    public Builder clearBrowserUserAgent() {
      browser_user_agent = null;
      fieldSetFlags()[28] = false;
      return this;
    }

    /**
     * Gets the value of the 'os_family' field.
     * 操作系统名称:@{os_family}, Windows, Linux, Macintosh, IOP, Android
     * @return The value.
     */
    public CharSequence getOsFamily() {
      return os_family;
    }

    /**
     * Sets the value of the 'os_family' field.
     * 操作系统名称:@{os_family}, Windows, Linux, Macintosh, IOP, Android
     * @param value The value of 'os_family'.
     * @return This builder.
     */
    public Builder setOsFamily(CharSequence value) {
      validate(fields()[29], value);
      this.os_family = value;
      fieldSetFlags()[29] = true;
      return this;
    }

    /**
     * Checks whether the 'os_family' field has been set.
     * 操作系统名称:@{os_family}, Windows, Linux, Macintosh, IOP, Android
     * @return True if the 'os_family' field has been set, false otherwise.
     */
    public boolean hasOsFamily() {
      return fieldSetFlags()[29];
    }


    /**
     * Clears the value of the 'os_family' field.
     * 操作系统名称:@{os_family}, Windows, Linux, Macintosh, IOP, Android
     * @return This builder.
     */
    public Builder clearOsFamily() {
      os_family = null;
      fieldSetFlags()[29] = false;
      return this;
    }

    /**
     * Gets the value of the 'os_major' field.
     * 主版本
     * @return The value.
     */
    public Integer getOsMajor() {
      return os_major;
    }

    /**
     * Sets the value of the 'os_major' field.
     * 主版本
     * @param value The value of 'os_major'.
     * @return This builder.
     */
    public Builder setOsMajor(int value) {
      validate(fields()[30], value);
      this.os_major = value;
      fieldSetFlags()[30] = true;
      return this;
    }

    /**
     * Checks whether the 'os_major' field has been set.
     * 主版本
     * @return True if the 'os_major' field has been set, false otherwise.
     */
    public boolean hasOsMajor() {
      return fieldSetFlags()[30];
    }


    /**
     * Clears the value of the 'os_major' field.
     * 主版本
     * @return This builder.
     */
    public Builder clearOsMajor() {
      fieldSetFlags()[30] = false;
      return this;
    }

    /**
     * Gets the value of the 'os_minor' field.
     * 次要版本
     * @return The value.
     */
    public Integer getOsMinor() {
      return os_minor;
    }

    /**
     * Sets the value of the 'os_minor' field.
     * 次要版本
     * @param value The value of 'os_minor'.
     * @return This builder.
     */
    public Builder setOsMinor(int value) {
      validate(fields()[31], value);
      this.os_minor = value;
      fieldSetFlags()[31] = true;
      return this;
    }

    /**
     * Checks whether the 'os_minor' field has been set.
     * 次要版本
     * @return True if the 'os_minor' field has been set, false otherwise.
     */
    public boolean hasOsMinor() {
      return fieldSetFlags()[31];
    }


    /**
     * Clears the value of the 'os_minor' field.
     * 次要版本
     * @return This builder.
     */
    public Builder clearOsMinor() {
      fieldSetFlags()[31] = false;
      return this;
    }

    /**
     * Gets the value of the 'os_patch' field.
     * 补丁版本
     * @return The value.
     */
    public Integer getOsPatch() {
      return os_patch;
    }

    /**
     * Sets the value of the 'os_patch' field.
     * 补丁版本
     * @param value The value of 'os_patch'.
     * @return This builder.
     */
    public Builder setOsPatch(int value) {
      validate(fields()[32], value);
      this.os_patch = value;
      fieldSetFlags()[32] = true;
      return this;
    }

    /**
     * Checks whether the 'os_patch' field has been set.
     * 补丁版本
     * @return True if the 'os_patch' field has been set, false otherwise.
     */
    public boolean hasOsPatch() {
      return fieldSetFlags()[32];
    }


    /**
     * Clears the value of the 'os_patch' field.
     * 补丁版本
     * @return This builder.
     */
    public Builder clearOsPatch() {
      fieldSetFlags()[32] = false;
      return this;
    }

    /**
     * Gets the value of the 'os_version' field.
     * 操作系统版本:@{os_major}.@{os_minor}.@{os_patch}
     * @return The value.
     */
    public CharSequence getOsVersion() {
      return os_version;
    }

    /**
     * Sets the value of the 'os_version' field.
     * 操作系统版本:@{os_major}.@{os_minor}.@{os_patch}
     * @param value The value of 'os_version'.
     * @return This builder.
     */
    public Builder setOsVersion(CharSequence value) {
      validate(fields()[33], value);
      this.os_version = value;
      fieldSetFlags()[33] = true;
      return this;
    }

    /**
     * Checks whether the 'os_version' field has been set.
     * 操作系统版本:@{os_major}.@{os_minor}.@{os_patch}
     * @return True if the 'os_version' field has been set, false otherwise.
     */
    public boolean hasOsVersion() {
      return fieldSetFlags()[33];
    }


    /**
     * Clears the value of the 'os_version' field.
     * 操作系统版本:@{os_major}.@{os_minor}.@{os_patch}
     * @return This builder.
     */
    public Builder clearOsVersion() {
      os_version = null;
      fieldSetFlags()[33] = false;
      return this;
    }

    /**
     * Gets the value of the 'network_operator' field.
     * 网络运营商：cmcc，联通
     * @return The value.
     */
    public CharSequence getNetworkOperator() {
      return network_operator;
    }

    /**
     * Sets the value of the 'network_operator' field.
     * 网络运营商：cmcc，联通
     * @param value The value of 'network_operator'.
     * @return This builder.
     */
    public Builder setNetworkOperator(CharSequence value) {
      validate(fields()[34], value);
      this.network_operator = value;
      fieldSetFlags()[34] = true;
      return this;
    }

    /**
     * Checks whether the 'network_operator' field has been set.
     * 网络运营商：cmcc，联通
     * @return True if the 'network_operator' field has been set, false otherwise.
     */
    public boolean hasNetworkOperator() {
      return fieldSetFlags()[34];
    }


    /**
     * Clears the value of the 'network_operator' field.
     * 网络运营商：cmcc，联通
     * @return This builder.
     */
    public Builder clearNetworkOperator() {
      network_operator = null;
      fieldSetFlags()[34] = false;
      return this;
    }

    /**
     * Gets the value of the 'network_mode' field.
     * 联网方式:WiFi、3G、4G
     * @return The value.
     */
    public CharSequence getNetworkMode() {
      return network_mode;
    }

    /**
     * Sets the value of the 'network_mode' field.
     * 联网方式:WiFi、3G、4G
     * @param value The value of 'network_mode'.
     * @return This builder.
     */
    public Builder setNetworkMode(CharSequence value) {
      validate(fields()[35], value);
      this.network_mode = value;
      fieldSetFlags()[35] = true;
      return this;
    }

    /**
     * Checks whether the 'network_mode' field has been set.
     * 联网方式:WiFi、3G、4G
     * @return True if the 'network_mode' field has been set, false otherwise.
     */
    public boolean hasNetworkMode() {
      return fieldSetFlags()[35];
    }


    /**
     * Clears the value of the 'network_mode' field.
     * 联网方式:WiFi、3G、4G
     * @return This builder.
     */
    public Builder clearNetworkMode() {
      network_mode = null;
      fieldSetFlags()[35] = false;
      return this;
    }

    /**
     * Gets the value of the 'network_country' field.
     * 国家
     * @return The value.
     */
    public CharSequence getNetworkCountry() {
      return network_country;
    }

    /**
     * Sets the value of the 'network_country' field.
     * 国家
     * @param value The value of 'network_country'.
     * @return This builder.
     */
    public Builder setNetworkCountry(CharSequence value) {
      validate(fields()[36], value);
      this.network_country = value;
      fieldSetFlags()[36] = true;
      return this;
    }

    /**
     * Checks whether the 'network_country' field has been set.
     * 国家
     * @return True if the 'network_country' field has been set, false otherwise.
     */
    public boolean hasNetworkCountry() {
      return fieldSetFlags()[36];
    }


    /**
     * Clears the value of the 'network_country' field.
     * 国家
     * @return This builder.
     */
    public Builder clearNetworkCountry() {
      network_country = null;
      fieldSetFlags()[36] = false;
      return this;
    }

    /**
     * Gets the value of the 'network_region' field.
     * 省份
     * @return The value.
     */
    public CharSequence getNetworkRegion() {
      return network_region;
    }

    /**
     * Sets the value of the 'network_region' field.
     * 省份
     * @param value The value of 'network_region'.
     * @return This builder.
     */
    public Builder setNetworkRegion(CharSequence value) {
      validate(fields()[37], value);
      this.network_region = value;
      fieldSetFlags()[37] = true;
      return this;
    }

    /**
     * Checks whether the 'network_region' field has been set.
     * 省份
     * @return True if the 'network_region' field has been set, false otherwise.
     */
    public boolean hasNetworkRegion() {
      return fieldSetFlags()[37];
    }


    /**
     * Clears the value of the 'network_region' field.
     * 省份
     * @return This builder.
     */
    public Builder clearNetworkRegion() {
      network_region = null;
      fieldSetFlags()[37] = false;
      return this;
    }

    /**
     * Gets the value of the 'network_city' field.
     * 城市
     * @return The value.
     */
    public CharSequence getNetworkCity() {
      return network_city;
    }

    /**
     * Sets the value of the 'network_city' field.
     * 城市
     * @param value The value of 'network_city'.
     * @return This builder.
     */
    public Builder setNetworkCity(CharSequence value) {
      validate(fields()[38], value);
      this.network_city = value;
      fieldSetFlags()[38] = true;
      return this;
    }

    /**
     * Checks whether the 'network_city' field has been set.
     * 城市
     * @return True if the 'network_city' field has been set, false otherwise.
     */
    public boolean hasNetworkCity() {
      return fieldSetFlags()[38];
    }


    /**
     * Clears the value of the 'network_city' field.
     * 城市
     * @return This builder.
     */
    public Builder clearNetworkCity() {
      network_city = null;
      fieldSetFlags()[38] = false;
      return this;
    }

    /**
     * Gets the value of the 'network_ip' field.
     * ip
     * @return The value.
     */
    public CharSequence getNetworkIp() {
      return network_ip;
    }

    /**
     * Sets the value of the 'network_ip' field.
     * ip
     * @param value The value of 'network_ip'.
     * @return This builder.
     */
    public Builder setNetworkIp(CharSequence value) {
      validate(fields()[39], value);
      this.network_ip = value;
      fieldSetFlags()[39] = true;
      return this;
    }

    /**
     * Checks whether the 'network_ip' field has been set.
     * ip
     * @return True if the 'network_ip' field has been set, false otherwise.
     */
    public boolean hasNetworkIp() {
      return fieldSetFlags()[39];
    }


    /**
     * Clears the value of the 'network_ip' field.
     * ip
     * @return This builder.
     */
    public Builder clearNetworkIp() {
      network_ip = null;
      fieldSetFlags()[39] = false;
      return this;
    }

    /**
     * Gets the value of the 'network_time_zone' field.
     * 时区
     * @return The value.
     */
    public CharSequence getNetworkTimeZone() {
      return network_time_zone;
    }

    /**
     * Sets the value of the 'network_time_zone' field.
     * 时区
     * @param value The value of 'network_time_zone'.
     * @return This builder.
     */
    public Builder setNetworkTimeZone(CharSequence value) {
      validate(fields()[40], value);
      this.network_time_zone = value;
      fieldSetFlags()[40] = true;
      return this;
    }

    /**
     * Checks whether the 'network_time_zone' field has been set.
     * 时区
     * @return True if the 'network_time_zone' field has been set, false otherwise.
     */
    public boolean hasNetworkTimeZone() {
      return fieldSetFlags()[40];
    }


    /**
     * Clears the value of the 'network_time_zone' field.
     * 时区
     * @return This builder.
     */
    public Builder clearNetworkTimeZone() {
      network_time_zone = null;
      fieldSetFlags()[40] = false;
      return this;
    }

    /**
     * Gets the value of the 'network_longitude' field.
     * 经度
     * @return The value.
     */
    public Double getNetworkLongitude() {
      return network_longitude;
    }

    /**
     * Sets the value of the 'network_longitude' field.
     * 经度
     * @param value The value of 'network_longitude'.
     * @return This builder.
     */
    public Builder setNetworkLongitude(double value) {
      validate(fields()[41], value);
      this.network_longitude = value;
      fieldSetFlags()[41] = true;
      return this;
    }

    /**
     * Checks whether the 'network_longitude' field has been set.
     * 经度
     * @return True if the 'network_longitude' field has been set, false otherwise.
     */
    public boolean hasNetworkLongitude() {
      return fieldSetFlags()[41];
    }


    /**
     * Clears the value of the 'network_longitude' field.
     * 经度
     * @return This builder.
     */
    public Builder clearNetworkLongitude() {
      fieldSetFlags()[41] = false;
      return this;
    }

    /**
     * Gets the value of the 'network_latitude' field.
     * 纬度
     * @return The value.
     */
    public Double getNetworkLatitude() {
      return network_latitude;
    }

    /**
     * Sets the value of the 'network_latitude' field.
     * 纬度
     * @param value The value of 'network_latitude'.
     * @return This builder.
     */
    public Builder setNetworkLatitude(double value) {
      validate(fields()[42], value);
      this.network_latitude = value;
      fieldSetFlags()[42] = true;
      return this;
    }

    /**
     * Checks whether the 'network_latitude' field has been set.
     * 纬度
     * @return True if the 'network_latitude' field has been set, false otherwise.
     */
    public boolean hasNetworkLatitude() {
      return fieldSetFlags()[42];
    }


    /**
     * Clears the value of the 'network_latitude' field.
     * 纬度
     * @return This builder.
     */
    public Builder clearNetworkLatitude() {
      fieldSetFlags()[42] = false;
      return this;
    }

    /**
     * Gets the value of the 'app_id' field.
     * 应用id
     * @return The value.
     */
    public CharSequence getAppId() {
      return app_id;
    }

    /**
     * Sets the value of the 'app_id' field.
     * 应用id
     * @param value The value of 'app_id'.
     * @return This builder.
     */
    public Builder setAppId(CharSequence value) {
      validate(fields()[43], value);
      this.app_id = value;
      fieldSetFlags()[43] = true;
      return this;
    }

    /**
     * Checks whether the 'app_id' field has been set.
     * 应用id
     * @return True if the 'app_id' field has been set, false otherwise.
     */
    public boolean hasAppId() {
      return fieldSetFlags()[43];
    }


    /**
     * Clears the value of the 'app_id' field.
     * 应用id
     * @return This builder.
     */
    public Builder clearAppId() {
      app_id = null;
      fieldSetFlags()[43] = false;
      return this;
    }

    /**
     * Gets the value of the 'app_name' field.
     * 应用名称
     * @return The value.
     */
    public CharSequence getAppName() {
      return app_name;
    }

    /**
     * Sets the value of the 'app_name' field.
     * 应用名称
     * @param value The value of 'app_name'.
     * @return This builder.
     */
    public Builder setAppName(CharSequence value) {
      validate(fields()[44], value);
      this.app_name = value;
      fieldSetFlags()[44] = true;
      return this;
    }

    /**
     * Checks whether the 'app_name' field has been set.
     * 应用名称
     * @return True if the 'app_name' field has been set, false otherwise.
     */
    public boolean hasAppName() {
      return fieldSetFlags()[44];
    }


    /**
     * Clears the value of the 'app_name' field.
     * 应用名称
     * @return This builder.
     */
    public Builder clearAppName() {
      app_name = null;
      fieldSetFlags()[44] = false;
      return this;
    }

    /**
     * Gets the value of the 'app_major' field.
     * 主版本
     * @return The value.
     */
    public Integer getAppMajor() {
      return app_major;
    }

    /**
     * Sets the value of the 'app_major' field.
     * 主版本
     * @param value The value of 'app_major'.
     * @return This builder.
     */
    public Builder setAppMajor(int value) {
      validate(fields()[45], value);
      this.app_major = value;
      fieldSetFlags()[45] = true;
      return this;
    }

    /**
     * Checks whether the 'app_major' field has been set.
     * 主版本
     * @return True if the 'app_major' field has been set, false otherwise.
     */
    public boolean hasAppMajor() {
      return fieldSetFlags()[45];
    }


    /**
     * Clears the value of the 'app_major' field.
     * 主版本
     * @return This builder.
     */
    public Builder clearAppMajor() {
      fieldSetFlags()[45] = false;
      return this;
    }

    /**
     * Gets the value of the 'app_minor' field.
     * 次要版本
     * @return The value.
     */
    public Integer getAppMinor() {
      return app_minor;
    }

    /**
     * Sets the value of the 'app_minor' field.
     * 次要版本
     * @param value The value of 'app_minor'.
     * @return This builder.
     */
    public Builder setAppMinor(int value) {
      validate(fields()[46], value);
      this.app_minor = value;
      fieldSetFlags()[46] = true;
      return this;
    }

    /**
     * Checks whether the 'app_minor' field has been set.
     * 次要版本
     * @return True if the 'app_minor' field has been set, false otherwise.
     */
    public boolean hasAppMinor() {
      return fieldSetFlags()[46];
    }


    /**
     * Clears the value of the 'app_minor' field.
     * 次要版本
     * @return This builder.
     */
    public Builder clearAppMinor() {
      fieldSetFlags()[46] = false;
      return this;
    }

    /**
     * Gets the value of the 'app_patch' field.
     * 补丁版本
     * @return The value.
     */
    public Integer getAppPatch() {
      return app_patch;
    }

    /**
     * Sets the value of the 'app_patch' field.
     * 补丁版本
     * @param value The value of 'app_patch'.
     * @return This builder.
     */
    public Builder setAppPatch(int value) {
      validate(fields()[47], value);
      this.app_patch = value;
      fieldSetFlags()[47] = true;
      return this;
    }

    /**
     * Checks whether the 'app_patch' field has been set.
     * 补丁版本
     * @return True if the 'app_patch' field has been set, false otherwise.
     */
    public boolean hasAppPatch() {
      return fieldSetFlags()[47];
    }


    /**
     * Clears the value of the 'app_patch' field.
     * 补丁版本
     * @return This builder.
     */
    public Builder clearAppPatch() {
      fieldSetFlags()[47] = false;
      return this;
    }

    /**
     * Gets the value of the 'app_version' field.
     * 应用版本
     * @return The value.
     */
    public CharSequence getAppVersion() {
      return app_version;
    }

    /**
     * Sets the value of the 'app_version' field.
     * 应用版本
     * @param value The value of 'app_version'.
     * @return This builder.
     */
    public Builder setAppVersion(CharSequence value) {
      validate(fields()[48], value);
      this.app_version = value;
      fieldSetFlags()[48] = true;
      return this;
    }

    /**
     * Checks whether the 'app_version' field has been set.
     * 应用版本
     * @return True if the 'app_version' field has been set, false otherwise.
     */
    public boolean hasAppVersion() {
      return fieldSetFlags()[48];
    }


    /**
     * Clears the value of the 'app_version' field.
     * 应用版本
     * @return This builder.
     */
    public Builder clearAppVersion() {
      app_version = null;
      fieldSetFlags()[48] = false;
      return this;
    }

    /**
     * Gets the value of the 'app_installer_id' field.
     * 应用安装渠道id
     * @return The value.
     */
    public CharSequence getAppInstallerId() {
      return app_installer_id;
    }

    /**
     * Sets the value of the 'app_installer_id' field.
     * 应用安装渠道id
     * @param value The value of 'app_installer_id'.
     * @return This builder.
     */
    public Builder setAppInstallerId(CharSequence value) {
      validate(fields()[49], value);
      this.app_installer_id = value;
      fieldSetFlags()[49] = true;
      return this;
    }

    /**
     * Checks whether the 'app_installer_id' field has been set.
     * 应用安装渠道id
     * @return True if the 'app_installer_id' field has been set, false otherwise.
     */
    public boolean hasAppInstallerId() {
      return fieldSetFlags()[49];
    }


    /**
     * Clears the value of the 'app_installer_id' field.
     * 应用安装渠道id
     * @return This builder.
     */
    public Builder clearAppInstallerId() {
      app_installer_id = null;
      fieldSetFlags()[49] = false;
      return this;
    }

    /**
     * Gets the value of the 'logger_level' field.
     * 日志级别
     * @return The value.
     */
    public CharSequence getLoggerLevel() {
      return logger_level;
    }

    /**
     * Sets the value of the 'logger_level' field.
     * 日志级别
     * @param value The value of 'logger_level'.
     * @return This builder.
     */
    public Builder setLoggerLevel(CharSequence value) {
      validate(fields()[50], value);
      this.logger_level = value;
      fieldSetFlags()[50] = true;
      return this;
    }

    /**
     * Checks whether the 'logger_level' field has been set.
     * 日志级别
     * @return True if the 'logger_level' field has been set, false otherwise.
     */
    public boolean hasLoggerLevel() {
      return fieldSetFlags()[50];
    }


    /**
     * Clears the value of the 'logger_level' field.
     * 日志级别
     * @return This builder.
     */
    public Builder clearLoggerLevel() {
      logger_level = null;
      fieldSetFlags()[50] = false;
      return this;
    }

    /**
     * Gets the value of the 'ex_id' field.
     * 异常id
     * @return The value.
     */
    public CharSequence getExId() {
      return ex_id;
    }

    /**
     * Sets the value of the 'ex_id' field.
     * 异常id
     * @param value The value of 'ex_id'.
     * @return This builder.
     */
    public Builder setExId(CharSequence value) {
      validate(fields()[51], value);
      this.ex_id = value;
      fieldSetFlags()[51] = true;
      return this;
    }

    /**
     * Checks whether the 'ex_id' field has been set.
     * 异常id
     * @return True if the 'ex_id' field has been set, false otherwise.
     */
    public boolean hasExId() {
      return fieldSetFlags()[51];
    }


    /**
     * Clears the value of the 'ex_id' field.
     * 异常id
     * @return This builder.
     */
    public Builder clearExId() {
      ex_id = null;
      fieldSetFlags()[51] = false;
      return this;
    }

    /**
     * Gets the value of the 'ex_name' field.
     * 异常名称
     * @return The value.
     */
    public CharSequence getExName() {
      return ex_name;
    }

    /**
     * Sets the value of the 'ex_name' field.
     * 异常名称
     * @param value The value of 'ex_name'.
     * @return This builder.
     */
    public Builder setExName(CharSequence value) {
      validate(fields()[52], value);
      this.ex_name = value;
      fieldSetFlags()[52] = true;
      return this;
    }

    /**
     * Checks whether the 'ex_name' field has been set.
     * 异常名称
     * @return True if the 'ex_name' field has been set, false otherwise.
     */
    public boolean hasExName() {
      return fieldSetFlags()[52];
    }


    /**
     * Clears the value of the 'ex_name' field.
     * 异常名称
     * @return This builder.
     */
    public Builder clearExName() {
      ex_name = null;
      fieldSetFlags()[52] = false;
      return this;
    }

    /**
     * Gets the value of the 'ex_message' field.
     * 异常信息
     * @return The value.
     */
    public CharSequence getExMessage() {
      return ex_message;
    }

    /**
     * Sets the value of the 'ex_message' field.
     * 异常信息
     * @param value The value of 'ex_message'.
     * @return This builder.
     */
    public Builder setExMessage(CharSequence value) {
      validate(fields()[53], value);
      this.ex_message = value;
      fieldSetFlags()[53] = true;
      return this;
    }

    /**
     * Checks whether the 'ex_message' field has been set.
     * 异常信息
     * @return True if the 'ex_message' field has been set, false otherwise.
     */
    public boolean hasExMessage() {
      return fieldSetFlags()[53];
    }


    /**
     * Clears the value of the 'ex_message' field.
     * 异常信息
     * @return This builder.
     */
    public Builder clearExMessage() {
      ex_message = null;
      fieldSetFlags()[53] = false;
      return this;
    }

    /**
     * Gets the value of the 'ex_stacktrace' field.
     * 异常堆栈
     * @return The value.
     */
    public CharSequence getExStacktrace() {
      return ex_stacktrace;
    }

    /**
     * Sets the value of the 'ex_stacktrace' field.
     * 异常堆栈
     * @param value The value of 'ex_stacktrace'.
     * @return This builder.
     */
    public Builder setExStacktrace(CharSequence value) {
      validate(fields()[54], value);
      this.ex_stacktrace = value;
      fieldSetFlags()[54] = true;
      return this;
    }

    /**
     * Checks whether the 'ex_stacktrace' field has been set.
     * 异常堆栈
     * @return True if the 'ex_stacktrace' field has been set, false otherwise.
     */
    public boolean hasExStacktrace() {
      return fieldSetFlags()[54];
    }


    /**
     * Clears the value of the 'ex_stacktrace' field.
     * 异常堆栈
     * @return This builder.
     */
    public Builder clearExStacktrace() {
      ex_stacktrace = null;
      fieldSetFlags()[54] = false;
      return this;
    }

    /**
     * Gets the value of the 'ex_is_fatal' field.
     * 是否为严重异常
     * @return The value.
     */
    public Boolean getExIsFatal() {
      return ex_is_fatal;
    }

    /**
     * Sets the value of the 'ex_is_fatal' field.
     * 是否为严重异常
     * @param value The value of 'ex_is_fatal'.
     * @return This builder.
     */
    public Builder setExIsFatal(boolean value) {
      validate(fields()[55], value);
      this.ex_is_fatal = value;
      fieldSetFlags()[55] = true;
      return this;
    }

    /**
     * Checks whether the 'ex_is_fatal' field has been set.
     * 是否为严重异常
     * @return True if the 'ex_is_fatal' field has been set, false otherwise.
     */
    public boolean hasExIsFatal() {
      return fieldSetFlags()[55];
    }


    /**
     * Clears the value of the 'ex_is_fatal' field.
     * 是否为严重异常
     * @return This builder.
     */
    public Builder clearExIsFatal() {
      fieldSetFlags()[55] = false;
      return this;
    }

    /**
     * Gets the value of the 'time_date_month' field.
     * yyyy-MM-01，只记录每月第一天
     * @return The value.
     */
    public org.joda.time.LocalDate getTimeDateMonth() {
      return time_date_month;
    }

    /**
     * Sets the value of the 'time_date_month' field.
     * yyyy-MM-01，只记录每月第一天
     * @param value The value of 'time_date_month'.
     * @return This builder.
     */
    public Builder setTimeDateMonth(org.joda.time.LocalDate value) {
      validate(fields()[56], value);
      this.time_date_month = value;
      fieldSetFlags()[56] = true;
      return this;
    }

    /**
     * Checks whether the 'time_date_month' field has been set.
     * yyyy-MM-01，只记录每月第一天
     * @return True if the 'time_date_month' field has been set, false otherwise.
     */
    public boolean hasTimeDateMonth() {
      return fieldSetFlags()[56];
    }


    /**
     * Clears the value of the 'time_date_month' field.
     * yyyy-MM-01，只记录每月第一天
     * @return This builder.
     */
    public Builder clearTimeDateMonth() {
      fieldSetFlags()[56] = false;
      return this;
    }

    /**
     * Gets the value of the 'time_date_week' field.
     * yyyy-MM-WW，当前月第几周
     * @return The value.
     */
    public org.joda.time.LocalDate getTimeDateWeek() {
      return time_date_week;
    }

    /**
     * Sets the value of the 'time_date_week' field.
     * yyyy-MM-WW，当前月第几周
     * @param value The value of 'time_date_week'.
     * @return This builder.
     */
    public Builder setTimeDateWeek(org.joda.time.LocalDate value) {
      validate(fields()[57], value);
      this.time_date_week = value;
      fieldSetFlags()[57] = true;
      return this;
    }

    /**
     * Checks whether the 'time_date_week' field has been set.
     * yyyy-MM-WW，当前月第几周
     * @return True if the 'time_date_week' field has been set, false otherwise.
     */
    public boolean hasTimeDateWeek() {
      return fieldSetFlags()[57];
    }


    /**
     * Clears the value of the 'time_date_week' field.
     * yyyy-MM-WW，当前月第几周
     * @return This builder.
     */
    public Builder clearTimeDateWeek() {
      fieldSetFlags()[57] = false;
      return this;
    }

    /**
     * Gets the value of the 'time_date_hour' field.
     * yyyy-MM-dd'T'HH:00:00
     * @return The value.
     */
    public org.joda.time.DateTime getTimeDateHour() {
      return time_date_hour;
    }

    /**
     * Sets the value of the 'time_date_hour' field.
     * yyyy-MM-dd'T'HH:00:00
     * @param value The value of 'time_date_hour'.
     * @return This builder.
     */
    public Builder setTimeDateHour(org.joda.time.DateTime value) {
      validate(fields()[58], value);
      this.time_date_hour = value;
      fieldSetFlags()[58] = true;
      return this;
    }

    /**
     * Checks whether the 'time_date_hour' field has been set.
     * yyyy-MM-dd'T'HH:00:00
     * @return True if the 'time_date_hour' field has been set, false otherwise.
     */
    public boolean hasTimeDateHour() {
      return fieldSetFlags()[58];
    }


    /**
     * Clears the value of the 'time_date_hour' field.
     * yyyy-MM-dd'T'HH:00:00
     * @return This builder.
     */
    public Builder clearTimeDateHour() {
      fieldSetFlags()[58] = false;
      return this;
    }

    /**
     * Gets the value of the 'time_date_hour_minute' field.
     * yyyy-MM-dd'T'HH:mm:00
     * @return The value.
     */
    public org.joda.time.DateTime getTimeDateHourMinute() {
      return time_date_hour_minute;
    }

    /**
     * Sets the value of the 'time_date_hour_minute' field.
     * yyyy-MM-dd'T'HH:mm:00
     * @param value The value of 'time_date_hour_minute'.
     * @return This builder.
     */
    public Builder setTimeDateHourMinute(org.joda.time.DateTime value) {
      validate(fields()[59], value);
      this.time_date_hour_minute = value;
      fieldSetFlags()[59] = true;
      return this;
    }

    /**
     * Checks whether the 'time_date_hour_minute' field has been set.
     * yyyy-MM-dd'T'HH:mm:00
     * @return True if the 'time_date_hour_minute' field has been set, false otherwise.
     */
    public boolean hasTimeDateHourMinute() {
      return fieldSetFlags()[59];
    }


    /**
     * Clears the value of the 'time_date_hour_minute' field.
     * yyyy-MM-dd'T'HH:mm:00
     * @return This builder.
     */
    public Builder clearTimeDateHourMinute() {
      fieldSetFlags()[59] = false;
      return this;
    }

    /**
     * Gets the value of the 'time_datetime' field.
     * yyyy-MM-dd'T'HH:mm:ss
     * @return The value.
     */
    public org.joda.time.DateTime getTimeDatetime() {
      return time_datetime;
    }

    /**
     * Sets the value of the 'time_datetime' field.
     * yyyy-MM-dd'T'HH:mm:ss
     * @param value The value of 'time_datetime'.
     * @return This builder.
     */
    public Builder setTimeDatetime(org.joda.time.DateTime value) {
      validate(fields()[60], value);
      this.time_datetime = value;
      fieldSetFlags()[60] = true;
      return this;
    }

    /**
     * Checks whether the 'time_datetime' field has been set.
     * yyyy-MM-dd'T'HH:mm:ss
     * @return True if the 'time_datetime' field has been set, false otherwise.
     */
    public boolean hasTimeDatetime() {
      return fieldSetFlags()[60];
    }


    /**
     * Clears the value of the 'time_datetime' field.
     * yyyy-MM-dd'T'HH:mm:ss
     * @return This builder.
     */
    public Builder clearTimeDatetime() {
      fieldSetFlags()[60] = false;
      return this;
    }

    /**
     * Gets the value of the 'time_millis' field.
     * 1970至今毫秒数
     * @return The value.
     */
    public Long getTimeMillis() {
      return time_millis;
    }

    /**
     * Sets the value of the 'time_millis' field.
     * 1970至今毫秒数
     * @param value The value of 'time_millis'.
     * @return This builder.
     */
    public Builder setTimeMillis(long value) {
      validate(fields()[61], value);
      this.time_millis = value;
      fieldSetFlags()[61] = true;
      return this;
    }

    /**
     * Checks whether the 'time_millis' field has been set.
     * 1970至今毫秒数
     * @return True if the 'time_millis' field has been set, false otherwise.
     */
    public boolean hasTimeMillis() {
      return fieldSetFlags()[61];
    }


    /**
     * Clears the value of the 'time_millis' field.
     * 1970至今毫秒数
     * @return This builder.
     */
    public Builder clearTimeMillis() {
      fieldSetFlags()[61] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public game_analytics_standard_events build() {
      try {
        game_analytics_standard_events record = new game_analytics_standard_events();
        record.event_id = fieldSetFlags()[0] ? this.event_id : (Long) defaultValue(fields()[0], record.getConversion(0));
        record.event_name = fieldSetFlags()[1] ? this.event_name : (CharSequence) defaultValue(fields()[1], record.getConversion(1));
        record.event_datasource = fieldSetFlags()[2] ? this.event_datasource : (CharSequence) defaultValue(fields()[2], record.getConversion(2));
        record.event_env = fieldSetFlags()[3] ? this.event_env : (CharSequence) defaultValue(fields()[3], record.getConversion(3));
        record.event_created_at = fieldSetFlags()[4] ? this.event_created_at : (org.joda.time.DateTime) defaultValue(fields()[4], record.getConversion(4));
        record.event_received_at = fieldSetFlags()[5] ? this.event_received_at : (org.joda.time.DateTime) defaultValue(fields()[5], record.getConversion(5));
        record.event_processed_at = fieldSetFlags()[6] ? this.event_processed_at : (org.joda.time.DateTime) defaultValue(fields()[6], record.getConversion(6));
        record.user_id = fieldSetFlags()[7] ? this.user_id : (Long) defaultValue(fields()[7], record.getConversion(7));
        record.user_age = fieldSetFlags()[8] ? this.user_age : (Integer) defaultValue(fields()[8], record.getConversion(8));
        record.user_age_range = fieldSetFlags()[9] ? this.user_age_range : (Integer) defaultValue(fields()[9], record.getConversion(9));
        record.user_gender = fieldSetFlags()[10] ? this.user_gender : (Integer) defaultValue(fields()[10], record.getConversion(10));
        record.user_is_new = fieldSetFlags()[11] ? this.user_is_new : (Boolean) defaultValue(fields()[11], record.getConversion(11));
        record.user_is_anonymous = fieldSetFlags()[12] ? this.user_is_anonymous : (Boolean) defaultValue(fields()[12], record.getConversion(12));
        record.user_last_session = fieldSetFlags()[13] ? this.user_last_session : (org.joda.time.DateTime) defaultValue(fields()[13], record.getConversion(13));
        record.client_id = fieldSetFlags()[14] ? this.client_id : (CharSequence) defaultValue(fields()[14], record.getConversion(14));
        record.device_id = fieldSetFlags()[15] ? this.device_id : (CharSequence) defaultValue(fields()[15], record.getConversion(15));
        record.device_model = fieldSetFlags()[16] ? this.device_model : (CharSequence) defaultValue(fields()[16], record.getConversion(16));
        record.device_brand = fieldSetFlags()[17] ? this.device_brand : (CharSequence) defaultValue(fields()[17], record.getConversion(17));
        record.device_family = fieldSetFlags()[18] ? this.device_family : (CharSequence) defaultValue(fields()[18], record.getConversion(18));
        record.device_is_new = fieldSetFlags()[19] ? this.device_is_new : (Boolean) defaultValue(fields()[19], record.getConversion(19));
        record.device_category = fieldSetFlags()[20] ? this.device_category : (CharSequence) defaultValue(fields()[20], record.getConversion(20));
        record.battery_level = fieldSetFlags()[21] ? this.battery_level : (Float) defaultValue(fields()[21], record.getConversion(21));
        record.battery_status = fieldSetFlags()[22] ? this.battery_status : (CharSequence) defaultValue(fields()[22], record.getConversion(22));
        record.browser_family = fieldSetFlags()[23] ? this.browser_family : (CharSequence) defaultValue(fields()[23], record.getConversion(23));
        record.browser_major = fieldSetFlags()[24] ? this.browser_major : (Integer) defaultValue(fields()[24], record.getConversion(24));
        record.browser_minor = fieldSetFlags()[25] ? this.browser_minor : (Integer) defaultValue(fields()[25], record.getConversion(25));
        record.browser_patch = fieldSetFlags()[26] ? this.browser_patch : (Integer) defaultValue(fields()[26], record.getConversion(26));
        record.browser_version = fieldSetFlags()[27] ? this.browser_version : (CharSequence) defaultValue(fields()[27], record.getConversion(27));
        record.browser_user_agent = fieldSetFlags()[28] ? this.browser_user_agent : (CharSequence) defaultValue(fields()[28], record.getConversion(28));
        record.os_family = fieldSetFlags()[29] ? this.os_family : (CharSequence) defaultValue(fields()[29], record.getConversion(29));
        record.os_major = fieldSetFlags()[30] ? this.os_major : (Integer) defaultValue(fields()[30], record.getConversion(30));
        record.os_minor = fieldSetFlags()[31] ? this.os_minor : (Integer) defaultValue(fields()[31], record.getConversion(31));
        record.os_patch = fieldSetFlags()[32] ? this.os_patch : (Integer) defaultValue(fields()[32], record.getConversion(32));
        record.os_version = fieldSetFlags()[33] ? this.os_version : (CharSequence) defaultValue(fields()[33], record.getConversion(33));
        record.network_operator = fieldSetFlags()[34] ? this.network_operator : (CharSequence) defaultValue(fields()[34], record.getConversion(34));
        record.network_mode = fieldSetFlags()[35] ? this.network_mode : (CharSequence) defaultValue(fields()[35], record.getConversion(35));
        record.network_country = fieldSetFlags()[36] ? this.network_country : (CharSequence) defaultValue(fields()[36], record.getConversion(36));
        record.network_region = fieldSetFlags()[37] ? this.network_region : (CharSequence) defaultValue(fields()[37], record.getConversion(37));
        record.network_city = fieldSetFlags()[38] ? this.network_city : (CharSequence) defaultValue(fields()[38], record.getConversion(38));
        record.network_ip = fieldSetFlags()[39] ? this.network_ip : (CharSequence) defaultValue(fields()[39], record.getConversion(39));
        record.network_time_zone = fieldSetFlags()[40] ? this.network_time_zone : (CharSequence) defaultValue(fields()[40], record.getConversion(40));
        record.network_longitude = fieldSetFlags()[41] ? this.network_longitude : (Double) defaultValue(fields()[41], record.getConversion(41));
        record.network_latitude = fieldSetFlags()[42] ? this.network_latitude : (Double) defaultValue(fields()[42], record.getConversion(42));
        record.app_id = fieldSetFlags()[43] ? this.app_id : (CharSequence) defaultValue(fields()[43], record.getConversion(43));
        record.app_name = fieldSetFlags()[44] ? this.app_name : (CharSequence) defaultValue(fields()[44], record.getConversion(44));
        record.app_major = fieldSetFlags()[45] ? this.app_major : (Integer) defaultValue(fields()[45], record.getConversion(45));
        record.app_minor = fieldSetFlags()[46] ? this.app_minor : (Integer) defaultValue(fields()[46], record.getConversion(46));
        record.app_patch = fieldSetFlags()[47] ? this.app_patch : (Integer) defaultValue(fields()[47], record.getConversion(47));
        record.app_version = fieldSetFlags()[48] ? this.app_version : (CharSequence) defaultValue(fields()[48], record.getConversion(48));
        record.app_installer_id = fieldSetFlags()[49] ? this.app_installer_id : (CharSequence) defaultValue(fields()[49], record.getConversion(49));
        record.logger_level = fieldSetFlags()[50] ? this.logger_level : (CharSequence) defaultValue(fields()[50], record.getConversion(50));
        record.ex_id = fieldSetFlags()[51] ? this.ex_id : (CharSequence) defaultValue(fields()[51], record.getConversion(51));
        record.ex_name = fieldSetFlags()[52] ? this.ex_name : (CharSequence) defaultValue(fields()[52], record.getConversion(52));
        record.ex_message = fieldSetFlags()[53] ? this.ex_message : (CharSequence) defaultValue(fields()[53], record.getConversion(53));
        record.ex_stacktrace = fieldSetFlags()[54] ? this.ex_stacktrace : (CharSequence) defaultValue(fields()[54], record.getConversion(54));
        record.ex_is_fatal = fieldSetFlags()[55] ? this.ex_is_fatal : (Boolean) defaultValue(fields()[55], record.getConversion(55));
        record.time_date_month = fieldSetFlags()[56] ? this.time_date_month : (org.joda.time.LocalDate) defaultValue(fields()[56], record.getConversion(56));
        record.time_date_week = fieldSetFlags()[57] ? this.time_date_week : (org.joda.time.LocalDate) defaultValue(fields()[57], record.getConversion(57));
        record.time_date_hour = fieldSetFlags()[58] ? this.time_date_hour : (org.joda.time.DateTime) defaultValue(fields()[58], record.getConversion(58));
        record.time_date_hour_minute = fieldSetFlags()[59] ? this.time_date_hour_minute : (org.joda.time.DateTime) defaultValue(fields()[59], record.getConversion(59));
        record.time_datetime = fieldSetFlags()[60] ? this.time_datetime : (org.joda.time.DateTime) defaultValue(fields()[60], record.getConversion(60));
        record.time_millis = fieldSetFlags()[61] ? this.time_millis : (Long) defaultValue(fields()[61], record.getConversion(61));
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<game_analytics_standard_events>
          WRITER$ = (org.apache.avro.io.DatumWriter<game_analytics_standard_events>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
          throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<game_analytics_standard_events>
          READER$ = (org.apache.avro.io.DatumReader<game_analytics_standard_events>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
          throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
